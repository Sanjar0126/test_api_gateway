// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/banner": {
            "get": {
                "description": "API for getting all banners",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banner"
                ],
                "summary": "Get All banners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllPromosModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/banner/{banner_id}": {
            "get": {
                "description": "API for getting banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banner"
                ],
                "summary": "Get banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "banner_id",
                        "name": "banner_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetBannerModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/branches": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting branches",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branch"
                ],
                "summary": "Get All Branches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllBranchesModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/branches/{branch_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting branch info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branch"
                ],
                "summary": "Get Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "branch_id",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetBranchModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/category": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting all category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Get All Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "parent_id",
                        "name": "parent_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "all",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "with_products",
                        "name": "with_products",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllCategoriesModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/category/{category_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Get Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetCategoryModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/check-point-geozone": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for checking if point inside geozone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geozone"
                ],
                "summary": "Check if point inside geozone",
                "parameters": [
                    {
                        "type": "number",
                        "description": "lat",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "lon",
                        "name": "lon",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CheckPointInsideGeozoneResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customer-addresses/{phone}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for taking all order addresses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Get Customer Order Addresses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "phone",
                        "name": "phone",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CustomerAddressesModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customer-profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Customer profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Customer Profile Information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetCustomerModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customer/bot-language": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "AttachBotLanguage",
                "parameters": [
                    {
                        "description": "lang",
                        "name": "lang",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BotLanguageModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetCustomerModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/confirm-login": {
            "post": {
                "description": "API that confirms sms code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Confirm Customer Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Platform",
                        "name": "Platform",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "confirm login",
                        "name": "confirm_phone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConfirmCustomerLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetCustomerModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/login": {
            "post": {
                "description": "API that checks whether customer exists\nand if exists sends sms to their number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Customer Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOK"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/phone": {
            "post": {
                "description": "API for getting customer by phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Get Customer By Phone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CustomerLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetCustomerModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/refresh-token": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Customer refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Customer Refresh Token",
                "parameters": [
                    {
                        "description": "refresh-token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/register": {
            "post": {
                "description": "Register - API for registering customers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "register",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/register-confirm": {
            "post": {
                "description": "Register - API for confirming and inserting user to DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Register confirm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Platform",
                        "name": "Platform",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "register_confirm",
                        "name": "register_confirm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterConfirmModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetCustomerModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/update-tg-chat-id": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Tg chat id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tg chat id"
                ],
                "summary": "Tg chat id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/{customer_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting customer info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Get Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer_id",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetCustomerModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Update Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer_id",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "customer",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCustomerModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetCustomerModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for deleting customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Delete Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer_id",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOK"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/{customer_id}/last-order": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting customer last order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Get Customer Last Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer_id",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetOrderModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/customers/{customer_id}/orders": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting customer orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customer"
                ],
                "summary": "Get Customer Orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer_id",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "status_ids",
                        "name": "status_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start_date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end_date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "review_seen",
                        "name": "review_seen",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllOrderModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/delivery-price": {
            "get": {
                "description": "API for getting delivery price for shipper",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fare"
                ],
                "summary": "Get Delivery Price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeliveryPriceModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/fares/compute-price": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for computing delivery price",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fare"
                ],
                "summary": "Compute Delivery Price",
                "parameters": [
                    {
                        "description": "price",
                        "name": "price",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ComputeDeliveryPriceRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ComputeDeliveryPriceResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/geozones": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting geozones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geozone"
                ],
                "summary": "Get Geozones",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllGeozonesModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for creating geozone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geozone"
                ],
                "summary": "Create Gezone",
                "parameters": [
                    {
                        "description": "geozone",
                        "name": "geozone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateGeozoneModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetGeozoneModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/geozones/{geozone_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting geozone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geozone"
                ],
                "summary": "Get Geozone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "geozone_id",
                        "name": "geozone_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetGeozoneModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating geozone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geozone"
                ],
                "summary": "Update Geozone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "geozone_id",
                        "name": "geozone_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "geozone",
                        "name": "geozone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateGeozoneModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOK"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for deleting geozone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geozone"
                ],
                "summary": "Delete Geozone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "geozone_id",
                        "name": "geozone_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOK"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/nearest-branch": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting branch info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "branch"
                ],
                "summary": "Get Nearest Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "long",
                        "name": "long",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lat",
                        "name": "lat",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetBranchModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/ondemand-order": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for creating on demand order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Create On Demand Order",
                "parameters": [
                    {
                        "description": "order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateOnDemandOrderModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateOnDemandOrderModelResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/order": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting customer orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get Customer Orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "status_ids",
                        "name": "status_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start_date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end_date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "review_seen",
                        "name": "review_seen",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllOrderModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/order-review/{order_id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating order review seen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Update Order Review Seen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order_id",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "order_review",
                        "name": "order_review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateOrderReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateOrderReview"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/order-statuses": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting order statuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get All Possible Order Statuses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetStatuses"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/order/{order_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order_id",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetOrderModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/order/{order_id}/review": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for creating review for order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Create Review For An Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order_id",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "order_review",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrderReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/payment/click-link": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for generating click link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Generate click link",
                "parameters": [
                    {
                        "description": "generate-link",
                        "name": "generate-link",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenerateLinkRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenerateLinkResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/payment/payme-link": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for generating payme link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Generate payme link",
                "parameters": [
                    {
                        "description": "generate-link",
                        "name": "generate-link",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GenerateLinkRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenerateLinkResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/product": {
            "get": {
                "description": "API for getting all product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get All Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllProductsModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/product/{product_id}": {
            "get": {
                "description": "API for getting a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "product_id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetProductModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/promo": {
            "get": {
                "description": "API for getting promo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "promo"
                ],
                "summary": "Get All promos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shipper",
                        "name": "Shipper",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllPromosModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/promo/{promo_id}": {
            "get": {
                "description": "API for getting promo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "promo"
                ],
                "summary": "Get promo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "promo_id",
                        "name": "promo_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetPromoModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/review": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Get All reviews",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAllReviewsModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/review/{review_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Get review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review_id",
                        "name": "review_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/shippers/{shipper_id}": {
            "get": {
                "description": "API for getting shipper info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shipper"
                ],
                "summary": "Get Shipper",
                "parameters": [
                    {
                        "type": "string",
                        "description": "shipper_id",
                        "name": "shipper_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetShipperModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/telegram": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for pushing to telegram users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "telegram"
                ],
                "summary": "Push Telegram shipper users",
                "parameters": [
                    {
                        "description": "pushtelegram",
                        "name": "pushtelegram",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PushTelegramModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseOK"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/user_reviews": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for creating UserReviews",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserReviews"
                ],
                "summary": "Create UserReviews",
                "parameters": [
                    {
                        "description": "userReviews",
                        "name": "userReviews",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserReviewsModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BotLanguageModel": {
            "type": "object",
            "properties": {
                "lang": {
                    "type": "string"
                }
            }
        },
        "models.CheckPointInsideGeozoneResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "boolean"
                }
            }
        },
        "models.ChildCategoryModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "description_v2": {
                    "$ref": "#/definitions/models.Language"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order_no": {
                    "type": "string",
                    "example": "0"
                },
                "parent_id": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetProductModel"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "$ref": "#/definitions/models.Language"
                }
            }
        },
        "models.ComputeDeliveryPriceRequestModel": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "lat": {
                    "type": "number"
                },
                "long": {
                    "type": "number"
                }
            }
        },
        "models.ComputeDeliveryPriceResponseModel": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.ConfirmCustomerLoginRequest": {
            "type": "object",
            "properties": {
                "bot_language": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "fcm_token": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tg_chat_id": {
                    "type": "string"
                }
            }
        },
        "models.CourierModel": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "vehicle_number": {
                    "type": "string"
                }
            }
        },
        "models.CreateGeozoneModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Point"
                    }
                }
            }
        },
        "models.CreateOnDemandOrderModel": {
            "type": "object",
            "properties": {
                "apartment": {
                    "type": "string"
                },
                "building": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "co_delivery_price": {
                    "type": "number",
                    "example": 10000
                },
                "delivery_time": {
                    "type": "string"
                },
                "delivery_type": {
                    "type": "string",
                    "example": "delivery"
                },
                "description": {
                    "type": "string"
                },
                "extra_phone_number": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "paid": {
                    "type": "boolean"
                },
                "payment_type": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "branch_id": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "products": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.productOnDemandModel"
                                }
                            }
                        }
                    }
                },
                "to_address": {
                    "type": "string",
                    "example": "Hamid Olimjon maydoni 10A dom 40-kvartira"
                },
                "to_location": {
                    "$ref": "#/definitions/models.Location"
                }
            }
        },
        "models.CreateOnDemandOrderModelResponse": {
            "type": "object",
            "properties": {
                "external_order_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_link": {
                    "type": "string"
                }
            }
        },
        "models.CreateUserReviewsModel": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "string"
                },
                "branch_name": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string"
                },
                "client_phone": {
                    "type": "string"
                },
                "courier_id": {
                    "type": "string"
                },
                "courier_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "delivery_time": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "operator_id": {
                    "type": "string"
                },
                "operator_name": {
                    "type": "string"
                },
                "order_num": {
                    "type": "string"
                },
                "related_subject": {
                    "type": "string"
                },
                "review_id": {
                    "type": "string"
                },
                "review_message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.CustomerAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "apartment": {
                    "type": "string"
                },
                "building": {
                    "type": "string"
                },
                "extra_phone_number": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                }
            }
        },
        "models.CustomerAddressesModel": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CustomerAddress"
                    }
                }
            }
        },
        "models.CustomerLoginRequest": {
            "type": "object",
            "properties": {
                "phone": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "models.DeliveryPriceModel": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number"
                }
            }
        },
        "models.GenerateLinkRequestModel": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "order_num": {
                    "type": "integer"
                }
            }
        },
        "models.GenerateLinkResponseModel": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "models.GetAllBranchesModel": {
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetBranchModel"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "models.GetAllCategoriesModel": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetCategoryModel"
                    }
                },
                "count": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "models.GetAllGeozonesModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "geozones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetGeozoneModel"
                    }
                }
            }
        },
        "models.GetAllOrderModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "string",
                    "example": "0"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "apartment": {
                                "type": "string"
                            },
                            "building": {
                                "type": "string"
                            },
                            "client_id": {
                                "type": "string"
                            },
                            "client_name": {
                                "type": "string",
                                "example": "Oybek"
                            },
                            "client_phone_number": {
                                "type": "string",
                                "example": "998998765432"
                            },
                            "co_delivery_price": {
                                "type": "number",
                                "example": 10000
                            },
                            "courier": {
                                "$ref": "#/definitions/models.CourierModel"
                            },
                            "courier_id": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string"
                            },
                            "delivery_time": {
                                "type": "string",
                                "example": "12:00"
                            },
                            "delivery_type": {
                                "type": "string",
                                "example": "delivery"
                            },
                            "description": {
                                "type": "string"
                            },
                            "external_order_id": {
                                "type": "string"
                            },
                            "extra_phone_number": {
                                "type": "string"
                            },
                            "finished_at": {
                                "type": "string"
                            },
                            "floor": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "order_amount": {
                                "type": "integer"
                            },
                            "paid": {
                                "type": "boolean"
                            },
                            "payment_type": {
                                "type": "string"
                            },
                            "rating": {
                                "type": "string"
                            },
                            "review": {
                                "type": "string"
                            },
                            "source": {
                                "type": "string"
                            },
                            "status_id": {
                                "type": "string"
                            },
                            "status_notes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.StatusNote"
                                }
                            },
                            "steps": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.stepDemandModel"
                                }
                            },
                            "to_address": {
                                "type": "string",
                                "example": "Hamid Olimjon maydoni 10A dom 40-kvartira"
                            },
                            "to_location": {
                                "$ref": "#/definitions/models.Location"
                            }
                        }
                    }
                }
            }
        },
        "models.GetAllProductsModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "string",
                    "example": "0"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetProductModel"
                    }
                }
            }
        },
        "models.GetAllPromosModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "promos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetPromoModel"
                    }
                }
            }
        },
        "models.GetAllReviewsModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetReviewModel"
                    }
                }
            }
        },
        "models.GetBannerModel": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "shipper_id": {
                    "type": "string"
                },
                "title": {
                    "$ref": "#/definitions/models.Language"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.GetBranchModel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "shipper_id": {
                    "type": "string"
                },
                "work_hours": {
                    "type": "string",
                    "example": "9am-10pm"
                }
            }
        },
        "models.GetCategoryModel": {
            "type": "object",
            "properties": {
                "child_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ChildCategoryModel"
                    }
                },
                "description": {
                    "type": "string"
                },
                "description_v2": {
                    "$ref": "#/definitions/models.Language"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order_no": {
                    "type": "string",
                    "example": "0"
                },
                "parent_id": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GetProductModel"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "$ref": "#/definitions/models.Language"
                }
            }
        },
        "models.GetCustomerModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "fcm_token": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_blocked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tg_chat_id": {
                    "type": "string"
                }
            }
        },
        "models.GetGeozoneModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Point"
                    }
                }
            }
        },
        "models.GetOrderModel": {
            "type": "object",
            "properties": {
                "apartment": {
                    "type": "string"
                },
                "building": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_name": {
                    "type": "string",
                    "example": "Oybek"
                },
                "client_phone_number": {
                    "type": "string",
                    "example": "998998765432"
                },
                "co_delivery_price": {
                    "type": "number",
                    "example": 10000
                },
                "courier": {
                    "$ref": "#/definitions/models.CourierModel"
                },
                "courier_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "delivery_time": {
                    "type": "string",
                    "example": "12:00"
                },
                "delivery_type": {
                    "type": "string",
                    "example": "delivery"
                },
                "description": {
                    "type": "string"
                },
                "external_order_id": {
                    "type": "string"
                },
                "extra_phone_number": {
                    "type": "string"
                },
                "finished_at": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order_amount": {
                    "type": "string",
                    "example": "0"
                },
                "paid": {
                    "type": "boolean"
                },
                "payment_type": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "review": {
                    "type": "string"
                },
                "shipper_user": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            }
                        }
                    }
                },
                "source": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                },
                "status_notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.StatusNote"
                    }
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "type": "string"
                            },
                            "branch_id": {
                                "type": "string"
                            },
                            "branch_name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "destination_address": {
                                "type": "string"
                            },
                            "external_step_id": {
                                "type": "string",
                                "example": "0"
                            },
                            "id": {
                                "type": "string"
                            },
                            "location": {
                                "$ref": "#/definitions/models.Location"
                            },
                            "phone_number": {
                                "type": "string"
                            },
                            "products": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "external_product_id": {
                                            "type": "string",
                                            "example": "1234"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Choyxona Osh"
                                        },
                                        "price": {
                                            "type": "number",
                                            "example": 25000
                                        },
                                        "product_id": {
                                            "type": "string"
                                        },
                                        "quantity": {
                                            "type": "number",
                                            "example": 2
                                        },
                                        "total_amount": {
                                            "type": "string",
                                            "example": "0"
                                        }
                                    }
                                }
                            },
                            "status": {
                                "type": "string"
                            },
                            "step_amount": {
                                "type": "string",
                                "example": "0"
                            }
                        }
                    }
                },
                "to_address": {
                    "type": "string",
                    "example": "Hamid Olimjon maydoni 10A dom 40-kvartira"
                },
                "to_location": {
                    "$ref": "#/definitions/models.Location"
                }
            }
        },
        "models.GetProductModel": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "description_v2": {
                    "$ref": "#/definitions/models.Language"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order_no": {
                    "type": "string",
                    "example": "0"
                },
                "price": {
                    "type": "string",
                    "example": "0"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "$ref": "#/definitions/models.Language"
                }
            }
        },
        "models.GetPromoModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/models.Language"
                },
                "end_time": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "start_time": {
                    "type": "string"
                },
                "title": {
                    "$ref": "#/definitions/models.Language"
                }
            }
        },
        "models.GetReviewModel": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "$ref": "#/definitions/models.Language"
                },
                "related_subject": {
                    "type": "string"
                },
                "shipper_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.GetShipperModel": {
            "type": "object",
            "properties": {
                "call_center_tg": {
                    "type": "string",
                    "example": "@admin"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string"
                },
                "manu_image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                },
                "work_hour_end": {
                    "type": "string",
                    "example": "00:00"
                },
                "work_hour_start": {
                    "type": "string",
                    "example": "05:00"
                }
            }
        },
        "models.GetStatuses": {
            "type": "object",
            "properties": {
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Status"
                    }
                }
            }
        },
        "models.Language": {
            "type": "object",
            "properties": {
                "en": {
                    "type": "string"
                },
                "ru": {
                    "type": "string"
                },
                "uz": {
                    "type": "string"
                }
            }
        },
        "models.Location": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number",
                    "example": 40.123
                },
                "long": {
                    "type": "number",
                    "example": 60.123
                }
            }
        },
        "models.OrderReview": {
            "type": "object",
            "properties": {
                "rating": {
                    "type": "integer"
                },
                "review": {
                    "type": "string"
                }
            }
        },
        "models.Point": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                }
            }
        },
        "models.PushTelegramModel": {
            "type": "object",
            "properties": {
                "animation": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "video": {
                    "type": "string"
                }
            }
        },
        "models.RefreshTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "models.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "models.RegisterConfirmModel": {
            "type": "object",
            "properties": {
                "bot_language": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "fcm_token": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tg_chat_id": {
                    "type": "string"
                }
            }
        },
        "models.RegisterModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "object"
                }
            }
        },
        "models.ResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object"
                }
            }
        },
        "models.ResponseOK": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "object"
                }
            }
        },
        "models.Status": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.StatusNote": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "models.UpdateCustomerModel": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.UpdateGeozoneModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Point"
                    }
                }
            }
        },
        "models.UpdateOrderReview": {
            "type": "object",
            "properties": {
                "seen": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.productOnDemandModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "price": {
                    "type": "string",
                    "example": "50000"
                },
                "product_id": {
                    "type": "string",
                    "example": "a010f178-da52-4373-aacd-e477d871e27a"
                },
                "quantity": {
                    "type": "number",
                    "example": 5
                }
            }
        },
        "models.stepDemandModel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "branch_id": {
                    "type": "string"
                },
                "branch_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination_address": {
                    "type": "string"
                },
                "external_step_id": {
                    "type": "string",
                    "example": "0"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
