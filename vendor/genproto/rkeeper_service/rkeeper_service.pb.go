// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rkeeper_service.proto

package rkeeper_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateRequest struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	RkeeperOrderId       string   `protobuf:"bytes,2,opt,name=rkeeper_order_id,json=rkeeperOrderId,proto3" json:"rkeeper_order_id,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	BranchId             string   `protobuf:"bytes,4,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{0}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *CreateRequest) GetRkeeperOrderId() string {
	if m != nil {
		return m.RkeeperOrderId
	}
	return ""
}

func (m *CreateRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *CreateRequest) GetBranchId() string {
	if m != nil {
		return m.BranchId
	}
	return ""
}

type SaveRequest struct {
	RkeeperOrderId       string   `protobuf:"bytes,1,opt,name=rkeeper_order_id,json=rkeeperOrderId,proto3" json:"rkeeper_order_id,omitempty"`
	OrderId              string   `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveRequest) Reset()         { *m = SaveRequest{} }
func (m *SaveRequest) String() string { return proto.CompactTextString(m) }
func (*SaveRequest) ProtoMessage()    {}
func (*SaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{1}
}

func (m *SaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveRequest.Unmarshal(m, b)
}
func (m *SaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveRequest.Marshal(b, m, deterministic)
}
func (m *SaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveRequest.Merge(m, src)
}
func (m *SaveRequest) XXX_Size() int {
	return xxx_messageInfo_SaveRequest.Size(m)
}
func (m *SaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveRequest proto.InternalMessageInfo

func (m *SaveRequest) GetRkeeperOrderId() string {
	if m != nil {
		return m.RkeeperOrderId
	}
	return ""
}

func (m *SaveRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *SaveRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type SaveResponse struct {
	RkeeperOrderId       string   `protobuf:"bytes,1,opt,name=rkeeper_order_id,json=rkeeperOrderId,proto3" json:"rkeeper_order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveResponse) Reset()         { *m = SaveResponse{} }
func (m *SaveResponse) String() string { return proto.CompactTextString(m) }
func (*SaveResponse) ProtoMessage()    {}
func (*SaveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{2}
}

func (m *SaveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveResponse.Unmarshal(m, b)
}
func (m *SaveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveResponse.Marshal(b, m, deterministic)
}
func (m *SaveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveResponse.Merge(m, src)
}
func (m *SaveResponse) XXX_Size() int {
	return xxx_messageInfo_SaveResponse.Size(m)
}
func (m *SaveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SaveResponse proto.InternalMessageInfo

func (m *SaveResponse) GetRkeeperOrderId() string {
	if m != nil {
		return m.RkeeperOrderId
	}
	return ""
}

type CreateResponse struct {
	RkeeperBranch        *RkeeperBranch `protobuf:"bytes,1,opt,name=rkeeper_branch,json=rkeeperBranch,proto3" json:"rkeeper_branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{3}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetRkeeperBranch() *RkeeperBranch {
	if m != nil {
		return m.RkeeperBranch
	}
	return nil
}

type CreateRkeeperOrderResponse struct {
	RkeeperOrder         *RkeeperOrder `protobuf:"bytes,1,opt,name=rkeeper_order,json=rkeeperOrder,proto3" json:"rkeeper_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateRkeeperOrderResponse) Reset()         { *m = CreateRkeeperOrderResponse{} }
func (m *CreateRkeeperOrderResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRkeeperOrderResponse) ProtoMessage()    {}
func (*CreateRkeeperOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{4}
}

func (m *CreateRkeeperOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRkeeperOrderResponse.Unmarshal(m, b)
}
func (m *CreateRkeeperOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRkeeperOrderResponse.Marshal(b, m, deterministic)
}
func (m *CreateRkeeperOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRkeeperOrderResponse.Merge(m, src)
}
func (m *CreateRkeeperOrderResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRkeeperOrderResponse.Size(m)
}
func (m *CreateRkeeperOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRkeeperOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRkeeperOrderResponse proto.InternalMessageInfo

func (m *CreateRkeeperOrderResponse) GetRkeeperOrder() *RkeeperOrder {
	if m != nil {
		return m.RkeeperOrder
	}
	return nil
}

type GetRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShipperId            string   `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{5}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type GetAllRkeeperBranchesRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllRkeeperBranchesRequest) Reset()         { *m = GetAllRkeeperBranchesRequest{} }
func (m *GetAllRkeeperBranchesRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllRkeeperBranchesRequest) ProtoMessage()    {}
func (*GetAllRkeeperBranchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{6}
}

func (m *GetAllRkeeperBranchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllRkeeperBranchesRequest.Unmarshal(m, b)
}
func (m *GetAllRkeeperBranchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllRkeeperBranchesRequest.Marshal(b, m, deterministic)
}
func (m *GetAllRkeeperBranchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllRkeeperBranchesRequest.Merge(m, src)
}
func (m *GetAllRkeeperBranchesRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllRkeeperBranchesRequest.Size(m)
}
func (m *GetAllRkeeperBranchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllRkeeperBranchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllRkeeperBranchesRequest proto.InternalMessageInfo

func (m *GetAllRkeeperBranchesRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllRkeeperBranchesRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllRkeeperBranchesRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type GetAllRkeeperBranchesResponse struct {
	RkeeperBranches      []*RkeeperBranch `protobuf:"bytes,1,rep,name=rkeeper_branches,json=rkeeperBranches,proto3" json:"rkeeper_branches,omitempty"`
	Count                uint64           `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetAllRkeeperBranchesResponse) Reset()         { *m = GetAllRkeeperBranchesResponse{} }
func (m *GetAllRkeeperBranchesResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllRkeeperBranchesResponse) ProtoMessage()    {}
func (*GetAllRkeeperBranchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{7}
}

func (m *GetAllRkeeperBranchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllRkeeperBranchesResponse.Unmarshal(m, b)
}
func (m *GetAllRkeeperBranchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllRkeeperBranchesResponse.Marshal(b, m, deterministic)
}
func (m *GetAllRkeeperBranchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllRkeeperBranchesResponse.Merge(m, src)
}
func (m *GetAllRkeeperBranchesResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllRkeeperBranchesResponse.Size(m)
}
func (m *GetAllRkeeperBranchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllRkeeperBranchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllRkeeperBranchesResponse proto.InternalMessageInfo

func (m *GetAllRkeeperBranchesResponse) GetRkeeperBranches() []*RkeeperBranch {
	if m != nil {
		return m.RkeeperBranches
	}
	return nil
}

func (m *GetAllRkeeperBranchesResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetRkeeperBranchMenuResponse struct {
	Items                []*Menu  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Count                uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRkeeperBranchMenuResponse) Reset()         { *m = GetRkeeperBranchMenuResponse{} }
func (m *GetRkeeperBranchMenuResponse) String() string { return proto.CompactTextString(m) }
func (*GetRkeeperBranchMenuResponse) ProtoMessage()    {}
func (*GetRkeeperBranchMenuResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{8}
}

func (m *GetRkeeperBranchMenuResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRkeeperBranchMenuResponse.Unmarshal(m, b)
}
func (m *GetRkeeperBranchMenuResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRkeeperBranchMenuResponse.Marshal(b, m, deterministic)
}
func (m *GetRkeeperBranchMenuResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRkeeperBranchMenuResponse.Merge(m, src)
}
func (m *GetRkeeperBranchMenuResponse) XXX_Size() int {
	return xxx_messageInfo_GetRkeeperBranchMenuResponse.Size(m)
}
func (m *GetRkeeperBranchMenuResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRkeeperBranchMenuResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRkeeperBranchMenuResponse proto.InternalMessageInfo

func (m *GetRkeeperBranchMenuResponse) GetItems() []*Menu {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *GetRkeeperBranchMenuResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetRkeeperBranchMenuRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	BranchId             string   `protobuf:"bytes,4,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRkeeperBranchMenuRequest) Reset()         { *m = GetRkeeperBranchMenuRequest{} }
func (m *GetRkeeperBranchMenuRequest) String() string { return proto.CompactTextString(m) }
func (*GetRkeeperBranchMenuRequest) ProtoMessage()    {}
func (*GetRkeeperBranchMenuRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e5814753f7f0a6f, []int{9}
}

func (m *GetRkeeperBranchMenuRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRkeeperBranchMenuRequest.Unmarshal(m, b)
}
func (m *GetRkeeperBranchMenuRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRkeeperBranchMenuRequest.Marshal(b, m, deterministic)
}
func (m *GetRkeeperBranchMenuRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRkeeperBranchMenuRequest.Merge(m, src)
}
func (m *GetRkeeperBranchMenuRequest) XXX_Size() int {
	return xxx_messageInfo_GetRkeeperBranchMenuRequest.Size(m)
}
func (m *GetRkeeperBranchMenuRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRkeeperBranchMenuRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRkeeperBranchMenuRequest proto.InternalMessageInfo

func (m *GetRkeeperBranchMenuRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetRkeeperBranchMenuRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetRkeeperBranchMenuRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetRkeeperBranchMenuRequest) GetBranchId() string {
	if m != nil {
		return m.BranchId
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "genproto.CreateRequest")
	proto.RegisterType((*SaveRequest)(nil), "genproto.SaveRequest")
	proto.RegisterType((*SaveResponse)(nil), "genproto.SaveResponse")
	proto.RegisterType((*CreateResponse)(nil), "genproto.CreateResponse")
	proto.RegisterType((*CreateRkeeperOrderResponse)(nil), "genproto.CreateRkeeperOrderResponse")
	proto.RegisterType((*GetRequest)(nil), "genproto.GetRequest")
	proto.RegisterType((*GetAllRkeeperBranchesRequest)(nil), "genproto.GetAllRkeeperBranchesRequest")
	proto.RegisterType((*GetAllRkeeperBranchesResponse)(nil), "genproto.GetAllRkeeperBranchesResponse")
	proto.RegisterType((*GetRkeeperBranchMenuResponse)(nil), "genproto.GetRkeeperBranchMenuResponse")
	proto.RegisterType((*GetRkeeperBranchMenuRequest)(nil), "genproto.GetRkeeperBranchMenuRequest")
}

func init() { proto.RegisterFile("rkeeper_service.proto", fileDescriptor_8e5814753f7f0a6f) }

var fileDescriptor_8e5814753f7f0a6f = []byte{
	// 553 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x8d, 0x5d, 0x97, 0x36, 0xd3, 0xc6, 0x54, 0xdb, 0x52, 0x82, 0x43, 0xa5, 0x6a, 0x55, 0xa0,
	0x27, 0x47, 0x2a, 0x17, 0xa4, 0x4a, 0x48, 0x84, 0x56, 0x51, 0x90, 0x10, 0xc8, 0x55, 0x0f, 0xe4,
	0x12, 0x25, 0xf1, 0xe0, 0x5a, 0x38, 0xb6, 0x6b, 0x3b, 0x95, 0x7a, 0xe6, 0x0f, 0xf0, 0xd7, 0xf8,
	0x47, 0x28, 0xfb, 0xe1, 0x78, 0x1d, 0xc7, 0xe1, 0xd0, 0x9b, 0x67, 0xe7, 0xed, 0x7b, 0x6f, 0x66,
	0xec, 0x31, 0xbc, 0x48, 0x7e, 0x21, 0xc6, 0x98, 0x8c, 0x52, 0x4c, 0x1e, 0xfc, 0x29, 0xda, 0x71,
	0x12, 0x65, 0x11, 0xd9, 0xf5, 0x30, 0x64, 0x4f, 0x56, 0xc7, 0x8b, 0x22, 0x2f, 0xc0, 0x2e, 0x8b,
	0x26, 0xf3, 0x9f, 0x5d, 0x9c, 0xc5, 0xd9, 0x23, 0x87, 0x59, 0x2d, 0x71, 0x9b, 0x87, 0xf4, 0x8f,
	0x06, 0xad, 0xcf, 0x09, 0x8e, 0x33, 0x74, 0xf0, 0x7e, 0x8e, 0x69, 0x46, 0x5e, 0xc1, 0x6e, 0x94,
	0xb8, 0x98, 0x8c, 0x7c, 0xb7, 0xad, 0x9d, 0x6a, 0xe7, 0x4d, 0x67, 0x87, 0xc5, 0x03, 0x97, 0x9c,
	0xc3, 0x81, 0xd4, 0xce, 0x21, 0x3a, 0x83, 0x98, 0xe2, 0xfc, 0x9b, 0x40, 0x9e, 0x00, 0xa4, 0x77,
	0x7e, 0x1c, 0x73, 0xcc, 0x16, 0xc3, 0x34, 0xc5, 0xc9, 0xc0, 0x25, 0x1d, 0x68, 0x4e, 0x92, 0x71,
	0x38, 0xbd, 0x5b, 0x64, 0x0d, 0x96, 0xdd, 0xe5, 0x07, 0x03, 0x97, 0xde, 0xc3, 0xde, 0xcd, 0xf8,
	0x21, 0xf7, 0x53, 0x25, 0xaa, 0x55, 0x8a, 0x16, 0x9d, 0xeb, 0xaa, 0xf3, 0x7a, 0x3f, 0xf4, 0x03,
	0xec, 0x73, 0xc9, 0x34, 0x8e, 0xc2, 0x14, 0xff, 0x5f, 0x93, 0x7e, 0x07, 0x53, 0xb6, 0x4f, 0xdc,
	0xfd, 0x08, 0x12, 0x33, 0xe2, 0x25, 0xb1, 0x9b, 0x7b, 0x17, 0x2f, 0x6d, 0x39, 0x20, 0xdb, 0xe1,
	0xf9, 0x1e, 0x4b, 0x3b, 0x72, 0x22, 0x3c, 0xa4, 0x3f, 0xc0, 0x12, 0x8c, 0x05, 0xa5, 0x9c, 0xfd,
	0x12, 0x5a, 0x8a, 0x33, 0x41, 0x7e, 0xbc, 0x42, 0xce, 0xaf, 0xed, 0x17, 0xed, 0xd2, 0x4b, 0x80,
	0x3e, 0x66, 0xb2, 0xb1, 0x26, 0xe8, 0x79, 0x59, 0xba, 0x5f, 0xee, 0x91, 0x5e, 0xee, 0x91, 0x07,
	0xaf, 0xfb, 0x98, 0x7d, 0x0a, 0x02, 0xc5, 0x3d, 0xa6, 0x92, 0x8e, 0x80, 0x11, 0x8f, 0x3d, 0x64,
	0x84, 0x86, 0xc3, 0x9e, 0xc9, 0x11, 0x6c, 0x07, 0xfe, 0xcc, 0xcf, 0x18, 0x9b, 0xe1, 0xf0, 0x60,
	0xd3, 0x30, 0x1e, 0xe1, 0x64, 0x8d, 0x90, 0xe8, 0x41, 0x6f, 0x39, 0x9d, 0x89, 0xc8, 0xb5, 0xb5,
	0xd3, 0xad, 0xba, 0x1e, 0x3f, 0x4f, 0x54, 0xae, 0x85, 0xb3, 0x69, 0x34, 0x0f, 0x73, 0x67, 0x2c,
	0xa0, 0x43, 0x56, 0xa3, 0x72, 0xf5, 0x2b, 0x86, 0xf3, 0x5c, 0xf9, 0x0c, 0xb6, 0xfd, 0x0c, 0x67,
	0x52, 0xce, 0x5c, 0xca, 0x31, 0x18, 0x4f, 0xae, 0xe1, 0xfe, 0xad, 0x41, 0xa7, 0x9a, 0xfc, 0x69,
	0xfb, 0x57, 0xfb, 0x71, 0x5d, 0xfc, 0x35, 0xc0, 0x14, 0x16, 0x6e, 0xf8, 0xfa, 0x20, 0x43, 0xd8,
	0xe9, 0x63, 0xb6, 0xb0, 0x42, 0xde, 0x2c, 0x0b, 0xaa, 0xb1, 0x6a, 0xbd, 0xdd, 0x04, 0xe3, 0xed,
	0xa2, 0x0d, 0xf2, 0x05, 0x0e, 0x95, 0x97, 0x99, 0x83, 0xc8, 0xba, 0x39, 0x59, 0xed, 0x65, 0x42,
	0xfd, 0xac, 0x68, 0x83, 0x5c, 0xc1, 0x41, 0x59, 0x8d, 0x1c, 0xa9, 0x4e, 0x84, 0xbf, 0x3a, 0x16,
	0x0f, 0x48, 0x99, 0x05, 0x53, 0xa2, 0x56, 0xb4, 0xf6, 0x25, 0xb7, 0xde, 0x6d, 0xc4, 0x15, 0x4b,
	0xbf, 0x8d, 0xdd, 0xa7, 0x29, 0xfd, 0x1a, 0x0e, 0xaf, 0x30, 0xc0, 0x32, 0x57, 0x75, 0xf5, 0xc7,
	0x36, 0xdf, 0xff, 0xb6, 0xdc, 0xff, 0xf6, 0xf5, 0x62, 0xff, 0xd3, 0x06, 0xb9, 0x05, 0xb2, 0xba,
	0x5a, 0x8a, 0x8e, 0x94, 0x3f, 0x81, 0x75, 0xb6, 0x92, 0xa8, 0xd8, 0x48, 0xb4, 0xd1, 0xb3, 0x86,
	0x6d, 0x09, 0xec, 0x96, 0xfe, 0x4d, 0x93, 0x67, 0xec, 0xf8, 0xfd, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x22, 0xa2, 0x4c, 0x60, 0xb5, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RkeeperServiceClient is the client API for RkeeperService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RkeeperServiceClient interface {
	GetMenu(ctx context.Context, in *GetRkeeperBranchMenuRequest, opts ...grpc.CallOption) (*GetRkeeperBranchMenuResponse, error)
	CreateRkeeperBranch(ctx context.Context, in *RkeeperBranch, opts ...grpc.CallOption) (*CreateResponse, error)
	GetRkeeperBranch(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	GetRkeeperBranches(ctx context.Context, in *GetAllRkeeperBranchesRequest, opts ...grpc.CallOption) (*GetAllRkeeperBranchesResponse, error)
	UpdateRkeeperBranch(ctx context.Context, in *RkeeperBranch, opts ...grpc.CallOption) (*CreateResponse, error)
	DeleteRkeeperBranch(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CreateRkeeperOrder(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateRkeeperOrderResponse, error)
}

type rkeeperServiceClient struct {
	cc *grpc.ClientConn
}

func NewRkeeperServiceClient(cc *grpc.ClientConn) RkeeperServiceClient {
	return &rkeeperServiceClient{cc}
}

func (c *rkeeperServiceClient) GetMenu(ctx context.Context, in *GetRkeeperBranchMenuRequest, opts ...grpc.CallOption) (*GetRkeeperBranchMenuResponse, error) {
	out := new(GetRkeeperBranchMenuResponse)
	err := c.cc.Invoke(ctx, "/genproto.RkeeperService/GetMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkeeperServiceClient) CreateRkeeperBranch(ctx context.Context, in *RkeeperBranch, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/genproto.RkeeperService/CreateRkeeperBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkeeperServiceClient) GetRkeeperBranch(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/genproto.RkeeperService/GetRkeeperBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkeeperServiceClient) GetRkeeperBranches(ctx context.Context, in *GetAllRkeeperBranchesRequest, opts ...grpc.CallOption) (*GetAllRkeeperBranchesResponse, error) {
	out := new(GetAllRkeeperBranchesResponse)
	err := c.cc.Invoke(ctx, "/genproto.RkeeperService/GetRkeeperBranches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkeeperServiceClient) UpdateRkeeperBranch(ctx context.Context, in *RkeeperBranch, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/genproto.RkeeperService/UpdateRkeeperBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkeeperServiceClient) DeleteRkeeperBranch(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.RkeeperService/DeleteRkeeperBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rkeeperServiceClient) CreateRkeeperOrder(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateRkeeperOrderResponse, error) {
	out := new(CreateRkeeperOrderResponse)
	err := c.cc.Invoke(ctx, "/genproto.RkeeperService/CreateRkeeperOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RkeeperServiceServer is the server API for RkeeperService service.
type RkeeperServiceServer interface {
	GetMenu(context.Context, *GetRkeeperBranchMenuRequest) (*GetRkeeperBranchMenuResponse, error)
	CreateRkeeperBranch(context.Context, *RkeeperBranch) (*CreateResponse, error)
	GetRkeeperBranch(context.Context, *GetRequest) (*CreateResponse, error)
	GetRkeeperBranches(context.Context, *GetAllRkeeperBranchesRequest) (*GetAllRkeeperBranchesResponse, error)
	UpdateRkeeperBranch(context.Context, *RkeeperBranch) (*CreateResponse, error)
	DeleteRkeeperBranch(context.Context, *GetRequest) (*emptypb.Empty, error)
	CreateRkeeperOrder(context.Context, *CreateRequest) (*CreateRkeeperOrderResponse, error)
}

// UnimplementedRkeeperServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRkeeperServiceServer struct {
}

func (*UnimplementedRkeeperServiceServer) GetMenu(ctx context.Context, req *GetRkeeperBranchMenuRequest) (*GetRkeeperBranchMenuResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMenu not implemented")
}
func (*UnimplementedRkeeperServiceServer) CreateRkeeperBranch(ctx context.Context, req *RkeeperBranch) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRkeeperBranch not implemented")
}
func (*UnimplementedRkeeperServiceServer) GetRkeeperBranch(ctx context.Context, req *GetRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRkeeperBranch not implemented")
}
func (*UnimplementedRkeeperServiceServer) GetRkeeperBranches(ctx context.Context, req *GetAllRkeeperBranchesRequest) (*GetAllRkeeperBranchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRkeeperBranches not implemented")
}
func (*UnimplementedRkeeperServiceServer) UpdateRkeeperBranch(ctx context.Context, req *RkeeperBranch) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRkeeperBranch not implemented")
}
func (*UnimplementedRkeeperServiceServer) DeleteRkeeperBranch(ctx context.Context, req *GetRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRkeeperBranch not implemented")
}
func (*UnimplementedRkeeperServiceServer) CreateRkeeperOrder(ctx context.Context, req *CreateRequest) (*CreateRkeeperOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRkeeperOrder not implemented")
}

func RegisterRkeeperServiceServer(s *grpc.Server, srv RkeeperServiceServer) {
	s.RegisterService(&_RkeeperService_serviceDesc, srv)
}

func _RkeeperService_GetMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRkeeperBranchMenuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkeeperServiceServer).GetMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RkeeperService/GetMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkeeperServiceServer).GetMenu(ctx, req.(*GetRkeeperBranchMenuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkeeperService_CreateRkeeperBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RkeeperBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkeeperServiceServer).CreateRkeeperBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RkeeperService/CreateRkeeperBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkeeperServiceServer).CreateRkeeperBranch(ctx, req.(*RkeeperBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkeeperService_GetRkeeperBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkeeperServiceServer).GetRkeeperBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RkeeperService/GetRkeeperBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkeeperServiceServer).GetRkeeperBranch(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkeeperService_GetRkeeperBranches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRkeeperBranchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkeeperServiceServer).GetRkeeperBranches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RkeeperService/GetRkeeperBranches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkeeperServiceServer).GetRkeeperBranches(ctx, req.(*GetAllRkeeperBranchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkeeperService_UpdateRkeeperBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RkeeperBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkeeperServiceServer).UpdateRkeeperBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RkeeperService/UpdateRkeeperBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkeeperServiceServer).UpdateRkeeperBranch(ctx, req.(*RkeeperBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkeeperService_DeleteRkeeperBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkeeperServiceServer).DeleteRkeeperBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RkeeperService/DeleteRkeeperBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkeeperServiceServer).DeleteRkeeperBranch(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RkeeperService_CreateRkeeperOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RkeeperServiceServer).CreateRkeeperOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RkeeperService/CreateRkeeperOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RkeeperServiceServer).CreateRkeeperOrder(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RkeeperService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.RkeeperService",
	HandlerType: (*RkeeperServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMenu",
			Handler:    _RkeeperService_GetMenu_Handler,
		},
		{
			MethodName: "CreateRkeeperBranch",
			Handler:    _RkeeperService_CreateRkeeperBranch_Handler,
		},
		{
			MethodName: "GetRkeeperBranch",
			Handler:    _RkeeperService_GetRkeeperBranch_Handler,
		},
		{
			MethodName: "GetRkeeperBranches",
			Handler:    _RkeeperService_GetRkeeperBranches_Handler,
		},
		{
			MethodName: "UpdateRkeeperBranch",
			Handler:    _RkeeperService_UpdateRkeeperBranch_Handler,
		},
		{
			MethodName: "DeleteRkeeperBranch",
			Handler:    _RkeeperService_DeleteRkeeperBranch_Handler,
		},
		{
			MethodName: "CreateRkeeperOrder",
			Handler:    _RkeeperService_CreateRkeeperOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rkeeper_service.proto",
}
