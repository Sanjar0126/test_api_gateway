// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sms_provider_service.proto

package sms_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ShipperId struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShipperId) Reset()         { *m = ShipperId{} }
func (m *ShipperId) String() string { return proto.CompactTextString(m) }
func (*ShipperId) ProtoMessage()    {}
func (*ShipperId) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3a31a8960dae432, []int{0}
}

func (m *ShipperId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShipperId.Unmarshal(m, b)
}
func (m *ShipperId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShipperId.Marshal(b, m, deterministic)
}
func (m *ShipperId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShipperId.Merge(m, src)
}
func (m *ShipperId) XXX_Size() int {
	return xxx_messageInfo_ShipperId.Size(m)
}
func (m *ShipperId) XXX_DiscardUnknown() {
	xxx_messageInfo_ShipperId.DiscardUnknown(m)
}

var xxx_messageInfo_ShipperId proto.InternalMessageInfo

func (m *ShipperId) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func init() {
	proto.RegisterType((*ShipperId)(nil), "genproto.ShipperId")
}

func init() { proto.RegisterFile("sms_provider_service.proto", fileDescriptor_d3a31a8960dae432) }

var fileDescriptor_d3a31a8960dae432 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0xce, 0x2d, 0x8e,
	0x2f, 0x28, 0xca, 0x2f, 0xcb, 0x4c, 0x49, 0x2d, 0x8a, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x48, 0x4f, 0xcd, 0x03, 0xb3, 0xa4, 0x84, 0x90,
	0x55, 0x41, 0x64, 0xa5, 0xa4, 0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xbc, 0xa4, 0xd2,
	0x34, 0xfd, 0xd4, 0xdc, 0x82, 0x92, 0x4a, 0x88, 0xa4, 0x92, 0x16, 0x17, 0x67, 0x70, 0x46, 0x66,
	0x41, 0x41, 0x6a, 0x91, 0x67, 0x8a, 0x90, 0x2c, 0x17, 0x57, 0x31, 0x84, 0x13, 0x9f, 0x99, 0x22,
	0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0xc4, 0x59, 0x0c, 0x93, 0x36, 0xda, 0xcb, 0xc8, 0x25, 0x14,
	0x9c, 0x5b, 0x1c, 0x00, 0x35, 0x3e, 0x18, 0xe2, 0x06, 0x21, 0x63, 0x2e, 0x66, 0xf7, 0xd4, 0x12,
	0x21, 0x61, 0x3d, 0x98, 0x2b, 0xf4, 0xe0, 0x26, 0x4a, 0x89, 0x22, 0x09, 0x22, 0x74, 0x2a, 0x31,
	0x08, 0x59, 0x72, 0xb1, 0x39, 0x17, 0xa5, 0x26, 0x96, 0xa4, 0x0a, 0x61, 0x57, 0x22, 0x25, 0xa6,
	0x07, 0x71, 0xb6, 0x1e, 0xcc, 0xd9, 0x7a, 0xae, 0x20, 0x67, 0x2b, 0x31, 0x08, 0x99, 0x73, 0xb1,
	0xb9, 0xa4, 0xe6, 0xa4, 0x96, 0xa4, 0x62, 0xb7, 0x12, 0xa7, 0x46, 0x27, 0xb1, 0x28, 0x11, 0x98,
	0x7a, 0x7d, 0x50, 0x38, 0x41, 0x03, 0x31, 0x89, 0x0d, 0x2c, 0x64, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0xa2, 0xe4, 0xb2, 0x76, 0x63, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SmsProviderServiceClient is the client API for SmsProviderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SmsProviderServiceClient interface {
	Get(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*SmsProvider, error)
	Create(ctx context.Context, in *SmsProvider, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type smsProviderServiceClient struct {
	cc *grpc.ClientConn
}

func NewSmsProviderServiceClient(cc *grpc.ClientConn) SmsProviderServiceClient {
	return &smsProviderServiceClient{cc}
}

func (c *smsProviderServiceClient) Get(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*SmsProvider, error) {
	out := new(SmsProvider)
	err := c.cc.Invoke(ctx, "/genproto.SmsProviderService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsProviderServiceClient) Create(ctx context.Context, in *SmsProvider, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.SmsProviderService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsProviderServiceClient) Delete(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.SmsProviderService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SmsProviderServiceServer is the server API for SmsProviderService service.
type SmsProviderServiceServer interface {
	Get(context.Context, *ShipperId) (*SmsProvider, error)
	Create(context.Context, *SmsProvider) (*emptypb.Empty, error)
	Delete(context.Context, *ShipperId) (*emptypb.Empty, error)
}

// UnimplementedSmsProviderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSmsProviderServiceServer struct {
}

func (*UnimplementedSmsProviderServiceServer) Get(ctx context.Context, req *ShipperId) (*SmsProvider, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedSmsProviderServiceServer) Create(ctx context.Context, req *SmsProvider) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSmsProviderServiceServer) Delete(ctx context.Context, req *ShipperId) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterSmsProviderServiceServer(s *grpc.Server, srv SmsProviderServiceServer) {
	s.RegisterService(&_SmsProviderService_serviceDesc, srv)
}

func _SmsProviderService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsProviderServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SmsProviderService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsProviderServiceServer).Get(ctx, req.(*ShipperId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmsProviderService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmsProvider)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsProviderServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SmsProviderService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsProviderServiceServer).Create(ctx, req.(*SmsProvider))
	}
	return interceptor(ctx, in, info, handler)
}

func _SmsProviderService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsProviderServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.SmsProviderService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsProviderServiceServer).Delete(ctx, req.(*ShipperId))
	}
	return interceptor(ctx, in, info, handler)
}

var _SmsProviderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.SmsProviderService",
	HandlerType: (*SmsProviderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _SmsProviderService_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _SmsProviderService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _SmsProviderService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sms_provider_service.proto",
}
