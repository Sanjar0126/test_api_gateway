// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tracking.proto

package tracking_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Location struct {
	Long                 float64  `protobuf:"fixed64,1,opt,name=long,proto3" json:"long,omitempty"`
	Lat                  float64  `protobuf:"fixed64,2,opt,name=lat,proto3" json:"lat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a1d65b4bf956e8, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLong() float64 {
	if m != nil {
		return m.Long
	}
	return 0
}

func (m *Location) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

type Courier struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	IsActive             bool     `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	IsOnline             bool     `protobuf:"varint,5,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Courier) Reset()         { *m = Courier{} }
func (m *Courier) String() string { return proto.CompactTextString(m) }
func (*Courier) ProtoMessage()    {}
func (*Courier) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a1d65b4bf956e8, []int{1}
}

func (m *Courier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Courier.Unmarshal(m, b)
}
func (m *Courier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Courier.Marshal(b, m, deterministic)
}
func (m *Courier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Courier.Merge(m, src)
}
func (m *Courier) XXX_Size() int {
	return xxx_messageInfo_Courier.Size(m)
}
func (m *Courier) XXX_DiscardUnknown() {
	xxx_messageInfo_Courier.DiscardUnknown(m)
}

var xxx_messageInfo_Courier proto.InternalMessageInfo

func (m *Courier) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Courier) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Courier) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Courier) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Courier) GetIsOnline() bool {
	if m != nil {
		return m.IsOnline
	}
	return false
}

type Tracking struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CourierId            string    `protobuf:"bytes,2,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	CreatedAt            string    `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Location             *Location `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	UpdatedAt            string    `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Tracking) Reset()         { *m = Tracking{} }
func (m *Tracking) String() string { return proto.CompactTextString(m) }
func (*Tracking) ProtoMessage()    {}
func (*Tracking) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a1d65b4bf956e8, []int{2}
}

func (m *Tracking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracking.Unmarshal(m, b)
}
func (m *Tracking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracking.Marshal(b, m, deterministic)
}
func (m *Tracking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracking.Merge(m, src)
}
func (m *Tracking) XXX_Size() int {
	return xxx_messageInfo_Tracking.Size(m)
}
func (m *Tracking) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracking.DiscardUnknown(m)
}

var xxx_messageInfo_Tracking proto.InternalMessageInfo

func (m *Tracking) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tracking) GetCourierId() string {
	if m != nil {
		return m.CourierId
	}
	return ""
}

func (m *Tracking) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Tracking) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Tracking) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type Order struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderNum             uint64   `protobuf:"varint,2,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	StatusId             string   `protobuf:"bytes,3,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a1d65b4bf956e8, []int{3}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetOrderNum() uint64 {
	if m != nil {
		return m.OrderNum
	}
	return 0
}

func (m *Order) GetStatusId() string {
	if m != nil {
		return m.StatusId
	}
	return ""
}

type CourierTracking struct {
	Courier              *Courier  `protobuf:"bytes,1,opt,name=courier,proto3" json:"courier,omitempty"`
	Tracking             *Tracking `protobuf:"bytes,2,opt,name=tracking,proto3" json:"tracking,omitempty"`
	Orders               []*Order  `protobuf:"bytes,3,rep,name=orders,proto3" json:"orders,omitempty"`
	OrdersCount          uint64    `protobuf:"varint,4,opt,name=orders_count,json=ordersCount,proto3" json:"orders_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CourierTracking) Reset()         { *m = CourierTracking{} }
func (m *CourierTracking) String() string { return proto.CompactTextString(m) }
func (*CourierTracking) ProtoMessage()    {}
func (*CourierTracking) Descriptor() ([]byte, []int) {
	return fileDescriptor_62a1d65b4bf956e8, []int{4}
}

func (m *CourierTracking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CourierTracking.Unmarshal(m, b)
}
func (m *CourierTracking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CourierTracking.Marshal(b, m, deterministic)
}
func (m *CourierTracking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CourierTracking.Merge(m, src)
}
func (m *CourierTracking) XXX_Size() int {
	return xxx_messageInfo_CourierTracking.Size(m)
}
func (m *CourierTracking) XXX_DiscardUnknown() {
	xxx_messageInfo_CourierTracking.DiscardUnknown(m)
}

var xxx_messageInfo_CourierTracking proto.InternalMessageInfo

func (m *CourierTracking) GetCourier() *Courier {
	if m != nil {
		return m.Courier
	}
	return nil
}

func (m *CourierTracking) GetTracking() *Tracking {
	if m != nil {
		return m.Tracking
	}
	return nil
}

func (m *CourierTracking) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *CourierTracking) GetOrdersCount() uint64 {
	if m != nil {
		return m.OrdersCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Location)(nil), "genproto.Location")
	proto.RegisterType((*Courier)(nil), "genproto.Courier")
	proto.RegisterType((*Tracking)(nil), "genproto.Tracking")
	proto.RegisterType((*Order)(nil), "genproto.Order")
	proto.RegisterType((*CourierTracking)(nil), "genproto.CourierTracking")
}

func init() { proto.RegisterFile("tracking.proto", fileDescriptor_62a1d65b4bf956e8) }

var fileDescriptor_62a1d65b4bf956e8 = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x95, 0x7f, 0xbb, 0xce, 0x04, 0xed, 0x82, 0xc5, 0x21, 0xa8, 0x42, 0x2a, 0xb9, 0x50,
	0x09, 0x29, 0xa0, 0xf2, 0x04, 0x65, 0x4f, 0x2b, 0xa1, 0x56, 0x58, 0x9c, 0xb8, 0x44, 0x26, 0x31,
	0xc5, 0x22, 0xb1, 0x2b, 0xc7, 0xe9, 0x9b, 0xf0, 0x0c, 0xbc, 0x03, 0x4f, 0x87, 0x3c, 0xb6, 0x5b,
	0xa1, 0xbd, 0x8d, 0xbf, 0x6f, 0x3c, 0xfe, 0x7d, 0x93, 0xc0, 0x9d, 0x35, 0xbc, 0xff, 0x25, 0xd5,
	0xb1, 0x3d, 0x19, 0x6d, 0x35, 0x25, 0x47, 0xa1, 0xb0, 0x6a, 0x3e, 0x00, 0xf9, 0xac, 0x7b, 0x6e,
	0xa5, 0x56, 0x94, 0x42, 0x3e, 0x6a, 0x75, 0xac, 0x93, 0x75, 0xb2, 0x49, 0x18, 0xd6, 0xf4, 0x39,
	0x64, 0x23, 0xb7, 0x75, 0x8a, 0x92, 0x2b, 0x9b, 0xdf, 0x09, 0xdc, 0x3e, 0xe8, 0xc5, 0x48, 0x61,
	0xe8, 0x6b, 0x80, 0x1f, 0xd2, 0xcc, 0xb6, 0x53, 0x7c, 0x12, 0x78, 0xaf, 0x64, 0x25, 0x2a, 0x7b,
	0x3e, 0x09, 0xba, 0x82, 0x72, 0xe4, 0xd1, 0x4d, 0xd1, 0x25, 0x4e, 0x40, 0xf3, 0x25, 0x14, 0xa7,
	0x9f, 0x5a, 0x89, 0x3a, 0x43, 0xc3, 0x1f, 0xdc, 0x15, 0x39, 0x77, 0xbc, 0xb7, 0xf2, 0x2c, 0xea,
	0x7c, 0x9d, 0x6c, 0x08, 0x23, 0x72, 0xde, 0xe1, 0x39, 0x98, 0x5a, 0x8d, 0x52, 0x89, 0xba, 0x88,
	0xe6, 0x01, 0xcf, 0xcd, 0x9f, 0x04, 0xc8, 0xd7, 0x10, 0x93, 0xde, 0x41, 0x2a, 0x87, 0x00, 0x94,
	0xca, 0xc1, 0x81, 0xf6, 0x9e, 0xb9, 0x93, 0x43, 0x40, 0x29, 0x83, 0xf2, 0xe8, 0x6d, 0x23, 0xb8,
	0x15, 0x43, 0xc7, 0x6d, 0x00, 0x2a, 0x83, 0xb2, 0xb3, 0xb4, 0x05, 0x32, 0x86, 0x25, 0x21, 0x53,
	0xb5, 0xa5, 0x6d, 0xdc, 0x60, 0x1b, 0xd7, 0xc7, 0x2e, 0x3d, 0x6e, 0xdc, 0x72, 0x1a, 0xe2, 0xb8,
	0xc2, 0x8f, 0x0b, 0xca, 0xce, 0x36, 0x5f, 0xa0, 0x38, 0x98, 0x41, 0x98, 0x27, 0x94, 0x2b, 0x28,
	0xb5, 0x33, 0x3a, 0xb5, 0x4c, 0x08, 0x99, 0x33, 0x82, 0xc2, 0x7e, 0x99, 0x9c, 0x39, 0x5b, 0x6e,
	0x97, 0xd9, 0x25, 0xf0, 0x88, 0xc4, 0x0b, 0x8f, 0x43, 0xf3, 0x37, 0x81, 0xfb, 0xf0, 0x51, 0x2e,
	0x3b, 0x78, 0x07, 0xb7, 0x21, 0x21, 0x3e, 0x51, 0x6d, 0x5f, 0x5c, 0xa1, 0x43, 0x2f, 0x8b, 0x1d,
	0x2e, 0x62, 0xfc, 0x47, 0xf0, 0xe5, 0xff, 0x22, 0xc6, 0x91, 0xec, 0xd2, 0x43, 0xdf, 0xc2, 0x0d,
	0x92, 0xcd, 0x75, 0xb6, 0xce, 0x36, 0xd5, 0xf6, 0xfe, 0xda, 0x8d, 0xd9, 0x58, 0xb0, 0xe9, 0x1b,
	0x78, 0xe6, 0xab, 0xae, 0xd7, 0x8b, 0xb2, 0xb8, 0xbf, 0x9c, 0x55, 0x5e, 0x7b, 0x70, 0xd2, 0xa7,
	0xd5, 0xb7, 0x57, 0xf1, 0xf2, 0xfb, 0xf8, 0x40, 0x37, 0x0b, 0x73, 0x96, 0xbd, 0xf8, 0x7e, 0x83,
	0xfa, 0xc7, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x38, 0x9f, 0x9c, 0x55, 0xc3, 0x02, 0x00, 0x00,
}
