// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tg_bot_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAllTgBotsRequest struct {
	Page                 int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllTgBotsRequest) Reset()         { *m = GetAllTgBotsRequest{} }
func (m *GetAllTgBotsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllTgBotsRequest) ProtoMessage()    {}
func (*GetAllTgBotsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fcb3cd798abef58, []int{0}
}

func (m *GetAllTgBotsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTgBotsRequest.Unmarshal(m, b)
}
func (m *GetAllTgBotsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTgBotsRequest.Marshal(b, m, deterministic)
}
func (m *GetAllTgBotsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTgBotsRequest.Merge(m, src)
}
func (m *GetAllTgBotsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllTgBotsRequest.Size(m)
}
func (m *GetAllTgBotsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTgBotsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTgBotsRequest proto.InternalMessageInfo

func (m *GetAllTgBotsRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllTgBotsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetAllTgBotsResponse struct {
	TgBots               []*TgBot `protobuf:"bytes,1,rep,name=tg_bots,json=tgBots,proto3" json:"tg_bots,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllTgBotsResponse) Reset()         { *m = GetAllTgBotsResponse{} }
func (m *GetAllTgBotsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllTgBotsResponse) ProtoMessage()    {}
func (*GetAllTgBotsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fcb3cd798abef58, []int{1}
}

func (m *GetAllTgBotsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTgBotsResponse.Unmarshal(m, b)
}
func (m *GetAllTgBotsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTgBotsResponse.Marshal(b, m, deterministic)
}
func (m *GetAllTgBotsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTgBotsResponse.Merge(m, src)
}
func (m *GetAllTgBotsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllTgBotsResponse.Size(m)
}
func (m *GetAllTgBotsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTgBotsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTgBotsResponse proto.InternalMessageInfo

func (m *GetAllTgBotsResponse) GetTgBots() []*TgBot {
	if m != nil {
		return m.TgBots
	}
	return nil
}

func (m *GetAllTgBotsResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*GetAllTgBotsRequest)(nil), "genproto.GetAllTgBotsRequest")
	proto.RegisterType((*GetAllTgBotsResponse)(nil), "genproto.GetAllTgBotsResponse")
}

func init() { proto.RegisterFile("tg_bot_service.proto", fileDescriptor_1fcb3cd798abef58) }

var fileDescriptor_1fcb3cd798abef58 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0xa5, 0xed, 0xf7, 0xad, 0x32, 0x16, 0x84, 0x69, 0xab, 0x25, 0xa2, 0x94, 0x9e, 0x0a, 0xc2,
	0x16, 0x2b, 0x9e, 0xc5, 0xaa, 0x04, 0xaf, 0xa9, 0x7a, 0xf0, 0x52, 0x9a, 0x76, 0x5c, 0x03, 0x69,
	0x76, 0xcd, 0x4e, 0x04, 0xff, 0x8c, 0xbf, 0x55, 0xba, 0x4b, 0x0c, 0x2d, 0xe9, 0x6d, 0xe6, 0xbd,
	0x37, 0x6f, 0x67, 0xdf, 0x40, 0x97, 0xd5, 0x3c, 0xd6, 0x3c, 0xb7, 0x94, 0x7f, 0x25, 0x4b, 0x92,
	0x26, 0xd7, 0xac, 0xf1, 0x50, 0x51, 0xe6, 0xaa, 0xa0, 0xed, 0x79, 0x8f, 0x07, 0x3d, 0xfb, 0x91,
	0x18, 0x43, 0xf9, 0xb6, 0x3c, 0x38, 0x53, 0x5a, 0xab, 0x94, 0xc6, 0xae, 0x8b, 0x8b, 0xf7, 0x31,
	0xad, 0x0d, 0x7f, 0x7b, 0x72, 0x78, 0x0b, 0x9d, 0x90, 0xf8, 0x2e, 0x4d, 0x9f, 0xd5, 0x54, 0xb3,
	0x8d, 0xe8, 0xb3, 0x20, 0xcb, 0x88, 0xf0, 0xcf, 0x2c, 0x14, 0xf5, 0x1b, 0x83, 0xc6, 0xa8, 0x15,
	0xb9, 0x1a, 0xbb, 0xf0, 0x3f, 0x4d, 0xd6, 0x09, 0xf7, 0x9b, 0x0e, 0xf4, 0xcd, 0xf0, 0x15, 0xba,
	0xdb, 0x06, 0xd6, 0xe8, 0xcc, 0x12, 0x8e, 0xe0, 0xc0, 0x2f, 0x67, 0xfb, 0x8d, 0x41, 0x6b, 0x74,
	0x34, 0x39, 0x96, 0xe5, 0xda, 0xd2, 0x49, 0x23, 0xc1, 0x6e, 0x62, 0xe3, 0xbb, 0xd4, 0x45, 0xf6,
	0xe7, 0xeb, 0x9a, 0xc9, 0x4f, 0x13, 0xda, 0x4e, 0x37, 0xf3, 0x9f, 0x41, 0x09, 0xe2, 0x3e, 0xa7,
	0x05, 0x13, 0xee, 0x3a, 0x05, 0x9d, 0x0a, 0x98, 0xf9, 0x08, 0x9e, 0x56, 0x78, 0x05, 0xe2, 0xc5,
	0xac, 0x6a, 0xf5, 0x27, 0xd2, 0x47, 0x22, 0xcb, 0x48, 0xe4, 0xe3, 0x26, 0x12, 0xbc, 0x01, 0xf1,
	0x40, 0x29, 0x31, 0x61, 0x9d, 0xe3, 0xde, 0xb1, 0x4b, 0x68, 0x85, 0xc4, 0xf5, 0x33, 0xbb, 0x6f,
	0x63, 0x08, 0xc2, 0xe7, 0x85, 0xe7, 0x15, 0x55, 0x73, 0x82, 0xe0, 0x62, 0x1f, 0xed, 0x03, 0x9e,
	0x9e, 0xbe, 0xf5, 0x4a, 0xc1, 0xb8, 0xb0, 0xd5, 0xd5, 0x63, 0xe1, 0xb0, 0xeb, 0xdf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xc3, 0xb0, 0xc7, 0x41, 0x3d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TgBotServiceClient is the client API for TgBotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TgBotServiceClient interface {
	Create(ctx context.Context, in *TgBot, opts ...grpc.CallOption) (*ShipperId, error)
	Update(ctx context.Context, in *TgBot, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Get(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*TgBot, error)
	GetAll(ctx context.Context, in *GetAllTgBotsRequest, opts ...grpc.CallOption) (*GetAllTgBotsResponse, error)
}

type tgBotServiceClient struct {
	cc *grpc.ClientConn
}

func NewTgBotServiceClient(cc *grpc.ClientConn) TgBotServiceClient {
	return &tgBotServiceClient{cc}
}

func (c *tgBotServiceClient) Create(ctx context.Context, in *TgBot, opts ...grpc.CallOption) (*ShipperId, error) {
	out := new(ShipperId)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tgBotServiceClient) Update(ctx context.Context, in *TgBot, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tgBotServiceClient) Delete(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tgBotServiceClient) Get(ctx context.Context, in *ShipperId, opts ...grpc.CallOption) (*TgBot, error) {
	out := new(TgBot)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tgBotServiceClient) GetAll(ctx context.Context, in *GetAllTgBotsRequest, opts ...grpc.CallOption) (*GetAllTgBotsResponse, error) {
	out := new(GetAllTgBotsResponse)
	err := c.cc.Invoke(ctx, "/genproto.TgBotService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TgBotServiceServer is the server API for TgBotService service.
type TgBotServiceServer interface {
	Create(context.Context, *TgBot) (*ShipperId, error)
	Update(context.Context, *TgBot) (*emptypb.Empty, error)
	Delete(context.Context, *ShipperId) (*emptypb.Empty, error)
	Get(context.Context, *ShipperId) (*TgBot, error)
	GetAll(context.Context, *GetAllTgBotsRequest) (*GetAllTgBotsResponse, error)
}

// UnimplementedTgBotServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTgBotServiceServer struct {
}

func (*UnimplementedTgBotServiceServer) Create(ctx context.Context, req *TgBot) (*ShipperId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTgBotServiceServer) Update(ctx context.Context, req *TgBot) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedTgBotServiceServer) Delete(ctx context.Context, req *ShipperId) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedTgBotServiceServer) Get(ctx context.Context, req *ShipperId) (*TgBot, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTgBotServiceServer) GetAll(ctx context.Context, req *GetAllTgBotsRequest) (*GetAllTgBotsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}

func RegisterTgBotServiceServer(s *grpc.Server, srv TgBotServiceServer) {
	s.RegisterService(&_TgBotService_serviceDesc, srv)
}

func _TgBotService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TgBot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).Create(ctx, req.(*TgBot))
	}
	return interceptor(ctx, in, info, handler)
}

func _TgBotService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TgBot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).Update(ctx, req.(*TgBot))
	}
	return interceptor(ctx, in, info, handler)
}

func _TgBotService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).Delete(ctx, req.(*ShipperId))
	}
	return interceptor(ctx, in, info, handler)
}

func _TgBotService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).Get(ctx, req.(*ShipperId))
	}
	return interceptor(ctx, in, info, handler)
}

func _TgBotService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTgBotsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgBotServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.TgBotService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgBotServiceServer).GetAll(ctx, req.(*GetAllTgBotsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TgBotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.TgBotService",
	HandlerType: (*TgBotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _TgBotService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _TgBotService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TgBotService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TgBotService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _TgBotService_GetAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tg_bot_service.proto",
}
