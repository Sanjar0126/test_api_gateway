// Code generated by protoc-gen-go. DO NOT EDIT.
// source: branch_user_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetBranchUserByPhoneRequest struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	ShipperId            string   `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBranchUserByPhoneRequest) Reset()         { *m = GetBranchUserByPhoneRequest{} }
func (m *GetBranchUserByPhoneRequest) String() string { return proto.CompactTextString(m) }
func (*GetBranchUserByPhoneRequest) ProtoMessage()    {}
func (*GetBranchUserByPhoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f077533ffb5a3041, []int{0}
}

func (m *GetBranchUserByPhoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBranchUserByPhoneRequest.Unmarshal(m, b)
}
func (m *GetBranchUserByPhoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBranchUserByPhoneRequest.Marshal(b, m, deterministic)
}
func (m *GetBranchUserByPhoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBranchUserByPhoneRequest.Merge(m, src)
}
func (m *GetBranchUserByPhoneRequest) XXX_Size() int {
	return xxx_messageInfo_GetBranchUserByPhoneRequest.Size(m)
}
func (m *GetBranchUserByPhoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBranchUserByPhoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBranchUserByPhoneRequest proto.InternalMessageInfo

func (m *GetBranchUserByPhoneRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *GetBranchUserByPhoneRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type BranchUserId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BranchUserId) Reset()         { *m = BranchUserId{} }
func (m *BranchUserId) String() string { return proto.CompactTextString(m) }
func (*BranchUserId) ProtoMessage()    {}
func (*BranchUserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_f077533ffb5a3041, []int{1}
}

func (m *BranchUserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BranchUserId.Unmarshal(m, b)
}
func (m *BranchUserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BranchUserId.Marshal(b, m, deterministic)
}
func (m *BranchUserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BranchUserId.Merge(m, src)
}
func (m *BranchUserId) XXX_Size() int {
	return xxx_messageInfo_BranchUserId.Size(m)
}
func (m *BranchUserId) XXX_DiscardUnknown() {
	xxx_messageInfo_BranchUserId.DiscardUnknown(m)
}

var xxx_messageInfo_BranchUserId proto.InternalMessageInfo

func (m *BranchUserId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdateBranchUserFcmTokenRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShipperId            string   `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	FcmToken             string   `protobuf:"bytes,3,opt,name=fcm_token,json=fcmToken,proto3" json:"fcm_token,omitempty"`
	PlatformId           string   `protobuf:"bytes,4,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBranchUserFcmTokenRequest) Reset()         { *m = UpdateBranchUserFcmTokenRequest{} }
func (m *UpdateBranchUserFcmTokenRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBranchUserFcmTokenRequest) ProtoMessage()    {}
func (*UpdateBranchUserFcmTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f077533ffb5a3041, []int{2}
}

func (m *UpdateBranchUserFcmTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBranchUserFcmTokenRequest.Unmarshal(m, b)
}
func (m *UpdateBranchUserFcmTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBranchUserFcmTokenRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBranchUserFcmTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBranchUserFcmTokenRequest.Merge(m, src)
}
func (m *UpdateBranchUserFcmTokenRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBranchUserFcmTokenRequest.Size(m)
}
func (m *UpdateBranchUserFcmTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBranchUserFcmTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBranchUserFcmTokenRequest proto.InternalMessageInfo

func (m *UpdateBranchUserFcmTokenRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateBranchUserFcmTokenRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *UpdateBranchUserFcmTokenRequest) GetFcmToken() string {
	if m != nil {
		return m.FcmToken
	}
	return ""
}

func (m *UpdateBranchUserFcmTokenRequest) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

type GetAllBranchUsersRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	UserRoleId           string   `protobuf:"bytes,4,opt,name=user_role_id,json=userRoleId,proto3" json:"user_role_id,omitempty"`
	Search               string   `protobuf:"bytes,5,opt,name=search,proto3" json:"search,omitempty"`
	BranchId             string   `protobuf:"bytes,6,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllBranchUsersRequest) Reset()         { *m = GetAllBranchUsersRequest{} }
func (m *GetAllBranchUsersRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllBranchUsersRequest) ProtoMessage()    {}
func (*GetAllBranchUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f077533ffb5a3041, []int{3}
}

func (m *GetAllBranchUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBranchUsersRequest.Unmarshal(m, b)
}
func (m *GetAllBranchUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBranchUsersRequest.Marshal(b, m, deterministic)
}
func (m *GetAllBranchUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBranchUsersRequest.Merge(m, src)
}
func (m *GetAllBranchUsersRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllBranchUsersRequest.Size(m)
}
func (m *GetAllBranchUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBranchUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBranchUsersRequest proto.InternalMessageInfo

func (m *GetAllBranchUsersRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllBranchUsersRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllBranchUsersRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetAllBranchUsersRequest) GetUserRoleId() string {
	if m != nil {
		return m.UserRoleId
	}
	return ""
}

func (m *GetAllBranchUsersRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *GetAllBranchUsersRequest) GetBranchId() string {
	if m != nil {
		return m.BranchId
	}
	return ""
}

type GetAllBranchUsersResponse struct {
	BranchUsers          []*BranchUser `protobuf:"bytes,1,rep,name=branch_users,json=branchUsers,proto3" json:"branch_users,omitempty"`
	Count                uint64        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetAllBranchUsersResponse) Reset()         { *m = GetAllBranchUsersResponse{} }
func (m *GetAllBranchUsersResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllBranchUsersResponse) ProtoMessage()    {}
func (*GetAllBranchUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f077533ffb5a3041, []int{4}
}

func (m *GetAllBranchUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBranchUsersResponse.Unmarshal(m, b)
}
func (m *GetAllBranchUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBranchUsersResponse.Marshal(b, m, deterministic)
}
func (m *GetAllBranchUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBranchUsersResponse.Merge(m, src)
}
func (m *GetAllBranchUsersResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllBranchUsersResponse.Size(m)
}
func (m *GetAllBranchUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBranchUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBranchUsersResponse proto.InternalMessageInfo

func (m *GetAllBranchUsersResponse) GetBranchUsers() []*BranchUser {
	if m != nil {
		return m.BranchUsers
	}
	return nil
}

func (m *GetAllBranchUsersResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteBranchUserRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShipperId            string   `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBranchUserRequest) Reset()         { *m = DeleteBranchUserRequest{} }
func (m *DeleteBranchUserRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBranchUserRequest) ProtoMessage()    {}
func (*DeleteBranchUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f077533ffb5a3041, []int{5}
}

func (m *DeleteBranchUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBranchUserRequest.Unmarshal(m, b)
}
func (m *DeleteBranchUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBranchUserRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBranchUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBranchUserRequest.Merge(m, src)
}
func (m *DeleteBranchUserRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBranchUserRequest.Size(m)
}
func (m *DeleteBranchUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBranchUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBranchUserRequest proto.InternalMessageInfo

func (m *DeleteBranchUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteBranchUserRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func init() {
	proto.RegisterType((*GetBranchUserByPhoneRequest)(nil), "genproto.GetBranchUserByPhoneRequest")
	proto.RegisterType((*BranchUserId)(nil), "genproto.BranchUserId")
	proto.RegisterType((*UpdateBranchUserFcmTokenRequest)(nil), "genproto.UpdateBranchUserFcmTokenRequest")
	proto.RegisterType((*GetAllBranchUsersRequest)(nil), "genproto.GetAllBranchUsersRequest")
	proto.RegisterType((*GetAllBranchUsersResponse)(nil), "genproto.GetAllBranchUsersResponse")
	proto.RegisterType((*DeleteBranchUserRequest)(nil), "genproto.DeleteBranchUserRequest")
}

func init() { proto.RegisterFile("branch_user_service.proto", fileDescriptor_f077533ffb5a3041) }

var fileDescriptor_f077533ffb5a3041 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xcd, 0xab, 0x56, 0x73, 0x13, 0x45, 0xea, 0xa8, 0xb4, 0x6e, 0x22, 0x68, 0x18, 0x84, 0x54,
	0x36, 0x89, 0x54, 0x84, 0x60, 0x4b, 0xa0, 0x04, 0x8b, 0x0d, 0x72, 0xc9, 0x86, 0x4d, 0xe4, 0x78,
	0x6e, 0x12, 0x83, 0xe3, 0x31, 0x33, 0x13, 0xa4, 0xfe, 0x04, 0x1f, 0xc4, 0x92, 0x2f, 0x43, 0x33,
	0x63, 0xd7, 0x26, 0x8a, 0x53, 0x89, 0x9d, 0xef, 0xeb, 0xcc, 0xb9, 0x8f, 0x63, 0xb8, 0x58, 0x88,
	0x20, 0x09, 0xd7, 0xf3, 0xad, 0x44, 0x31, 0x97, 0x28, 0x7e, 0x46, 0x21, 0x8e, 0x52, 0xc1, 0x15,
	0x27, 0xc7, 0x2b, 0x4c, 0xcc, 0x57, 0xff, 0xa4, 0x94, 0x64, 0x83, 0xfd, 0xc1, 0x8a, 0xf3, 0x55,
	0x8c, 0x63, 0x63, 0x2d, 0xb6, 0xcb, 0x31, 0x6e, 0x52, 0x75, 0x67, 0x83, 0xd4, 0x87, 0xc1, 0x14,
	0xd5, 0xc4, 0x14, 0xcd, 0x24, 0x8a, 0xc9, 0xdd, 0xe7, 0x35, 0x4f, 0xd0, 0xc7, 0x1f, 0x5b, 0x94,
	0x8a, 0x9c, 0xc2, 0x51, 0xaa, 0x6d, 0xb7, 0x3e, 0xac, 0x5f, 0xb5, 0x7d, 0x6b, 0x90, 0xc7, 0x00,
	0x72, 0x1d, 0xa5, 0x29, 0x8a, 0x79, 0xc4, 0xdc, 0x86, 0x09, 0xb5, 0x33, 0x8f, 0xc7, 0xe8, 0x13,
	0xe8, 0x16, 0x80, 0x1e, 0x23, 0x3d, 0x68, 0x44, 0x2c, 0x43, 0x68, 0x44, 0x8c, 0xfe, 0xaa, 0xc3,
	0xe5, 0x2c, 0x65, 0x81, 0xc2, 0x22, 0xed, 0x43, 0xb8, 0xf9, 0xc2, 0xbf, 0x63, 0x92, 0x3f, 0xbc,
	0x53, 0xf3, 0xc0, 0x93, 0x64, 0x00, 0xed, 0x65, 0xb8, 0x99, 0x2b, 0x0d, 0xe1, 0x36, 0x4d, 0xf4,
	0x78, 0x99, 0x41, 0x92, 0x4b, 0xe8, 0xa4, 0x71, 0xa0, 0x96, 0x5c, 0x6c, 0x74, 0x71, 0xcb, 0x84,
	0x21, 0x77, 0x79, 0x8c, 0xfe, 0xae, 0x83, 0x3b, 0x45, 0xf5, 0x36, 0x8e, 0x0b, 0x42, 0x32, 0x67,
	0x42, 0xa0, 0x95, 0x06, 0x2b, 0x3b, 0x81, 0x96, 0x6f, 0xbe, 0xf5, 0x58, 0xe2, 0x68, 0x13, 0x29,
	0x43, 0xa4, 0xe5, 0x5b, 0x63, 0x87, 0x63, 0x73, 0x97, 0xe3, 0x10, 0xba, 0x66, 0x75, 0x82, 0xc7,
	0x58, 0xe2, 0xa1, 0x7d, 0x3e, 0x8f, 0xd1, 0x63, 0xe4, 0x0c, 0x1c, 0x89, 0x81, 0x08, 0xd7, 0xee,
	0x91, 0x89, 0x65, 0x96, 0xee, 0x2e, 0x5b, 0x6b, 0xc4, 0x5c, 0xc7, 0x76, 0x67, 0x1d, 0x1e, 0xa3,
	0xdf, 0xe0, 0x62, 0x0f, 0x77, 0x99, 0xf2, 0x44, 0x22, 0x79, 0x0d, 0xdd, 0xd2, 0x41, 0x48, 0xb7,
	0x3e, 0x6c, 0x5e, 0x75, 0xae, 0x4f, 0x47, 0xf9, 0xbd, 0x8c, 0x8a, 0x22, 0xbf, 0xb3, 0x28, 0x00,
	0x74, 0x87, 0x21, 0xdf, 0x26, 0xf7, 0x1d, 0x1a, 0x83, 0x7e, 0x84, 0xf3, 0xf7, 0x18, 0x63, 0x79,
	0x71, 0xff, 0xb7, 0xb0, 0xeb, 0x3f, 0x2d, 0x38, 0x29, 0x40, 0x6e, 0xed, 0x35, 0x93, 0x37, 0xe0,
	0xbc, 0x13, 0x18, 0x28, 0x24, 0x7b, 0x29, 0xf6, 0xcf, 0xf6, 0x79, 0x3d, 0x46, 0x6b, 0xe4, 0x15,
	0x34, 0xa7, 0xa8, 0x48, 0x45, 0x42, 0x7f, 0x2f, 0x1c, 0xad, 0x91, 0x5b, 0x70, 0xec, 0xf0, 0x08,
	0x2d, 0x32, 0xaa, 0x4e, 0xa1, 0xff, 0xec, 0x60, 0x8e, 0x1d, 0x39, 0xad, 0xe9, 0x2e, 0xec, 0x79,
	0x57, 0x77, 0x61, 0x14, 0x39, 0xca, 0x15, 0x39, 0xba, 0xd1, 0x8a, 0xa4, 0x35, 0x72, 0x03, 0x8e,
	0x9d, 0x2f, 0x79, 0x5a, 0x54, 0x56, 0x4c, 0xfc, 0x00, 0xcc, 0x27, 0x00, 0x2d, 0x6a, 0x2b, 0x65,
	0xf2, 0xfc, 0x1f, 0xd6, 0x55, 0x52, 0xaf, 0x1c, 0xd1, 0x0c, 0x7a, 0xb6, 0x9b, 0x5c, 0xa2, 0xe4,
	0x45, 0x91, 0xf9, 0x80, 0x8c, 0x0f, 0x70, 0x9c, 0x40, 0xcf, 0x36, 0x76, 0x0f, 0x5b, 0xb5, 0xbb,
	0x4a, 0x8c, 0xc9, 0xf9, 0xd7, 0x47, 0x79, 0xc9, 0xb8, 0xfc, 0x57, 0x5c, 0x38, 0xc6, 0xf7, 0xf2,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x76, 0x76, 0x32, 0x33, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BranchUserServiceClient is the client API for BranchUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BranchUserServiceClient interface {
	Create(ctx context.Context, in *BranchUser, opts ...grpc.CallOption) (*BranchUserId, error)
	Get(ctx context.Context, in *BranchUserId, opts ...grpc.CallOption) (*BranchUser, error)
	GetAll(ctx context.Context, in *GetAllBranchUsersRequest, opts ...grpc.CallOption) (*GetAllBranchUsersResponse, error)
	Update(ctx context.Context, in *BranchUser, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *DeleteBranchUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetByPhone(ctx context.Context, in *GetBranchUserByPhoneRequest, opts ...grpc.CallOption) (*BranchUser, error)
	UpdateFcmToken(ctx context.Context, in *UpdateBranchUserFcmTokenRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteFcmToken(ctx context.Context, in *BranchUserId, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type branchUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewBranchUserServiceClient(cc *grpc.ClientConn) BranchUserServiceClient {
	return &branchUserServiceClient{cc}
}

func (c *branchUserServiceClient) Create(ctx context.Context, in *BranchUser, opts ...grpc.CallOption) (*BranchUserId, error) {
	out := new(BranchUserId)
	err := c.cc.Invoke(ctx, "/genproto.BranchUserService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchUserServiceClient) Get(ctx context.Context, in *BranchUserId, opts ...grpc.CallOption) (*BranchUser, error) {
	out := new(BranchUser)
	err := c.cc.Invoke(ctx, "/genproto.BranchUserService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchUserServiceClient) GetAll(ctx context.Context, in *GetAllBranchUsersRequest, opts ...grpc.CallOption) (*GetAllBranchUsersResponse, error) {
	out := new(GetAllBranchUsersResponse)
	err := c.cc.Invoke(ctx, "/genproto.BranchUserService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchUserServiceClient) Update(ctx context.Context, in *BranchUser, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.BranchUserService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchUserServiceClient) Delete(ctx context.Context, in *DeleteBranchUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.BranchUserService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchUserServiceClient) GetByPhone(ctx context.Context, in *GetBranchUserByPhoneRequest, opts ...grpc.CallOption) (*BranchUser, error) {
	out := new(BranchUser)
	err := c.cc.Invoke(ctx, "/genproto.BranchUserService/GetByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchUserServiceClient) UpdateFcmToken(ctx context.Context, in *UpdateBranchUserFcmTokenRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.BranchUserService/UpdateFcmToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchUserServiceClient) DeleteFcmToken(ctx context.Context, in *BranchUserId, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.BranchUserService/DeleteFcmToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BranchUserServiceServer is the server API for BranchUserService service.
type BranchUserServiceServer interface {
	Create(context.Context, *BranchUser) (*BranchUserId, error)
	Get(context.Context, *BranchUserId) (*BranchUser, error)
	GetAll(context.Context, *GetAllBranchUsersRequest) (*GetAllBranchUsersResponse, error)
	Update(context.Context, *BranchUser) (*emptypb.Empty, error)
	Delete(context.Context, *DeleteBranchUserRequest) (*emptypb.Empty, error)
	GetByPhone(context.Context, *GetBranchUserByPhoneRequest) (*BranchUser, error)
	UpdateFcmToken(context.Context, *UpdateBranchUserFcmTokenRequest) (*emptypb.Empty, error)
	DeleteFcmToken(context.Context, *BranchUserId) (*emptypb.Empty, error)
}

// UnimplementedBranchUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBranchUserServiceServer struct {
}

func (*UnimplementedBranchUserServiceServer) Create(ctx context.Context, req *BranchUser) (*BranchUserId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedBranchUserServiceServer) Get(ctx context.Context, req *BranchUserId) (*BranchUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedBranchUserServiceServer) GetAll(ctx context.Context, req *GetAllBranchUsersRequest) (*GetAllBranchUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedBranchUserServiceServer) Update(ctx context.Context, req *BranchUser) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedBranchUserServiceServer) Delete(ctx context.Context, req *DeleteBranchUserRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedBranchUserServiceServer) GetByPhone(ctx context.Context, req *GetBranchUserByPhoneRequest) (*BranchUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByPhone not implemented")
}
func (*UnimplementedBranchUserServiceServer) UpdateFcmToken(ctx context.Context, req *UpdateBranchUserFcmTokenRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFcmToken not implemented")
}
func (*UnimplementedBranchUserServiceServer) DeleteFcmToken(ctx context.Context, req *BranchUserId) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFcmToken not implemented")
}

func RegisterBranchUserServiceServer(s *grpc.Server, srv BranchUserServiceServer) {
	s.RegisterService(&_BranchUserService_serviceDesc, srv)
}

func _BranchUserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BranchUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchUserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchUserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchUserServiceServer).Create(ctx, req.(*BranchUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchUserService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BranchUserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchUserServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchUserService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchUserServiceServer).Get(ctx, req.(*BranchUserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchUserService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBranchUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchUserServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchUserService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchUserServiceServer).GetAll(ctx, req.(*GetAllBranchUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchUserService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BranchUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchUserServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchUserService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchUserServiceServer).Update(ctx, req.(*BranchUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchUserService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBranchUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchUserServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchUserService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchUserServiceServer).Delete(ctx, req.(*DeleteBranchUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchUserService_GetByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBranchUserByPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchUserServiceServer).GetByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchUserService/GetByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchUserServiceServer).GetByPhone(ctx, req.(*GetBranchUserByPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchUserService_UpdateFcmToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBranchUserFcmTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchUserServiceServer).UpdateFcmToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchUserService/UpdateFcmToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchUserServiceServer).UpdateFcmToken(ctx, req.(*UpdateBranchUserFcmTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchUserService_DeleteFcmToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BranchUserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchUserServiceServer).DeleteFcmToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchUserService/DeleteFcmToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchUserServiceServer).DeleteFcmToken(ctx, req.(*BranchUserId))
	}
	return interceptor(ctx, in, info, handler)
}

var _BranchUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.BranchUserService",
	HandlerType: (*BranchUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _BranchUserService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _BranchUserService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _BranchUserService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _BranchUserService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _BranchUserService_Delete_Handler,
		},
		{
			MethodName: "GetByPhone",
			Handler:    _BranchUserService_GetByPhone_Handler,
		},
		{
			MethodName: "UpdateFcmToken",
			Handler:    _BranchUserService_UpdateFcmToken_Handler,
		},
		{
			MethodName: "DeleteFcmToken",
			Handler:    _BranchUserService_DeleteFcmToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "branch_user_service.proto",
}
