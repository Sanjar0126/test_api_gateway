// Code generated by protoc-gen-go. DO NOT EDIT.
// source: branch_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetByJowiIDRequest struct {
	JowiId               string   `protobuf:"bytes,1,opt,name=jowi_id,json=jowiId,proto3" json:"jowi_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByJowiIDRequest) Reset()         { *m = GetByJowiIDRequest{} }
func (m *GetByJowiIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetByJowiIDRequest) ProtoMessage()    {}
func (*GetByJowiIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{0}
}

func (m *GetByJowiIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByJowiIDRequest.Unmarshal(m, b)
}
func (m *GetByJowiIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByJowiIDRequest.Marshal(b, m, deterministic)
}
func (m *GetByJowiIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByJowiIDRequest.Merge(m, src)
}
func (m *GetByJowiIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetByJowiIDRequest.Size(m)
}
func (m *GetByJowiIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByJowiIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByJowiIDRequest proto.InternalMessageInfo

func (m *GetByJowiIDRequest) GetJowiId() string {
	if m != nil {
		return m.JowiId
	}
	return ""
}

type GetByIikoIDRequest struct {
	IikoId               string   `protobuf:"bytes,1,opt,name=iiko_id,json=iikoId,proto3" json:"iiko_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIikoIDRequest) Reset()         { *m = GetByIikoIDRequest{} }
func (m *GetByIikoIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIikoIDRequest) ProtoMessage()    {}
func (*GetByIikoIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{1}
}

func (m *GetByIikoIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIikoIDRequest.Unmarshal(m, b)
}
func (m *GetByIikoIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIikoIDRequest.Marshal(b, m, deterministic)
}
func (m *GetByIikoIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIikoIDRequest.Merge(m, src)
}
func (m *GetByIikoIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIikoIDRequest.Size(m)
}
func (m *GetByIikoIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIikoIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIikoIDRequest proto.InternalMessageInfo

func (m *GetByIikoIDRequest) GetIikoId() string {
	if m != nil {
		return m.IikoId
	}
	return ""
}

type GetBranchByNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ShipperId            string   `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBranchByNameRequest) Reset()         { *m = GetBranchByNameRequest{} }
func (m *GetBranchByNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetBranchByNameRequest) ProtoMessage()    {}
func (*GetBranchByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{2}
}

func (m *GetBranchByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBranchByNameRequest.Unmarshal(m, b)
}
func (m *GetBranchByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBranchByNameRequest.Marshal(b, m, deterministic)
}
func (m *GetBranchByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBranchByNameRequest.Merge(m, src)
}
func (m *GetBranchByNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetBranchByNameRequest.Size(m)
}
func (m *GetBranchByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBranchByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBranchByNameRequest proto.InternalMessageInfo

func (m *GetBranchByNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetBranchByNameRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type BranchId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BranchId) Reset()         { *m = BranchId{} }
func (m *BranchId) String() string { return proto.CompactTextString(m) }
func (*BranchId) ProtoMessage()    {}
func (*BranchId) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{3}
}

func (m *BranchId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BranchId.Unmarshal(m, b)
}
func (m *BranchId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BranchId.Marshal(b, m, deterministic)
}
func (m *BranchId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BranchId.Merge(m, src)
}
func (m *BranchId) XXX_Size() int {
	return xxx_messageInfo_BranchId.Size(m)
}
func (m *BranchId) XXX_DiscardUnknown() {
	xxx_messageInfo_BranchId.DiscardUnknown(m)
}

var xxx_messageInfo_BranchId proto.InternalMessageInfo

func (m *BranchId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetBranchResponse struct {
	Branch               *Branch  `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBranchResponse) Reset()         { *m = GetBranchResponse{} }
func (m *GetBranchResponse) String() string { return proto.CompactTextString(m) }
func (*GetBranchResponse) ProtoMessage()    {}
func (*GetBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{4}
}

func (m *GetBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBranchResponse.Unmarshal(m, b)
}
func (m *GetBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBranchResponse.Marshal(b, m, deterministic)
}
func (m *GetBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBranchResponse.Merge(m, src)
}
func (m *GetBranchResponse) XXX_Size() int {
	return xxx_messageInfo_GetBranchResponse.Size(m)
}
func (m *GetBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBranchResponse proto.InternalMessageInfo

func (m *GetBranchResponse) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type GetAllBranchesRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Iiko                 bool     `protobuf:"varint,4,opt,name=iiko,proto3" json:"iiko,omitempty"`
	Jowi                 bool     `protobuf:"varint,5,opt,name=jowi,proto3" json:"jowi,omitempty"`
	Search               string   `protobuf:"bytes,6,opt,name=search,proto3" json:"search,omitempty"`
	FareId               string   `protobuf:"bytes,7,opt,name=fare_id,json=fareId,proto3" json:"fare_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllBranchesRequest) Reset()         { *m = GetAllBranchesRequest{} }
func (m *GetAllBranchesRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllBranchesRequest) ProtoMessage()    {}
func (*GetAllBranchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{5}
}

func (m *GetAllBranchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBranchesRequest.Unmarshal(m, b)
}
func (m *GetAllBranchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBranchesRequest.Marshal(b, m, deterministic)
}
func (m *GetAllBranchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBranchesRequest.Merge(m, src)
}
func (m *GetAllBranchesRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllBranchesRequest.Size(m)
}
func (m *GetAllBranchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBranchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBranchesRequest proto.InternalMessageInfo

func (m *GetAllBranchesRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllBranchesRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllBranchesRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetAllBranchesRequest) GetIiko() bool {
	if m != nil {
		return m.Iiko
	}
	return false
}

func (m *GetAllBranchesRequest) GetJowi() bool {
	if m != nil {
		return m.Jowi
	}
	return false
}

func (m *GetAllBranchesRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *GetAllBranchesRequest) GetFareId() string {
	if m != nil {
		return m.FareId
	}
	return ""
}

type GetAllBranchesResponse struct {
	Branches             []*Branch `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	Count                uint64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetAllBranchesResponse) Reset()         { *m = GetAllBranchesResponse{} }
func (m *GetAllBranchesResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllBranchesResponse) ProtoMessage()    {}
func (*GetAllBranchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{6}
}

func (m *GetAllBranchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllBranchesResponse.Unmarshal(m, b)
}
func (m *GetAllBranchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllBranchesResponse.Marshal(b, m, deterministic)
}
func (m *GetAllBranchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllBranchesResponse.Merge(m, src)
}
func (m *GetAllBranchesResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllBranchesResponse.Size(m)
}
func (m *GetAllBranchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllBranchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllBranchesResponse proto.InternalMessageInfo

func (m *GetAllBranchesResponse) GetBranches() []*Branch {
	if m != nil {
		return m.Branches
	}
	return nil
}

func (m *GetAllBranchesResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetNearestBranchRequest struct {
	Location             *Location `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	ShipperId            string    `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetNearestBranchRequest) Reset()         { *m = GetNearestBranchRequest{} }
func (m *GetNearestBranchRequest) String() string { return proto.CompactTextString(m) }
func (*GetNearestBranchRequest) ProtoMessage()    {}
func (*GetNearestBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{7}
}

func (m *GetNearestBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNearestBranchRequest.Unmarshal(m, b)
}
func (m *GetNearestBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNearestBranchRequest.Marshal(b, m, deterministic)
}
func (m *GetNearestBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNearestBranchRequest.Merge(m, src)
}
func (m *GetNearestBranchRequest) XXX_Size() int {
	return xxx_messageInfo_GetNearestBranchRequest.Size(m)
}
func (m *GetNearestBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNearestBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNearestBranchRequest proto.InternalMessageInfo

func (m *GetNearestBranchRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *GetNearestBranchRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type GetNearestBranchResponse struct {
	Branches             []*Branch `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetNearestBranchResponse) Reset()         { *m = GetNearestBranchResponse{} }
func (m *GetNearestBranchResponse) String() string { return proto.CompactTextString(m) }
func (*GetNearestBranchResponse) ProtoMessage()    {}
func (*GetNearestBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{8}
}

func (m *GetNearestBranchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNearestBranchResponse.Unmarshal(m, b)
}
func (m *GetNearestBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNearestBranchResponse.Marshal(b, m, deterministic)
}
func (m *GetNearestBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNearestBranchResponse.Merge(m, src)
}
func (m *GetNearestBranchResponse) XXX_Size() int {
	return xxx_messageInfo_GetNearestBranchResponse.Size(m)
}
func (m *GetNearestBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNearestBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNearestBranchResponse proto.InternalMessageInfo

func (m *GetNearestBranchResponse) GetBranches() []*Branch {
	if m != nil {
		return m.Branches
	}
	return nil
}

type DeleteBranchRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShipperId            string   `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBranchRequest) Reset()         { *m = DeleteBranchRequest{} }
func (m *DeleteBranchRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBranchRequest) ProtoMessage()    {}
func (*DeleteBranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e611f01043432822, []int{9}
}

func (m *DeleteBranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBranchRequest.Unmarshal(m, b)
}
func (m *DeleteBranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBranchRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBranchRequest.Merge(m, src)
}
func (m *DeleteBranchRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBranchRequest.Size(m)
}
func (m *DeleteBranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBranchRequest proto.InternalMessageInfo

func (m *DeleteBranchRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteBranchRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func init() {
	proto.RegisterType((*GetByJowiIDRequest)(nil), "genproto.GetByJowiIDRequest")
	proto.RegisterType((*GetByIikoIDRequest)(nil), "genproto.GetByIikoIDRequest")
	proto.RegisterType((*GetBranchByNameRequest)(nil), "genproto.GetBranchByNameRequest")
	proto.RegisterType((*BranchId)(nil), "genproto.BranchId")
	proto.RegisterType((*GetBranchResponse)(nil), "genproto.GetBranchResponse")
	proto.RegisterType((*GetAllBranchesRequest)(nil), "genproto.GetAllBranchesRequest")
	proto.RegisterType((*GetAllBranchesResponse)(nil), "genproto.GetAllBranchesResponse")
	proto.RegisterType((*GetNearestBranchRequest)(nil), "genproto.GetNearestBranchRequest")
	proto.RegisterType((*GetNearestBranchResponse)(nil), "genproto.GetNearestBranchResponse")
	proto.RegisterType((*DeleteBranchRequest)(nil), "genproto.DeleteBranchRequest")
}

func init() { proto.RegisterFile("branch_service.proto", fileDescriptor_e611f01043432822) }

var fileDescriptor_e611f01043432822 = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x5f, 0x73, 0xd2, 0x4e,
	0x14, 0x85, 0x96, 0xa6, 0x70, 0xfb, 0xfb, 0x39, 0xf5, 0xda, 0x42, 0x26, 0xda, 0x11, 0xf7, 0x89,
	0x07, 0x1b, 0x9c, 0xea, 0xab, 0xe3, 0x80, 0x38, 0x18, 0xff, 0xf4, 0x21, 0x8e, 0x2f, 0xea, 0x4c,
	0x27, 0x90, 0x5b, 0x58, 0x1b, 0xb2, 0x31, 0x09, 0x76, 0xf8, 0x68, 0x7e, 0x15, 0x3f, 0x8d, 0xb3,
	0xbb, 0x21, 0x10, 0x88, 0x74, 0xc6, 0xb7, 0xbd, 0xf7, 0x9e, 0x9c, 0x3d, 0x7b, 0x76, 0x73, 0xe0,
	0x64, 0x14, 0x7b, 0xe1, 0x78, 0x7a, 0x95, 0x50, 0xfc, 0x93, 0x8f, 0xc9, 0x8e, 0x62, 0x91, 0x0a,
	0xac, 0x4f, 0x28, 0x54, 0x2b, 0xeb, 0x3f, 0x3d, 0xd7, 0x7d, 0xeb, 0xe1, 0x44, 0x88, 0x49, 0x40,
	0x5d, 0x55, 0x8d, 0xe6, 0xd7, 0x5d, 0x9a, 0x45, 0xe9, 0x42, 0x0f, 0xd9, 0x39, 0xe0, 0x90, 0xd2,
	0xfe, 0xe2, 0x9d, 0xb8, 0xe5, 0xce, 0xc0, 0xa5, 0x1f, 0x73, 0x4a, 0x52, 0x6c, 0xc1, 0xe1, 0x77,
	0x71, 0xcb, 0xaf, 0xb8, 0x6f, 0x56, 0xdb, 0xd5, 0x4e, 0xc3, 0x35, 0x64, 0xe9, 0xf8, 0x39, 0xdc,
	0xe1, 0x37, 0xa2, 0x00, 0xe7, 0xfc, 0x46, 0xac, 0xc1, 0x65, 0xe9, 0xf8, 0xec, 0x3d, 0x34, 0x25,
	0x5c, 0xa9, 0xe9, 0x2f, 0x2e, 0xbd, 0x19, 0x2d, 0x3f, 0x41, 0xa8, 0x85, 0xde, 0x8c, 0x32, 0xbc,
	0x5a, 0xe3, 0x19, 0x40, 0x32, 0xe5, 0x51, 0x44, 0xb1, 0x64, 0xda, 0x53, 0x93, 0x46, 0xd6, 0x71,
	0x7c, 0x66, 0x41, 0x5d, 0x33, 0x39, 0x3e, 0xde, 0x83, 0xbd, 0x7c, 0xb3, 0x3d, 0xee, 0xb3, 0x97,
	0x70, 0x3f, 0xdf, 0xc8, 0xa5, 0x24, 0x12, 0x61, 0x42, 0xd8, 0x01, 0x43, 0x1b, 0xa1, 0x80, 0x47,
	0x17, 0xc7, 0xf6, 0xd2, 0x21, 0x3b, 0x43, 0x66, 0x73, 0xf6, 0xab, 0x0a, 0xa7, 0x43, 0x4a, 0x7b,
	0x41, 0xa0, 0x07, 0x94, 0xac, 0xe9, 0x8c, 0xbc, 0x89, 0xd6, 0x59, 0x73, 0xd5, 0x1a, 0x4f, 0xe0,
	0x20, 0xe0, 0x33, 0x9e, 0x2a, 0x89, 0x35, 0x57, 0x17, 0x1b, 0xea, 0xf7, 0x37, 0xd4, 0x4b, 0x22,
	0x69, 0x8a, 0x59, 0x6b, 0x57, 0x3b, 0x75, 0x57, 0xad, 0x65, 0x4f, 0xfa, 0x6a, 0x1e, 0xe8, 0x9e,
	0x5c, 0x63, 0x13, 0x8c, 0x84, 0xbc, 0x78, 0x3c, 0x35, 0x0d, 0x6d, 0xa5, 0xae, 0xa4, 0xc7, 0xd7,
	0x5e, 0x4c, 0x92, 0xfb, 0x50, 0x0f, 0x64, 0xe9, 0xf8, 0xec, 0x9b, 0xf2, 0xb8, 0x20, 0x3d, 0x3b,
	0xff, 0x53, 0xa8, 0x8f, 0xb2, 0x9e, 0x59, 0x6d, 0xef, 0x97, 0x3a, 0x90, 0x23, 0xe4, 0xa9, 0xc6,
	0x62, 0x1e, 0xe6, 0xa7, 0x52, 0x05, 0x9b, 0x42, 0x6b, 0x48, 0xe9, 0x25, 0x79, 0x31, 0x25, 0xb9,
	0xbf, 0xda, 0x1a, 0x1b, 0xea, 0x81, 0x18, 0x7b, 0x29, 0x17, 0x61, 0x66, 0x30, 0xae, 0xe8, 0x3f,
	0x64, 0x13, 0x37, 0xc7, 0xdc, 0x75, 0xbd, 0x6f, 0xc1, 0xdc, 0xde, 0xe9, 0x5f, 0x4e, 0xc2, 0x06,
	0xf0, 0x60, 0x40, 0x01, 0xa5, 0x54, 0xd4, 0xbb, 0xf1, 0x66, 0xee, 0xd0, 0x73, 0xf1, 0xbb, 0x06,
	0xff, 0x6b, 0x82, 0x4f, 0xfa, 0x37, 0xc3, 0x67, 0x60, 0xbc, 0x8e, 0xc9, 0x4b, 0x09, 0xb7, 0x76,
	0xb7, 0x70, 0xb3, 0xe3, 0xf8, 0xac, 0x82, 0xe7, 0xb0, 0x3f, 0xa4, 0x14, 0x4b, 0x86, 0xd6, 0x16,
	0x05, 0xab, 0xe0, 0x47, 0x30, 0xf4, 0x55, 0xe2, 0xe3, 0xd5, 0xb4, 0xf4, 0x5d, 0x5a, 0xed, 0xbf,
	0x03, 0xb4, 0x67, 0xac, 0x82, 0x2f, 0xc0, 0xf8, 0x1c, 0xf9, 0xe5, 0x7a, 0x9b, 0xb6, 0x4e, 0x05,
	0x7b, 0x99, 0x0a, 0xf6, 0x1b, 0x99, 0x0a, 0xac, 0x82, 0x3d, 0x30, 0xb4, 0x7b, 0x78, 0xb6, 0xfa,
	0xaa, 0xc4, 0xcf, 0x1d, 0x14, 0x5f, 0xe1, 0x78, 0xf3, 0x2a, 0xf1, 0x49, 0x41, 0x70, 0xd9, 0x83,
	0xb2, 0xd8, 0x2e, 0x48, 0x7e, 0xaa, 0x1e, 0x34, 0x54, 0x04, 0xc9, 0x34, 0xc1, 0xa2, 0x0d, 0x25,
	0x41, 0x53, 0xea, 0xf3, 0x2b, 0x38, 0x5a, 0x0b, 0x3d, 0x7c, 0x54, 0x24, 0x29, 0x66, 0xe1, 0x4e,
	0x02, 0x1d, 0x83, 0x5b, 0x04, 0x85, 0x74, 0x2c, 0x23, 0xe8, 0xb7, 0xbe, 0x9c, 0x2e, 0x9b, 0xdd,
	0x79, 0x42, 0xf1, 0x32, 0xca, 0x47, 0x86, 0xea, 0x3d, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x31,
	0x06, 0xa8, 0x7a, 0xe3, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BranchServiceClient is the client API for BranchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BranchServiceClient interface {
	Create(ctx context.Context, in *Branch, opts ...grpc.CallOption) (*BranchId, error)
	Get(ctx context.Context, in *BranchId, opts ...grpc.CallOption) (*Branch, error)
	GetAll(ctx context.Context, in *GetAllBranchesRequest, opts ...grpc.CallOption) (*GetAllBranchesResponse, error)
	Update(ctx context.Context, in *Branch, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *DeleteBranchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetNearestBranch(ctx context.Context, in *GetNearestBranchRequest, opts ...grpc.CallOption) (*GetNearestBranchResponse, error)
	GetByName(ctx context.Context, in *GetBranchByNameRequest, opts ...grpc.CallOption) (*Branch, error)
	GetByJowiID(ctx context.Context, in *GetByJowiIDRequest, opts ...grpc.CallOption) (*Branch, error)
	GetByIikoID(ctx context.Context, in *GetByIikoIDRequest, opts ...grpc.CallOption) (*Branch, error)
}

type branchServiceClient struct {
	cc *grpc.ClientConn
}

func NewBranchServiceClient(cc *grpc.ClientConn) BranchServiceClient {
	return &branchServiceClient{cc}
}

func (c *branchServiceClient) Create(ctx context.Context, in *Branch, opts ...grpc.CallOption) (*BranchId, error) {
	out := new(BranchId)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) Get(ctx context.Context, in *BranchId, opts ...grpc.CallOption) (*Branch, error) {
	out := new(Branch)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) GetAll(ctx context.Context, in *GetAllBranchesRequest, opts ...grpc.CallOption) (*GetAllBranchesResponse, error) {
	out := new(GetAllBranchesResponse)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) Update(ctx context.Context, in *Branch, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) Delete(ctx context.Context, in *DeleteBranchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) GetNearestBranch(ctx context.Context, in *GetNearestBranchRequest, opts ...grpc.CallOption) (*GetNearestBranchResponse, error) {
	out := new(GetNearestBranchResponse)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/GetNearestBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) GetByName(ctx context.Context, in *GetBranchByNameRequest, opts ...grpc.CallOption) (*Branch, error) {
	out := new(Branch)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/GetByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) GetByJowiID(ctx context.Context, in *GetByJowiIDRequest, opts ...grpc.CallOption) (*Branch, error) {
	out := new(Branch)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/GetByJowiID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *branchServiceClient) GetByIikoID(ctx context.Context, in *GetByIikoIDRequest, opts ...grpc.CallOption) (*Branch, error) {
	out := new(Branch)
	err := c.cc.Invoke(ctx, "/genproto.BranchService/GetByIikoID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BranchServiceServer is the server API for BranchService service.
type BranchServiceServer interface {
	Create(context.Context, *Branch) (*BranchId, error)
	Get(context.Context, *BranchId) (*Branch, error)
	GetAll(context.Context, *GetAllBranchesRequest) (*GetAllBranchesResponse, error)
	Update(context.Context, *Branch) (*emptypb.Empty, error)
	Delete(context.Context, *DeleteBranchRequest) (*emptypb.Empty, error)
	GetNearestBranch(context.Context, *GetNearestBranchRequest) (*GetNearestBranchResponse, error)
	GetByName(context.Context, *GetBranchByNameRequest) (*Branch, error)
	GetByJowiID(context.Context, *GetByJowiIDRequest) (*Branch, error)
	GetByIikoID(context.Context, *GetByIikoIDRequest) (*Branch, error)
}

// UnimplementedBranchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBranchServiceServer struct {
}

func (*UnimplementedBranchServiceServer) Create(ctx context.Context, req *Branch) (*BranchId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedBranchServiceServer) Get(ctx context.Context, req *BranchId) (*Branch, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedBranchServiceServer) GetAll(ctx context.Context, req *GetAllBranchesRequest) (*GetAllBranchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedBranchServiceServer) Update(ctx context.Context, req *Branch) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedBranchServiceServer) Delete(ctx context.Context, req *DeleteBranchRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedBranchServiceServer) GetNearestBranch(ctx context.Context, req *GetNearestBranchRequest) (*GetNearestBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNearestBranch not implemented")
}
func (*UnimplementedBranchServiceServer) GetByName(ctx context.Context, req *GetBranchByNameRequest) (*Branch, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByName not implemented")
}
func (*UnimplementedBranchServiceServer) GetByJowiID(ctx context.Context, req *GetByJowiIDRequest) (*Branch, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByJowiID not implemented")
}
func (*UnimplementedBranchServiceServer) GetByIikoID(ctx context.Context, req *GetByIikoIDRequest) (*Branch, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByIikoID not implemented")
}

func RegisterBranchServiceServer(s *grpc.Server, srv BranchServiceServer) {
	s.RegisterService(&_BranchService_serviceDesc, srv)
}

func _BranchService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Branch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).Create(ctx, req.(*Branch))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BranchId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).Get(ctx, req.(*BranchId))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllBranchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).GetAll(ctx, req.(*GetAllBranchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Branch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).Update(ctx, req.(*Branch))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).Delete(ctx, req.(*DeleteBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_GetNearestBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNearestBranchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).GetNearestBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/GetNearestBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).GetNearestBranch(ctx, req.(*GetNearestBranchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_GetByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBranchByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).GetByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/GetByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).GetByName(ctx, req.(*GetBranchByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_GetByJowiID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByJowiIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).GetByJowiID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/GetByJowiID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).GetByJowiID(ctx, req.(*GetByJowiIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BranchService_GetByIikoID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIikoIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BranchServiceServer).GetByIikoID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.BranchService/GetByIikoID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BranchServiceServer).GetByIikoID(ctx, req.(*GetByIikoIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BranchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.BranchService",
	HandlerType: (*BranchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _BranchService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _BranchService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _BranchService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _BranchService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _BranchService_Delete_Handler,
		},
		{
			MethodName: "GetNearestBranch",
			Handler:    _BranchService_GetNearestBranch_Handler,
		},
		{
			MethodName: "GetByName",
			Handler:    _BranchService_GetByName_Handler,
		},
		{
			MethodName: "GetByJowiID",
			Handler:    _BranchService_GetByJowiID_Handler,
		},
		{
			MethodName: "GetByIikoID",
			Handler:    _BranchService_GetByIikoID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "branch_service.proto",
}
