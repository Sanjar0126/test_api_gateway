// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shipper.proto

package user_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Shipper struct {
	Id                          string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                        string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo                        string                  `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
	Description                 string                  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Phone                       []string                `protobuf:"bytes,5,rep,name=phone,proto3" json:"phone,omitempty"`
	IsActive                    bool                    `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt                   string                  `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                   string                  `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CallCenterTg                *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=call_center_tg,json=callCenterTg,proto3" json:"call_center_tg,omitempty"`
	WorkHourStart               string                  `protobuf:"bytes,10,opt,name=work_hour_start,json=workHourStart,proto3" json:"work_hour_start,omitempty"`
	WorkHourEnd                 string                  `protobuf:"bytes,11,opt,name=work_hour_end,json=workHourEnd,proto3" json:"work_hour_end,omitempty"`
	MenuImage                   *wrapperspb.StringValue `protobuf:"bytes,12,opt,name=menu_image,json=menuImage,proto3" json:"menu_image,omitempty"`
	Crm                         string                  `protobuf:"bytes,13,opt,name=crm,proto3" json:"crm,omitempty"`
	CourierAcceptsFirst         bool                    `protobuf:"varint,14,opt,name=courier_accepts_first,json=courierAcceptsFirst,proto3" json:"courier_accepts_first,omitempty"`
	CheckCourierActionRadius    bool                    `protobuf:"varint,15,opt,name=check_courier_action_radius,json=checkCourierActionRadius,proto3" json:"check_courier_action_radius,omitempty"`
	CourierActionRadius         int64                   `protobuf:"varint,16,opt,name=courier_action_radius,json=courierActionRadius,proto3" json:"courier_action_radius,omitempty"`
	MaxDeliveryTime             int64                   `protobuf:"varint,17,opt,name=max_delivery_time,json=maxDeliveryTime,proto3" json:"max_delivery_time,omitempty"`
	MaxCourierOrders            int64                   `protobuf:"varint,18,opt,name=max_courier_orders,json=maxCourierOrders,proto3" json:"max_courier_orders,omitempty"`
	ProcessOnlyPaidOrders       bool                    `protobuf:"varint,19,opt,name=process_only_paid_orders,json=processOnlyPaidOrders,proto3" json:"process_only_paid_orders,omitempty"`
	ShowLocationBeforeAccepting bool                    `protobuf:"varint,20,opt,name=show_location_before_accepting,json=showLocationBeforeAccepting,proto3" json:"show_location_before_accepting,omitempty"`
	Distance                    *wrapperspb.FloatValue  `protobuf:"bytes,21,opt,name=distance,proto3" json:"distance,omitempty"`
	EnableCourierWorkingHours   bool                    `protobuf:"varint,22,opt,name=enable_courier_working_hours,json=enableCourierWorkingHours,proto3" json:"enable_courier_working_hours,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                `json:"-"`
	XXX_unrecognized            []byte                  `json:"-"`
	XXX_sizecache               int32                   `json:"-"`
}

func (m *Shipper) Reset()         { *m = Shipper{} }
func (m *Shipper) String() string { return proto.CompactTextString(m) }
func (*Shipper) ProtoMessage()    {}
func (*Shipper) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2a14d76411df457, []int{0}
}

func (m *Shipper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shipper.Unmarshal(m, b)
}
func (m *Shipper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shipper.Marshal(b, m, deterministic)
}
func (m *Shipper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shipper.Merge(m, src)
}
func (m *Shipper) XXX_Size() int {
	return xxx_messageInfo_Shipper.Size(m)
}
func (m *Shipper) XXX_DiscardUnknown() {
	xxx_messageInfo_Shipper.DiscardUnknown(m)
}

var xxx_messageInfo_Shipper proto.InternalMessageInfo

func (m *Shipper) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Shipper) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Shipper) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

func (m *Shipper) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Shipper) GetPhone() []string {
	if m != nil {
		return m.Phone
	}
	return nil
}

func (m *Shipper) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Shipper) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Shipper) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Shipper) GetCallCenterTg() *wrapperspb.StringValue {
	if m != nil {
		return m.CallCenterTg
	}
	return nil
}

func (m *Shipper) GetWorkHourStart() string {
	if m != nil {
		return m.WorkHourStart
	}
	return ""
}

func (m *Shipper) GetWorkHourEnd() string {
	if m != nil {
		return m.WorkHourEnd
	}
	return ""
}

func (m *Shipper) GetMenuImage() *wrapperspb.StringValue {
	if m != nil {
		return m.MenuImage
	}
	return nil
}

func (m *Shipper) GetCrm() string {
	if m != nil {
		return m.Crm
	}
	return ""
}

func (m *Shipper) GetCourierAcceptsFirst() bool {
	if m != nil {
		return m.CourierAcceptsFirst
	}
	return false
}

func (m *Shipper) GetCheckCourierActionRadius() bool {
	if m != nil {
		return m.CheckCourierActionRadius
	}
	return false
}

func (m *Shipper) GetCourierActionRadius() int64 {
	if m != nil {
		return m.CourierActionRadius
	}
	return 0
}

func (m *Shipper) GetMaxDeliveryTime() int64 {
	if m != nil {
		return m.MaxDeliveryTime
	}
	return 0
}

func (m *Shipper) GetMaxCourierOrders() int64 {
	if m != nil {
		return m.MaxCourierOrders
	}
	return 0
}

func (m *Shipper) GetProcessOnlyPaidOrders() bool {
	if m != nil {
		return m.ProcessOnlyPaidOrders
	}
	return false
}

func (m *Shipper) GetShowLocationBeforeAccepting() bool {
	if m != nil {
		return m.ShowLocationBeforeAccepting
	}
	return false
}

func (m *Shipper) GetDistance() *wrapperspb.FloatValue {
	if m != nil {
		return m.Distance
	}
	return nil
}

func (m *Shipper) GetEnableCourierWorkingHours() bool {
	if m != nil {
		return m.EnableCourierWorkingHours
	}
	return false
}

func init() {
	proto.RegisterType((*Shipper)(nil), "genproto.Shipper")
}

func init() { proto.RegisterFile("shipper.proto", fileDescriptor_b2a14d76411df457) }

var fileDescriptor_b2a14d76411df457 = []byte{
	// 592 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdb, 0x6b, 0x14, 0x31,
	0x14, 0xc6, 0xd9, 0x6e, 0x2f, 0x3b, 0x69, 0xb7, 0x97, 0xb4, 0xab, 0xd1, 0xad, 0x65, 0xe8, 0x83,
	0x2c, 0x22, 0x5b, 0xa8, 0x0f, 0x7d, 0x10, 0x91, 0x6d, 0xb5, 0x28, 0x08, 0x95, 0x6d, 0x51, 0xf0,
	0x25, 0x64, 0x93, 0xd3, 0xd9, 0xd0, 0x99, 0x64, 0x48, 0x32, 0xbd, 0xfc, 0x4f, 0xfe, 0x91, 0x92,
	0x33, 0x33, 0xed, 0x8a, 0x2f, 0xbe, 0x25, 0xdf, 0xf7, 0xfb, 0xe6, 0x24, 0xe7, 0x64, 0x48, 0xdf,
	0xcf, 0x75, 0x59, 0x82, 0x1b, 0x97, 0xce, 0x06, 0x4b, 0x7b, 0x19, 0x18, 0x5c, 0xbd, 0x3c, 0xc8,
	0xac, 0xcd, 0x72, 0x38, 0xc2, 0xdd, 0xac, 0xba, 0x3e, 0xba, 0x73, 0x22, 0x82, 0xbe, 0x26, 0x0f,
	0x7f, 0xaf, 0x91, 0xb5, 0xcb, 0x3a, 0x4b, 0x37, 0xc9, 0x92, 0x56, 0xac, 0x93, 0x76, 0x46, 0xc9,
	0x74, 0x49, 0x2b, 0x4a, 0xc9, 0xb2, 0x11, 0x05, 0xb0, 0x25, 0x54, 0x70, 0x1d, 0xb5, 0xdc, 0x66,
	0x96, 0x75, 0x6b, 0x2d, 0xae, 0x69, 0x4a, 0xd6, 0x15, 0x78, 0xe9, 0x74, 0x19, 0xb4, 0x35, 0x6c,
	0x19, 0xad, 0x45, 0x89, 0xee, 0x91, 0x95, 0x72, 0x6e, 0x0d, 0xb0, 0x95, 0xb4, 0x3b, 0x4a, 0xa6,
	0xf5, 0x86, 0x0e, 0x49, 0xa2, 0x3d, 0x17, 0x32, 0xe8, 0x5b, 0x60, 0xab, 0x69, 0x67, 0xd4, 0x9b,
	0xf6, 0xb4, 0x9f, 0xe0, 0x9e, 0xbe, 0x22, 0x44, 0x3a, 0x10, 0x01, 0x14, 0x17, 0x81, 0xad, 0xe1,
	0x37, 0x93, 0x46, 0x99, 0x84, 0x68, 0x57, 0xa5, 0x6a, 0xed, 0x5e, 0x6d, 0x37, 0xca, 0x24, 0xd0,
	0x53, 0xb2, 0x29, 0x45, 0x9e, 0x73, 0x09, 0x26, 0x80, 0xe3, 0x21, 0x63, 0x49, 0xda, 0x19, 0xad,
	0x1f, 0xef, 0x8f, 0xeb, 0x7e, 0x8c, 0xdb, 0x7e, 0x8c, 0x2f, 0x83, 0xd3, 0x26, 0xfb, 0x21, 0xf2,
	0x0a, 0xa6, 0x1b, 0x31, 0x73, 0x86, 0x91, 0xab, 0x8c, 0xbe, 0x26, 0x5b, 0x77, 0xd6, 0xdd, 0xf0,
	0xb9, 0xad, 0x1c, 0xf7, 0x41, 0xb8, 0xc0, 0x08, 0xd6, 0xe9, 0x47, 0xf9, 0x8b, 0xad, 0xdc, 0x65,
	0x14, 0xe9, 0x21, 0xe9, 0x3f, 0x71, 0x60, 0x14, 0x5b, 0xaf, 0x1b, 0xd0, 0x52, 0x9f, 0x8d, 0xa2,
	0xef, 0x09, 0x29, 0xc0, 0x54, 0x5c, 0x17, 0x22, 0x03, 0xb6, 0xf1, 0x1f, 0x67, 0x49, 0x22, 0xff,
	0x35, 0xe2, 0x74, 0x9b, 0x74, 0xa5, 0x2b, 0x58, 0x1f, 0x3f, 0x1b, 0x97, 0xf4, 0x98, 0x0c, 0xa4,
	0xad, 0x9c, 0x06, 0xc7, 0x85, 0x94, 0x50, 0x06, 0xcf, 0xaf, 0xb5, 0xf3, 0x81, 0x6d, 0x62, 0x17,
	0x77, 0x1b, 0x73, 0x52, 0x7b, 0xe7, 0xd1, 0xa2, 0x1f, 0xc8, 0x50, 0xce, 0x41, 0xde, 0xf0, 0xa7,
	0x64, 0x9c, 0x0d, 0x77, 0x42, 0xe9, 0xca, 0xb3, 0x2d, 0x4c, 0x32, 0x44, 0xce, 0xda, 0x78, 0x04,
	0xa6, 0xe8, 0xff, 0x5d, 0x72, 0x31, 0xb8, 0x9d, 0x76, 0x46, 0xdd, 0x85, 0x92, 0x0b, 0x99, 0x37,
	0x64, 0xa7, 0x10, 0xf7, 0x5c, 0x41, 0xae, 0x6f, 0xc1, 0x3d, 0xf0, 0xa0, 0x0b, 0x60, 0x3b, 0xc8,
	0x6f, 0x15, 0xe2, 0xfe, 0x53, 0xa3, 0x5f, 0xe9, 0x02, 0xe8, 0x5b, 0x42, 0x23, 0xdb, 0xd6, 0xb0,
	0x4e, 0x81, 0xf3, 0x8c, 0x22, 0xbc, 0x5d, 0x88, 0xfb, 0xe6, 0x4c, 0x17, 0xa8, 0xd3, 0x13, 0xc2,
	0x4a, 0x67, 0x25, 0x78, 0xcf, 0xad, 0xc9, 0x1f, 0x78, 0x29, 0xb4, 0x6a, 0x33, 0xbb, 0x78, 0x93,
	0x41, 0xe3, 0x5f, 0x98, 0xfc, 0xe1, 0xbb, 0xd0, 0xaa, 0x09, 0x9e, 0x91, 0x03, 0x3f, 0xb7, 0x77,
	0x3c, 0xb7, 0x52, 0xe0, 0x2d, 0x66, 0x70, 0x6d, 0x1d, 0x34, 0x6d, 0xd4, 0x26, 0x63, 0x7b, 0x18,
	0x1f, 0x46, 0xea, 0x5b, 0x03, 0x9d, 0x22, 0x33, 0x69, 0x11, 0x7a, 0x42, 0x7a, 0x4a, 0xfb, 0x20,
	0x8c, 0x04, 0x36, 0xc0, 0x59, 0x0e, 0xff, 0x99, 0xe5, 0x79, 0x6e, 0x45, 0xa8, 0x47, 0xf9, 0x08,
	0xd3, 0x8f, 0x64, 0x1f, 0x8c, 0x98, 0xe5, 0xf0, 0x78, 0xcf, 0xf8, 0x48, 0xb4, 0xc9, 0xf0, 0xf1,
	0x78, 0xf6, 0x0c, 0x6b, 0xbf, 0xa8, 0x99, 0xe6, 0xc6, 0x3f, 0x6b, 0x22, 0xbe, 0x24, 0x7f, 0xfa,
	0xfc, 0xd7, 0xa0, 0xfd, 0xb5, 0x8f, 0x2a, 0x0f, 0x8e, 0x7b, 0x70, 0xb7, 0x5a, 0xc2, 0x6c, 0x15,
	0xb5, 0x77, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x82, 0x24, 0xcb, 0x0c, 0x09, 0x04, 0x00, 0x00,
}
