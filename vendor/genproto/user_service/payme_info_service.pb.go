// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payme_info_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PaymeInfoId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BranchId             string   `protobuf:"bytes,2,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymeInfoId) Reset()         { *m = PaymeInfoId{} }
func (m *PaymeInfoId) String() string { return proto.CompactTextString(m) }
func (*PaymeInfoId) ProtoMessage()    {}
func (*PaymeInfoId) Descriptor() ([]byte, []int) {
	return fileDescriptor_d64fe59e4c449a74, []int{0}
}

func (m *PaymeInfoId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymeInfoId.Unmarshal(m, b)
}
func (m *PaymeInfoId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymeInfoId.Marshal(b, m, deterministic)
}
func (m *PaymeInfoId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymeInfoId.Merge(m, src)
}
func (m *PaymeInfoId) XXX_Size() int {
	return xxx_messageInfo_PaymeInfoId.Size(m)
}
func (m *PaymeInfoId) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymeInfoId.DiscardUnknown(m)
}

var xxx_messageInfo_PaymeInfoId proto.InternalMessageInfo

func (m *PaymeInfoId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymeInfoId) GetBranchId() string {
	if m != nil {
		return m.BranchId
	}
	return ""
}

type GetAllPaymeInfoRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Search               string   `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Page                 uint64   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllPaymeInfoRequest) Reset()         { *m = GetAllPaymeInfoRequest{} }
func (m *GetAllPaymeInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllPaymeInfoRequest) ProtoMessage()    {}
func (*GetAllPaymeInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d64fe59e4c449a74, []int{1}
}

func (m *GetAllPaymeInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllPaymeInfoRequest.Unmarshal(m, b)
}
func (m *GetAllPaymeInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllPaymeInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetAllPaymeInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllPaymeInfoRequest.Merge(m, src)
}
func (m *GetAllPaymeInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllPaymeInfoRequest.Size(m)
}
func (m *GetAllPaymeInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllPaymeInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllPaymeInfoRequest proto.InternalMessageInfo

func (m *GetAllPaymeInfoRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetAllPaymeInfoRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *GetAllPaymeInfoRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllPaymeInfoRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetAllPaymeInfoResponse struct {
	PaymeInfos           []*Payme `protobuf:"bytes,1,rep,name=payme_infos,json=paymeInfos,proto3" json:"payme_infos,omitempty"`
	Count                uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllPaymeInfoResponse) Reset()         { *m = GetAllPaymeInfoResponse{} }
func (m *GetAllPaymeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllPaymeInfoResponse) ProtoMessage()    {}
func (*GetAllPaymeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d64fe59e4c449a74, []int{2}
}

func (m *GetAllPaymeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllPaymeInfoResponse.Unmarshal(m, b)
}
func (m *GetAllPaymeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllPaymeInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetAllPaymeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllPaymeInfoResponse.Merge(m, src)
}
func (m *GetAllPaymeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllPaymeInfoResponse.Size(m)
}
func (m *GetAllPaymeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllPaymeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllPaymeInfoResponse proto.InternalMessageInfo

func (m *GetAllPaymeInfoResponse) GetPaymeInfos() []*Payme {
	if m != nil {
		return m.PaymeInfos
	}
	return nil
}

func (m *GetAllPaymeInfoResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*PaymeInfoId)(nil), "genproto.PaymeInfoId")
	proto.RegisterType((*GetAllPaymeInfoRequest)(nil), "genproto.GetAllPaymeInfoRequest")
	proto.RegisterType((*GetAllPaymeInfoResponse)(nil), "genproto.GetAllPaymeInfoResponse")
}

func init() { proto.RegisterFile("payme_info_service.proto", fileDescriptor_d64fe59e4c449a74) }

var fileDescriptor_d64fe59e4c449a74 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0xed, 0x17, 0xd1, 0x76, 0x2a, 0xc1, 0x6a, 0xc4, 0x76, 0xa3, 0xac, 0x90, 0x4a, 0x4e, 0x3d,
	0x25, 0xa8, 0x7b, 0x82, 0x1b, 0xbb, 0xa0, 0x55, 0x2e, 0x80, 0xb2, 0xe2, 0xc2, 0x25, 0x4a, 0xe3,
	0x69, 0x6a, 0x29, 0x8d, 0x8d, 0xed, 0x20, 0xe5, 0x1f, 0xf0, 0xb3, 0x51, 0xed, 0xa6, 0x45, 0xa1,
	0xe5, 0xe6, 0x79, 0xcf, 0xf3, 0x3c, 0x7e, 0xf3, 0xc0, 0x97, 0x79, 0xbb, 0xa3, 0x8c, 0xd7, 0x1b,
	0x91, 0x69, 0x52, 0xbf, 0x78, 0x41, 0x91, 0x54, 0xc2, 0x08, 0xbc, 0x2a, 0xa9, 0xb6, 0xa7, 0xe0,
	0xfa, 0x74, 0xc7, 0x71, 0xc1, 0x5d, 0x29, 0x44, 0x59, 0x51, 0x6c, 0xab, 0x75, 0xb3, 0x89, 0x69,
	0x27, 0x4d, 0xeb, 0xc8, 0xf0, 0x03, 0xcc, 0xbe, 0xed, 0x1b, 0x92, 0x7a, 0x23, 0x12, 0x86, 0x2f,
	0x61, 0xc4, 0x99, 0x3f, 0x5c, 0x0c, 0x97, 0xd3, 0x74, 0xc4, 0x19, 0xde, 0xc1, 0x74, 0xad, 0xf2,
	0xba, 0xd8, 0x66, 0x9c, 0xf9, 0x23, 0x0b, 0x5f, 0x39, 0x20, 0x61, 0x61, 0x0b, 0xf3, 0x27, 0x32,
	0x1f, 0xab, 0xea, 0xa8, 0x90, 0xd2, 0xcf, 0x86, 0xb4, 0xc1, 0x37, 0x00, 0x7a, 0xcb, 0xa5, 0x24,
	0x95, 0x1d, 0xe5, 0xa6, 0x07, 0x24, 0x61, 0x38, 0x07, 0x4f, 0x53, 0xae, 0x8a, 0xed, 0x41, 0xf2,
	0x50, 0x21, 0xc2, 0x44, 0xe6, 0x25, 0xf9, 0xe3, 0xc5, 0x70, 0x39, 0x49, 0xed, 0x19, 0x5f, 0xc3,
	0x8b, 0x8a, 0xef, 0xb8, 0xf1, 0x27, 0x16, 0x74, 0x45, 0x98, 0xc3, 0xed, 0x3f, 0x4f, 0x6b, 0x29,
	0x6a, 0x4d, 0xf8, 0x0e, 0x66, 0x27, 0x0b, 0xb4, 0x3f, 0x5c, 0x8c, 0x97, 0xb3, 0xd5, 0xab, 0xa8,
	0x33, 0x28, 0xb2, 0x1d, 0x29, 0xc8, 0xae, 0x51, 0xef, 0x9f, 0x28, 0x44, 0x53, 0x1b, 0x3b, 0xcd,
	0x24, 0x75, 0xc5, 0xea, 0xf7, 0x18, 0xae, 0x8f, 0xea, 0xcf, 0xce, 0x6d, 0x5c, 0x81, 0xf7, 0xa8,
	0x28, 0x37, 0x84, 0x7d, 0xc5, 0xe0, 0xa6, 0x07, 0x38, 0x47, 0xc3, 0x01, 0xc6, 0x30, 0x7e, 0x22,
	0x83, 0xe7, 0xf9, 0xa0, 0xaf, 0x13, 0x0e, 0xf0, 0x2b, 0x78, 0xee, 0x73, 0xb8, 0x38, 0x91, 0xe7,
	0x9d, 0x0e, 0xde, 0xfe, 0xe7, 0x86, 0x33, 0x24, 0x1c, 0xe0, 0x3d, 0x78, 0xdf, 0x25, 0x3b, 0x3b,
	0xf5, 0x3c, 0x72, 0xe9, 0x88, 0xba, 0x74, 0x44, 0x9f, 0xf7, 0xe9, 0x08, 0x07, 0xf8, 0x1e, 0xbc,
	0x4f, 0x54, 0x91, 0xa1, 0x4b, 0x93, 0x5f, 0x6e, 0xfd, 0x62, 0xb7, 0xf3, 0xec, 0xf6, 0xfd, 0xd0,
	0x3e, 0x2a, 0x62, 0x54, 0x1b, 0x9e, 0x57, 0x1a, 0x83, 0x9e, 0xd6, 0x5f, 0xdc, 0x45, 0x07, 0x1f,
	0x6e, 0x7f, 0xdc, 0x74, 0x4c, 0xdc, 0x68, 0x52, 0x5d, 0xf8, 0xd7, 0x9e, 0xc5, 0xee, 0xff, 0x04,
	0x00, 0x00, 0xff, 0xff, 0xcf, 0xb8, 0x79, 0xde, 0x19, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PaymeInfoServiceClient is the client API for PaymeInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymeInfoServiceClient interface {
	Create(ctx context.Context, in *Payme, opts ...grpc.CallOption) (*PaymeInfoId, error)
	Get(ctx context.Context, in *PaymeInfoId, opts ...grpc.CallOption) (*Payme, error)
	GetAll(ctx context.Context, in *GetAllPaymeInfoRequest, opts ...grpc.CallOption) (*GetAllPaymeInfoResponse, error)
	Update(ctx context.Context, in *Payme, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *PaymeInfoId, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetShipperByCredentials(ctx context.Context, in *PaymeCredentials, opts ...grpc.CallOption) (*PaymeInfoId, error)
}

type paymeInfoServiceClient struct {
	cc *grpc.ClientConn
}

func NewPaymeInfoServiceClient(cc *grpc.ClientConn) PaymeInfoServiceClient {
	return &paymeInfoServiceClient{cc}
}

func (c *paymeInfoServiceClient) Create(ctx context.Context, in *Payme, opts ...grpc.CallOption) (*PaymeInfoId, error) {
	out := new(PaymeInfoId)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) Get(ctx context.Context, in *PaymeInfoId, opts ...grpc.CallOption) (*Payme, error) {
	out := new(Payme)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) GetAll(ctx context.Context, in *GetAllPaymeInfoRequest, opts ...grpc.CallOption) (*GetAllPaymeInfoResponse, error) {
	out := new(GetAllPaymeInfoResponse)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) Update(ctx context.Context, in *Payme, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) Delete(ctx context.Context, in *PaymeInfoId, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymeInfoServiceClient) GetShipperByCredentials(ctx context.Context, in *PaymeCredentials, opts ...grpc.CallOption) (*PaymeInfoId, error) {
	out := new(PaymeInfoId)
	err := c.cc.Invoke(ctx, "/genproto.PaymeInfoService/GetShipperByCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymeInfoServiceServer is the server API for PaymeInfoService service.
type PaymeInfoServiceServer interface {
	Create(context.Context, *Payme) (*PaymeInfoId, error)
	Get(context.Context, *PaymeInfoId) (*Payme, error)
	GetAll(context.Context, *GetAllPaymeInfoRequest) (*GetAllPaymeInfoResponse, error)
	Update(context.Context, *Payme) (*emptypb.Empty, error)
	Delete(context.Context, *PaymeInfoId) (*emptypb.Empty, error)
	GetShipperByCredentials(context.Context, *PaymeCredentials) (*PaymeInfoId, error)
}

// UnimplementedPaymeInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPaymeInfoServiceServer struct {
}

func (*UnimplementedPaymeInfoServiceServer) Create(ctx context.Context, req *Payme) (*PaymeInfoId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) Get(ctx context.Context, req *PaymeInfoId) (*Payme, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) GetAll(ctx context.Context, req *GetAllPaymeInfoRequest) (*GetAllPaymeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) Update(ctx context.Context, req *Payme) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) Delete(ctx context.Context, req *PaymeInfoId) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedPaymeInfoServiceServer) GetShipperByCredentials(ctx context.Context, req *PaymeCredentials) (*PaymeInfoId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShipperByCredentials not implemented")
}

func RegisterPaymeInfoServiceServer(s *grpc.Server, srv PaymeInfoServiceServer) {
	s.RegisterService(&_PaymeInfoService_serviceDesc, srv)
}

func _PaymeInfoService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Payme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).Create(ctx, req.(*Payme))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymeInfoId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).Get(ctx, req.(*PaymeInfoId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllPaymeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).GetAll(ctx, req.(*GetAllPaymeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Payme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).Update(ctx, req.(*Payme))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymeInfoId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).Delete(ctx, req.(*PaymeInfoId))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymeInfoService_GetShipperByCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymeCredentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymeInfoServiceServer).GetShipperByCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.PaymeInfoService/GetShipperByCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymeInfoServiceServer).GetShipperByCredentials(ctx, req.(*PaymeCredentials))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymeInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.PaymeInfoService",
	HandlerType: (*PaymeInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PaymeInfoService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _PaymeInfoService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _PaymeInfoService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PaymeInfoService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PaymeInfoService_Delete_Handler,
		},
		{
			MethodName: "GetShipperByCredentials",
			Handler:    _PaymeInfoService_GetShipperByCredentials_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payme_info_service.proto",
}
