// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shipper_user_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChangePasswordRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5910ee1b710f5330, []int{0}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChangePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ShipperUserId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShipperUserId) Reset()         { *m = ShipperUserId{} }
func (m *ShipperUserId) String() string { return proto.CompactTextString(m) }
func (*ShipperUserId) ProtoMessage()    {}
func (*ShipperUserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_5910ee1b710f5330, []int{1}
}

func (m *ShipperUserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShipperUserId.Unmarshal(m, b)
}
func (m *ShipperUserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShipperUserId.Marshal(b, m, deterministic)
}
func (m *ShipperUserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShipperUserId.Merge(m, src)
}
func (m *ShipperUserId) XXX_Size() int {
	return xxx_messageInfo_ShipperUserId.Size(m)
}
func (m *ShipperUserId) XXX_DiscardUnknown() {
	xxx_messageInfo_ShipperUserId.DiscardUnknown(m)
}

var xxx_messageInfo_ShipperUserId proto.InternalMessageInfo

func (m *ShipperUserId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetShipperUserByUsernameRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShipperUserByUsernameRequest) Reset()         { *m = GetShipperUserByUsernameRequest{} }
func (m *GetShipperUserByUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*GetShipperUserByUsernameRequest) ProtoMessage()    {}
func (*GetShipperUserByUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5910ee1b710f5330, []int{2}
}

func (m *GetShipperUserByUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShipperUserByUsernameRequest.Unmarshal(m, b)
}
func (m *GetShipperUserByUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShipperUserByUsernameRequest.Marshal(b, m, deterministic)
}
func (m *GetShipperUserByUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShipperUserByUsernameRequest.Merge(m, src)
}
func (m *GetShipperUserByUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_GetShipperUserByUsernameRequest.Size(m)
}
func (m *GetShipperUserByUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShipperUserByUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShipperUserByUsernameRequest proto.InternalMessageInfo

func (m *GetShipperUserByUsernameRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetShipperUserByUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GetByCredentialsRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByCredentialsRequest) Reset()         { *m = GetByCredentialsRequest{} }
func (m *GetByCredentialsRequest) String() string { return proto.CompactTextString(m) }
func (*GetByCredentialsRequest) ProtoMessage()    {}
func (*GetByCredentialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5910ee1b710f5330, []int{3}
}

func (m *GetByCredentialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByCredentialsRequest.Unmarshal(m, b)
}
func (m *GetByCredentialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByCredentialsRequest.Marshal(b, m, deterministic)
}
func (m *GetByCredentialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByCredentialsRequest.Merge(m, src)
}
func (m *GetByCredentialsRequest) XXX_Size() int {
	return xxx_messageInfo_GetByCredentialsRequest.Size(m)
}
func (m *GetByCredentialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByCredentialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByCredentialsRequest proto.InternalMessageInfo

func (m *GetByCredentialsRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetByCredentialsRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetByCredentialsRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type GetAllShipperUsersRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	UserRoleId           string   `protobuf:"bytes,4,opt,name=user_role_id,json=userRoleId,proto3" json:"user_role_id,omitempty"`
	Search               string   `protobuf:"bytes,5,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllShipperUsersRequest) Reset()         { *m = GetAllShipperUsersRequest{} }
func (m *GetAllShipperUsersRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllShipperUsersRequest) ProtoMessage()    {}
func (*GetAllShipperUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5910ee1b710f5330, []int{4}
}

func (m *GetAllShipperUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllShipperUsersRequest.Unmarshal(m, b)
}
func (m *GetAllShipperUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllShipperUsersRequest.Marshal(b, m, deterministic)
}
func (m *GetAllShipperUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllShipperUsersRequest.Merge(m, src)
}
func (m *GetAllShipperUsersRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllShipperUsersRequest.Size(m)
}
func (m *GetAllShipperUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllShipperUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllShipperUsersRequest proto.InternalMessageInfo

func (m *GetAllShipperUsersRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllShipperUsersRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllShipperUsersRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetAllShipperUsersRequest) GetUserRoleId() string {
	if m != nil {
		return m.UserRoleId
	}
	return ""
}

func (m *GetAllShipperUsersRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type GetAllShipperUsersResponse struct {
	ShipperUsers         []*ShipperUser `protobuf:"bytes,1,rep,name=shipper_users,json=shipperUsers,proto3" json:"shipper_users,omitempty"`
	Count                uint64         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAllShipperUsersResponse) Reset()         { *m = GetAllShipperUsersResponse{} }
func (m *GetAllShipperUsersResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllShipperUsersResponse) ProtoMessage()    {}
func (*GetAllShipperUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5910ee1b710f5330, []int{5}
}

func (m *GetAllShipperUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllShipperUsersResponse.Unmarshal(m, b)
}
func (m *GetAllShipperUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllShipperUsersResponse.Marshal(b, m, deterministic)
}
func (m *GetAllShipperUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllShipperUsersResponse.Merge(m, src)
}
func (m *GetAllShipperUsersResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllShipperUsersResponse.Size(m)
}
func (m *GetAllShipperUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllShipperUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllShipperUsersResponse proto.InternalMessageInfo

func (m *GetAllShipperUsersResponse) GetShipperUsers() []*ShipperUser {
	if m != nil {
		return m.ShipperUsers
	}
	return nil
}

func (m *GetAllShipperUsersResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteShipperUserRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShipperId            string   `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteShipperUserRequest) Reset()         { *m = DeleteShipperUserRequest{} }
func (m *DeleteShipperUserRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteShipperUserRequest) ProtoMessage()    {}
func (*DeleteShipperUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5910ee1b710f5330, []int{6}
}

func (m *DeleteShipperUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteShipperUserRequest.Unmarshal(m, b)
}
func (m *DeleteShipperUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteShipperUserRequest.Marshal(b, m, deterministic)
}
func (m *DeleteShipperUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteShipperUserRequest.Merge(m, src)
}
func (m *DeleteShipperUserRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteShipperUserRequest.Size(m)
}
func (m *DeleteShipperUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteShipperUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteShipperUserRequest proto.InternalMessageInfo

func (m *DeleteShipperUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteShipperUserRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func init() {
	proto.RegisterType((*ChangePasswordRequest)(nil), "genproto.ChangePasswordRequest")
	proto.RegisterType((*ShipperUserId)(nil), "genproto.ShipperUserId")
	proto.RegisterType((*GetShipperUserByUsernameRequest)(nil), "genproto.GetShipperUserByUsernameRequest")
	proto.RegisterType((*GetByCredentialsRequest)(nil), "genproto.GetByCredentialsRequest")
	proto.RegisterType((*GetAllShipperUsersRequest)(nil), "genproto.GetAllShipperUsersRequest")
	proto.RegisterType((*GetAllShipperUsersResponse)(nil), "genproto.GetAllShipperUsersResponse")
	proto.RegisterType((*DeleteShipperUserRequest)(nil), "genproto.DeleteShipperUserRequest")
}

func init() { proto.RegisterFile("shipper_user_service.proto", fileDescriptor_5910ee1b710f5330) }

var fileDescriptor_5910ee1b710f5330 = []byte{
	// 513 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5f, 0x8f, 0x93, 0x40,
	0x10, 0xef, 0x1f, 0x8e, 0xdc, 0x8d, 0xd7, 0x8b, 0x99, 0xd8, 0x2b, 0x62, 0x4c, 0xeb, 0xea, 0xc3,
	0xf9, 0x42, 0x93, 0xf3, 0xc1, 0x78, 0x6f, 0xb6, 0x6a, 0x43, 0x4c, 0x8c, 0xa1, 0xe9, 0x8b, 0x31,
	0xb9, 0x70, 0x65, 0xa4, 0x24, 0x14, 0x70, 0x77, 0xd1, 0xf4, 0xcb, 0xf8, 0xad, 0xfc, 0x3e, 0x86,
	0xa5, 0xb4, 0x40, 0xa0, 0x2f, 0xbe, 0x10, 0x66, 0xf6, 0x37, 0x7f, 0x7e, 0xb3, 0xf3, 0x5b, 0x30,
	0xc5, 0x26, 0x48, 0x12, 0xe2, 0xf7, 0xa9, 0x20, 0x7e, 0x2f, 0x88, 0xff, 0x0a, 0xd6, 0x64, 0x25,
	0x3c, 0x96, 0x31, 0x9e, 0xfb, 0x14, 0xa9, 0x3f, 0x13, 0xcb, 0xa8, 0xfc, 0xd4, 0x7c, 0xe6, 0xc7,
	0xb1, 0x1f, 0xd2, 0x54, 0x59, 0x0f, 0xe9, 0x8f, 0x29, 0x6d, 0x13, 0xb9, 0xcb, 0x0f, 0xd9, 0x1c,
	0x86, 0xf3, 0x8d, 0x1b, 0xf9, 0xf4, 0xd5, 0x15, 0xe2, 0x77, 0xcc, 0x3d, 0x87, 0x7e, 0xa6, 0x24,
	0x24, 0x5e, 0x41, 0x2f, 0xf0, 0x8c, 0xee, 0xa4, 0x7b, 0x73, 0xe1, 0xf4, 0x02, 0x0f, 0x4d, 0x38,
	0x4f, 0xf6, 0x10, 0xa3, 0xa7, 0xbc, 0x07, 0x9b, 0x8d, 0x61, 0xb0, 0xcc, 0xeb, 0xae, 0x04, 0x71,
	0xdb, 0xab, 0x07, 0xb3, 0xef, 0x30, 0x5e, 0x90, 0x2c, 0x61, 0x66, 0xbb, 0xec, 0x1b, 0xb9, 0x5b,
	0x2a, 0xea, 0x3d, 0x07, 0x28, 0x7a, 0x3f, 0x84, 0x5e, 0xec, 0x3d, 0xb6, 0x2a, 0x9f, 0xee, 0x23,
	0x8a, 0xf2, 0x85, 0xcd, 0x12, 0x18, 0x2d, 0x48, 0xce, 0x76, 0x73, 0x4e, 0x1e, 0x45, 0x32, 0x70,
	0x43, 0xf1, 0xff, 0x59, 0x2b, 0x84, 0xfb, 0x35, 0xc2, 0x7f, 0xba, 0xf0, 0x74, 0x41, 0xf2, 0x7d,
	0x18, 0x96, 0x38, 0x1d, 0x8a, 0x22, 0x68, 0x89, 0xeb, 0x93, 0x2a, 0xa7, 0x39, 0xea, 0x1f, 0x9f,
	0xc0, 0x59, 0x18, 0x6c, 0x03, 0xa9, 0xca, 0x68, 0x4e, 0x6e, 0xd4, 0xda, 0xeb, 0xd7, 0xdb, 0x9b,
	0xc0, 0xa5, 0xba, 0x6d, 0x1e, 0x87, 0x94, 0x01, 0x34, 0x05, 0x80, 0xcc, 0xe7, 0xc4, 0x21, 0xd9,
	0x1e, 0x5e, 0x83, 0x2e, 0xc8, 0xe5, 0xeb, 0x8d, 0x71, 0xa6, 0xce, 0xf6, 0x16, 0x8b, 0xc0, 0x6c,
	0xea, 0x4f, 0x24, 0x71, 0x24, 0x08, 0xef, 0x60, 0x50, 0xde, 0x13, 0x61, 0x74, 0x27, 0xfd, 0x9b,
	0x47, 0xb7, 0x43, 0xab, 0xd8, 0x23, 0xab, 0x14, 0xe6, 0x5c, 0x8a, 0x52, 0x8e, 0x8c, 0xc8, 0x3a,
	0x4e, 0xa3, 0x03, 0x11, 0x65, 0x30, 0x1b, 0x8c, 0x0f, 0x14, 0x92, 0xa4, 0x72, 0x60, 0xcb, 0x26,
	0x55, 0x49, 0xf7, 0x6a, 0xa4, 0x6f, 0xff, 0x6a, 0x80, 0xa5, 0x2c, 0xcb, 0x7c, 0xd3, 0xf1, 0x0e,
	0xf4, 0x39, 0x27, 0x57, 0x12, 0x36, 0xb7, 0x69, 0x8e, 0x1a, 0xdd, 0xb6, 0xc7, 0x3a, 0xf8, 0x16,
	0xfa, 0x0b, 0x92, 0xd8, 0x86, 0x30, 0x9b, 0x33, 0xb2, 0x0e, 0xae, 0x40, 0xcf, 0xc7, 0x88, 0x2f,
	0x8f, 0x90, 0xd6, 0x8b, 0x37, 0x5f, 0x9d, 0x06, 0xe5, 0xd3, 0x67, 0x1d, 0x7c, 0x07, 0xfa, 0x2a,
	0xf1, 0x4e, 0x70, 0xb9, 0xb6, 0x72, 0xcd, 0x5a, 0x85, 0x66, 0xad, 0x8f, 0x99, 0x66, 0x59, 0x07,
	0x3f, 0x81, 0x9e, 0x0f, 0x1a, 0xd9, 0x31, 0xb4, 0x6d, 0xf4, 0x27, 0xf2, 0x2c, 0x61, 0xa0, 0x34,
	0x53, 0xc8, 0x10, 0x5f, 0x57, 0x7a, 0x3f, 0x25, 0xd5, 0xf6, 0x71, 0x7d, 0x81, 0xc7, 0x75, 0x21,
	0xe2, 0x8b, 0x4a, 0xde, 0x26, 0x91, 0xb6, 0xe7, 0xfb, 0x0c, 0x57, 0xd5, 0xc7, 0x09, 0xc7, 0x47,
	0x68, 0xe3, 0xb3, 0xd5, 0xce, 0x78, 0x36, 0xfa, 0x36, 0x2c, 0x62, 0xa7, 0xe5, 0x37, 0xf4, 0x41,
	0x57, 0xbe, 0x37, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xf7, 0xbe, 0xc2, 0x62, 0x05, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShipperUserServiceClient is the client API for ShipperUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShipperUserServiceClient interface {
	Create(ctx context.Context, in *ShipperUser, opts ...grpc.CallOption) (*ShipperUserId, error)
	Get(ctx context.Context, in *ShipperUserId, opts ...grpc.CallOption) (*ShipperUser, error)
	GetAll(ctx context.Context, in *GetAllShipperUsersRequest, opts ...grpc.CallOption) (*GetAllShipperUsersResponse, error)
	Update(ctx context.Context, in *ShipperUser, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *DeleteShipperUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetByUsername(ctx context.Context, in *GetShipperUserByUsernameRequest, opts ...grpc.CallOption) (*ShipperUser, error)
	GetByCredentials(ctx context.Context, in *GetByCredentialsRequest, opts ...grpc.CallOption) (*ShipperUser, error)
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type shipperUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewShipperUserServiceClient(cc *grpc.ClientConn) ShipperUserServiceClient {
	return &shipperUserServiceClient{cc}
}

func (c *shipperUserServiceClient) Create(ctx context.Context, in *ShipperUser, opts ...grpc.CallOption) (*ShipperUserId, error) {
	out := new(ShipperUserId)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) Get(ctx context.Context, in *ShipperUserId, opts ...grpc.CallOption) (*ShipperUser, error) {
	out := new(ShipperUser)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) GetAll(ctx context.Context, in *GetAllShipperUsersRequest, opts ...grpc.CallOption) (*GetAllShipperUsersResponse, error) {
	out := new(GetAllShipperUsersResponse)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) Update(ctx context.Context, in *ShipperUser, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) Delete(ctx context.Context, in *DeleteShipperUserRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) GetByUsername(ctx context.Context, in *GetShipperUserByUsernameRequest, opts ...grpc.CallOption) (*ShipperUser, error) {
	out := new(ShipperUser)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/GetByUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) GetByCredentials(ctx context.Context, in *GetByCredentialsRequest, opts ...grpc.CallOption) (*ShipperUser, error) {
	out := new(ShipperUser)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/GetByCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipperUserServiceClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.ShipperUserService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShipperUserServiceServer is the server API for ShipperUserService service.
type ShipperUserServiceServer interface {
	Create(context.Context, *ShipperUser) (*ShipperUserId, error)
	Get(context.Context, *ShipperUserId) (*ShipperUser, error)
	GetAll(context.Context, *GetAllShipperUsersRequest) (*GetAllShipperUsersResponse, error)
	Update(context.Context, *ShipperUser) (*emptypb.Empty, error)
	Delete(context.Context, *DeleteShipperUserRequest) (*emptypb.Empty, error)
	GetByUsername(context.Context, *GetShipperUserByUsernameRequest) (*ShipperUser, error)
	GetByCredentials(context.Context, *GetByCredentialsRequest) (*ShipperUser, error)
	ChangePassword(context.Context, *ChangePasswordRequest) (*emptypb.Empty, error)
}

// UnimplementedShipperUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShipperUserServiceServer struct {
}

func (*UnimplementedShipperUserServiceServer) Create(ctx context.Context, req *ShipperUser) (*ShipperUserId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedShipperUserServiceServer) Get(ctx context.Context, req *ShipperUserId) (*ShipperUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedShipperUserServiceServer) GetAll(ctx context.Context, req *GetAllShipperUsersRequest) (*GetAllShipperUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedShipperUserServiceServer) Update(ctx context.Context, req *ShipperUser) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedShipperUserServiceServer) Delete(ctx context.Context, req *DeleteShipperUserRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedShipperUserServiceServer) GetByUsername(ctx context.Context, req *GetShipperUserByUsernameRequest) (*ShipperUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByUsername not implemented")
}
func (*UnimplementedShipperUserServiceServer) GetByCredentials(ctx context.Context, req *GetByCredentialsRequest) (*ShipperUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByCredentials not implemented")
}
func (*UnimplementedShipperUserServiceServer) ChangePassword(ctx context.Context, req *ChangePasswordRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}

func RegisterShipperUserServiceServer(s *grpc.Server, srv ShipperUserServiceServer) {
	s.RegisterService(&_ShipperUserService_serviceDesc, srv)
}

func _ShipperUserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).Create(ctx, req.(*ShipperUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperUserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).Get(ctx, req.(*ShipperUserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllShipperUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).GetAll(ctx, req.(*GetAllShipperUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShipperUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).Update(ctx, req.(*ShipperUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteShipperUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).Delete(ctx, req.(*DeleteShipperUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_GetByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShipperUserByUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).GetByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/GetByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).GetByUsername(ctx, req.(*GetShipperUserByUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_GetByCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).GetByCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/GetByCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).GetByCredentials(ctx, req.(*GetByCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShipperUserService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShipperUserServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ShipperUserService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShipperUserServiceServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShipperUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.ShipperUserService",
	HandlerType: (*ShipperUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ShipperUserService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ShipperUserService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _ShipperUserService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ShipperUserService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ShipperUserService_Delete_Handler,
		},
		{
			MethodName: "GetByUsername",
			Handler:    _ShipperUserService_GetByUsername_Handler,
		},
		{
			MethodName: "GetByCredentials",
			Handler:    _ShipperUserService_GetByCredentials_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _ShipperUserService_ChangePassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shipper_user_service.proto",
}
