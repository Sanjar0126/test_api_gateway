// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer_service.proto

package user_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRegisteredCustomersReportRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Month                uint64   `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Year                 uint64   `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRegisteredCustomersReportRequest) Reset()         { *m = GetRegisteredCustomersReportRequest{} }
func (m *GetRegisteredCustomersReportRequest) String() string { return proto.CompactTextString(m) }
func (*GetRegisteredCustomersReportRequest) ProtoMessage()    {}
func (*GetRegisteredCustomersReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{0}
}

func (m *GetRegisteredCustomersReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRegisteredCustomersReportRequest.Unmarshal(m, b)
}
func (m *GetRegisteredCustomersReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRegisteredCustomersReportRequest.Marshal(b, m, deterministic)
}
func (m *GetRegisteredCustomersReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegisteredCustomersReportRequest.Merge(m, src)
}
func (m *GetRegisteredCustomersReportRequest) XXX_Size() int {
	return xxx_messageInfo_GetRegisteredCustomersReportRequest.Size(m)
}
func (m *GetRegisteredCustomersReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegisteredCustomersReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegisteredCustomersReportRequest proto.InternalMessageInfo

func (m *GetRegisteredCustomersReportRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetRegisteredCustomersReportRequest) GetMonth() uint64 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *GetRegisteredCustomersReportRequest) GetYear() uint64 {
	if m != nil {
		return m.Year
	}
	return 0
}

type GetRegisteredCustomersReportResponse struct {
	Report               []*MontlyRegisteredCustomersReport `protobuf:"bytes,1,rep,name=report,proto3" json:"report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *GetRegisteredCustomersReportResponse) Reset()         { *m = GetRegisteredCustomersReportResponse{} }
func (m *GetRegisteredCustomersReportResponse) String() string { return proto.CompactTextString(m) }
func (*GetRegisteredCustomersReportResponse) ProtoMessage()    {}
func (*GetRegisteredCustomersReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{1}
}

func (m *GetRegisteredCustomersReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRegisteredCustomersReportResponse.Unmarshal(m, b)
}
func (m *GetRegisteredCustomersReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRegisteredCustomersReportResponse.Marshal(b, m, deterministic)
}
func (m *GetRegisteredCustomersReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegisteredCustomersReportResponse.Merge(m, src)
}
func (m *GetRegisteredCustomersReportResponse) XXX_Size() int {
	return xxx_messageInfo_GetRegisteredCustomersReportResponse.Size(m)
}
func (m *GetRegisteredCustomersReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegisteredCustomersReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegisteredCustomersReportResponse proto.InternalMessageInfo

func (m *GetRegisteredCustomersReportResponse) GetReport() []*MontlyRegisteredCustomersReport {
	if m != nil {
		return m.Report
	}
	return nil
}

type CustomerId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerId) Reset()         { *m = CustomerId{} }
func (m *CustomerId) String() string { return proto.CompactTextString(m) }
func (*CustomerId) ProtoMessage()    {}
func (*CustomerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{2}
}

func (m *CustomerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerId.Unmarshal(m, b)
}
func (m *CustomerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerId.Marshal(b, m, deterministic)
}
func (m *CustomerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerId.Merge(m, src)
}
func (m *CustomerId) XXX_Size() int {
	return xxx_messageInfo_CustomerId.Size(m)
}
func (m *CustomerId) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerId.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerId proto.InternalMessageInfo

func (m *CustomerId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetCustomerOrInsertRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Phone                string   `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerOrInsertRequest) Reset()         { *m = GetCustomerOrInsertRequest{} }
func (m *GetCustomerOrInsertRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerOrInsertRequest) ProtoMessage()    {}
func (*GetCustomerOrInsertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{3}
}

func (m *GetCustomerOrInsertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerOrInsertRequest.Unmarshal(m, b)
}
func (m *GetCustomerOrInsertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerOrInsertRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerOrInsertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerOrInsertRequest.Merge(m, src)
}
func (m *GetCustomerOrInsertRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerOrInsertRequest.Size(m)
}
func (m *GetCustomerOrInsertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerOrInsertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerOrInsertRequest proto.InternalMessageInfo

func (m *GetCustomerOrInsertRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetCustomerOrInsertRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *GetCustomerOrInsertRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetCustomerByPhoneRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Phone                string   `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerByPhoneRequest) Reset()         { *m = GetCustomerByPhoneRequest{} }
func (m *GetCustomerByPhoneRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerByPhoneRequest) ProtoMessage()    {}
func (*GetCustomerByPhoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{4}
}

func (m *GetCustomerByPhoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCustomerByPhoneRequest.Unmarshal(m, b)
}
func (m *GetCustomerByPhoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCustomerByPhoneRequest.Marshal(b, m, deterministic)
}
func (m *GetCustomerByPhoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerByPhoneRequest.Merge(m, src)
}
func (m *GetCustomerByPhoneRequest) XXX_Size() int {
	return xxx_messageInfo_GetCustomerByPhoneRequest.Size(m)
}
func (m *GetCustomerByPhoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerByPhoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerByPhoneRequest proto.InternalMessageInfo

func (m *GetCustomerByPhoneRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetCustomerByPhoneRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type UpdateCustomerFcmTokenRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FcmToken             string   `protobuf:"bytes,2,opt,name=fcm_token,json=fcmToken,proto3" json:"fcm_token,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	PlatformId           string   `protobuf:"bytes,4,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCustomerFcmTokenRequest) Reset()         { *m = UpdateCustomerFcmTokenRequest{} }
func (m *UpdateCustomerFcmTokenRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCustomerFcmTokenRequest) ProtoMessage()    {}
func (*UpdateCustomerFcmTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{5}
}

func (m *UpdateCustomerFcmTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCustomerFcmTokenRequest.Unmarshal(m, b)
}
func (m *UpdateCustomerFcmTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCustomerFcmTokenRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCustomerFcmTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCustomerFcmTokenRequest.Merge(m, src)
}
func (m *UpdateCustomerFcmTokenRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCustomerFcmTokenRequest.Size(m)
}
func (m *UpdateCustomerFcmTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCustomerFcmTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCustomerFcmTokenRequest proto.InternalMessageInfo

func (m *UpdateCustomerFcmTokenRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateCustomerFcmTokenRequest) GetFcmToken() string {
	if m != nil {
		return m.FcmToken
	}
	return ""
}

func (m *UpdateCustomerFcmTokenRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *UpdateCustomerFcmTokenRequest) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

type UpdateCustomerTgChatIdRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TgChatId             string   `protobuf:"bytes,2,opt,name=tg_chat_id,json=tgChatId,proto3" json:"tg_chat_id,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCustomerTgChatIdRequest) Reset()         { *m = UpdateCustomerTgChatIdRequest{} }
func (m *UpdateCustomerTgChatIdRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCustomerTgChatIdRequest) ProtoMessage()    {}
func (*UpdateCustomerTgChatIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{6}
}

func (m *UpdateCustomerTgChatIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCustomerTgChatIdRequest.Unmarshal(m, b)
}
func (m *UpdateCustomerTgChatIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCustomerTgChatIdRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCustomerTgChatIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCustomerTgChatIdRequest.Merge(m, src)
}
func (m *UpdateCustomerTgChatIdRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCustomerTgChatIdRequest.Size(m)
}
func (m *UpdateCustomerTgChatIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCustomerTgChatIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCustomerTgChatIdRequest proto.InternalMessageInfo

func (m *UpdateCustomerTgChatIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateCustomerTgChatIdRequest) GetTgChatId() string {
	if m != nil {
		return m.TgChatId
	}
	return ""
}

func (m *UpdateCustomerTgChatIdRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type GetAllCustomersRequest struct {
	Page                 uint64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	Search               string   `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllCustomersRequest) Reset()         { *m = GetAllCustomersRequest{} }
func (m *GetAllCustomersRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllCustomersRequest) ProtoMessage()    {}
func (*GetAllCustomersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{7}
}

func (m *GetAllCustomersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllCustomersRequest.Unmarshal(m, b)
}
func (m *GetAllCustomersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllCustomersRequest.Marshal(b, m, deterministic)
}
func (m *GetAllCustomersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllCustomersRequest.Merge(m, src)
}
func (m *GetAllCustomersRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllCustomersRequest.Size(m)
}
func (m *GetAllCustomersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllCustomersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllCustomersRequest proto.InternalMessageInfo

func (m *GetAllCustomersRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllCustomersRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllCustomersRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetAllCustomersRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type GetAllCustomersResponse struct {
	Customers            []*Customer `protobuf:"bytes,1,rep,name=customers,proto3" json:"customers,omitempty"`
	Count                uint64      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetAllCustomersResponse) Reset()         { *m = GetAllCustomersResponse{} }
func (m *GetAllCustomersResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllCustomersResponse) ProtoMessage()    {}
func (*GetAllCustomersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{8}
}

func (m *GetAllCustomersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllCustomersResponse.Unmarshal(m, b)
}
func (m *GetAllCustomersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllCustomersResponse.Marshal(b, m, deterministic)
}
func (m *GetAllCustomersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllCustomersResponse.Merge(m, src)
}
func (m *GetAllCustomersResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllCustomersResponse.Size(m)
}
func (m *GetAllCustomersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllCustomersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllCustomersResponse proto.InternalMessageInfo

func (m *GetAllCustomersResponse) GetCustomers() []*Customer {
	if m != nil {
		return m.Customers
	}
	return nil
}

func (m *GetAllCustomersResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchCustomersByPhoneRequest struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId            string   `protobuf:"bytes,3,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchCustomersByPhoneRequest) Reset()         { *m = SearchCustomersByPhoneRequest{} }
func (m *SearchCustomersByPhoneRequest) String() string { return proto.CompactTextString(m) }
func (*SearchCustomersByPhoneRequest) ProtoMessage()    {}
func (*SearchCustomersByPhoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{9}
}

func (m *SearchCustomersByPhoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchCustomersByPhoneRequest.Unmarshal(m, b)
}
func (m *SearchCustomersByPhoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchCustomersByPhoneRequest.Marshal(b, m, deterministic)
}
func (m *SearchCustomersByPhoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchCustomersByPhoneRequest.Merge(m, src)
}
func (m *SearchCustomersByPhoneRequest) XXX_Size() int {
	return xxx_messageInfo_SearchCustomersByPhoneRequest.Size(m)
}
func (m *SearchCustomersByPhoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchCustomersByPhoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchCustomersByPhoneRequest proto.InternalMessageInfo

func (m *SearchCustomersByPhoneRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *SearchCustomersByPhoneRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchCustomersByPhoneRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type SearchCustomersByPhoneResponse struct {
	Customers            []*Customer `protobuf:"bytes,1,rep,name=customers,proto3" json:"customers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SearchCustomersByPhoneResponse) Reset()         { *m = SearchCustomersByPhoneResponse{} }
func (m *SearchCustomersByPhoneResponse) String() string { return proto.CompactTextString(m) }
func (*SearchCustomersByPhoneResponse) ProtoMessage()    {}
func (*SearchCustomersByPhoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{10}
}

func (m *SearchCustomersByPhoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchCustomersByPhoneResponse.Unmarshal(m, b)
}
func (m *SearchCustomersByPhoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchCustomersByPhoneResponse.Marshal(b, m, deterministic)
}
func (m *SearchCustomersByPhoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchCustomersByPhoneResponse.Merge(m, src)
}
func (m *SearchCustomersByPhoneResponse) XXX_Size() int {
	return xxx_messageInfo_SearchCustomersByPhoneResponse.Size(m)
}
func (m *SearchCustomersByPhoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchCustomersByPhoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchCustomersByPhoneResponse proto.InternalMessageInfo

func (m *SearchCustomersByPhoneResponse) GetCustomers() []*Customer {
	if m != nil {
		return m.Customers
	}
	return nil
}

type DeleteCustomerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShipperId            string   `protobuf:"bytes,2,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCustomerRequest) Reset()         { *m = DeleteCustomerRequest{} }
func (m *DeleteCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCustomerRequest) ProtoMessage()    {}
func (*DeleteCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{11}
}

func (m *DeleteCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCustomerRequest.Unmarshal(m, b)
}
func (m *DeleteCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCustomerRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCustomerRequest.Merge(m, src)
}
func (m *DeleteCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCustomerRequest.Size(m)
}
func (m *DeleteCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCustomerRequest proto.InternalMessageInfo

func (m *DeleteCustomerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteCustomerRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type AttachBotLanguageRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Lang                 string   `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachBotLanguageRequest) Reset()         { *m = AttachBotLanguageRequest{} }
func (m *AttachBotLanguageRequest) String() string { return proto.CompactTextString(m) }
func (*AttachBotLanguageRequest) ProtoMessage()    {}
func (*AttachBotLanguageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_512a047699a06ac5, []int{12}
}

func (m *AttachBotLanguageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachBotLanguageRequest.Unmarshal(m, b)
}
func (m *AttachBotLanguageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachBotLanguageRequest.Marshal(b, m, deterministic)
}
func (m *AttachBotLanguageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachBotLanguageRequest.Merge(m, src)
}
func (m *AttachBotLanguageRequest) XXX_Size() int {
	return xxx_messageInfo_AttachBotLanguageRequest.Size(m)
}
func (m *AttachBotLanguageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachBotLanguageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttachBotLanguageRequest proto.InternalMessageInfo

func (m *AttachBotLanguageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AttachBotLanguageRequest) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRegisteredCustomersReportRequest)(nil), "genproto.GetRegisteredCustomersReportRequest")
	proto.RegisterType((*GetRegisteredCustomersReportResponse)(nil), "genproto.GetRegisteredCustomersReportResponse")
	proto.RegisterType((*CustomerId)(nil), "genproto.CustomerId")
	proto.RegisterType((*GetCustomerOrInsertRequest)(nil), "genproto.GetCustomerOrInsertRequest")
	proto.RegisterType((*GetCustomerByPhoneRequest)(nil), "genproto.GetCustomerByPhoneRequest")
	proto.RegisterType((*UpdateCustomerFcmTokenRequest)(nil), "genproto.UpdateCustomerFcmTokenRequest")
	proto.RegisterType((*UpdateCustomerTgChatIdRequest)(nil), "genproto.UpdateCustomerTgChatIdRequest")
	proto.RegisterType((*GetAllCustomersRequest)(nil), "genproto.GetAllCustomersRequest")
	proto.RegisterType((*GetAllCustomersResponse)(nil), "genproto.GetAllCustomersResponse")
	proto.RegisterType((*SearchCustomersByPhoneRequest)(nil), "genproto.SearchCustomersByPhoneRequest")
	proto.RegisterType((*SearchCustomersByPhoneResponse)(nil), "genproto.SearchCustomersByPhoneResponse")
	proto.RegisterType((*DeleteCustomerRequest)(nil), "genproto.DeleteCustomerRequest")
	proto.RegisterType((*AttachBotLanguageRequest)(nil), "genproto.AttachBotLanguageRequest")
}

func init() { proto.RegisterFile("customer_service.proto", fileDescriptor_512a047699a06ac5) }

var fileDescriptor_512a047699a06ac5 = []byte{
	// 762 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x5d, 0x4f, 0xdb, 0x48,
	0x14, 0xcd, 0xd7, 0x46, 0xe4, 0xb2, 0x0b, 0xda, 0x11, 0x84, 0xac, 0x81, 0x25, 0x3b, 0x20, 0x6d,
	0xfa, 0xd0, 0xd0, 0xd2, 0xaa, 0x8f, 0x95, 0x20, 0x2d, 0x56, 0xd4, 0x0f, 0xa8, 0x01, 0xa9, 0xea,
	0x4b, 0x64, 0xec, 0x1b, 0xc7, 0xad, 0xed, 0x71, 0xed, 0x49, 0xa5, 0x3c, 0xf5, 0x0f, 0xf4, 0xdf,
	0xf6, 0x0f, 0x54, 0x1e, 0x7b, 0xe2, 0x60, 0x6c, 0xa7, 0xa5, 0xbc, 0xcd, 0xcc, 0xbd, 0x73, 0xee,
	0x39, 0xe3, 0xe3, 0xb9, 0x03, 0x6d, 0x63, 0x1a, 0x72, 0xe6, 0x62, 0x30, 0x0a, 0x31, 0xf8, 0x62,
	0x1b, 0xd8, 0xf7, 0x03, 0xc6, 0x19, 0x59, 0xb1, 0xd0, 0x13, 0x23, 0x65, 0x4d, 0x66, 0xc4, 0x11,
	0x65, 0xdb, 0x62, 0xcc, 0x72, 0xf0, 0x50, 0xcc, 0xae, 0xa7, 0xe3, 0x43, 0x74, 0x7d, 0x3e, 0x8b,
	0x83, 0xd4, 0x83, 0x7d, 0x15, 0xb9, 0x86, 0x96, 0x1d, 0x72, 0x0c, 0xd0, 0x1c, 0x24, 0x7b, 0x43,
	0x0d, 0x7d, 0x16, 0x70, 0x0d, 0x3f, 0x4f, 0x31, 0xe4, 0x64, 0x17, 0x20, 0x9c, 0xd8, 0xbe, 0x8f,
	0xc1, 0xc8, 0x36, 0x3b, 0xd5, 0x6e, 0xb5, 0xd7, 0xd2, 0x5a, 0xc9, 0xca, 0xd0, 0x24, 0x1b, 0xf0,
	0x87, 0xcb, 0x3c, 0x3e, 0xe9, 0xd4, 0xba, 0xd5, 0x5e, 0x43, 0x8b, 0x27, 0x84, 0x40, 0x63, 0x86,
	0x7a, 0xd0, 0xa9, 0x8b, 0x45, 0x31, 0xa6, 0x36, 0x1c, 0x94, 0xd7, 0x0b, 0x7d, 0xe6, 0x85, 0x48,
	0x8e, 0xa1, 0x19, 0x88, 0x95, 0x4e, 0xb5, 0x5b, 0xef, 0xad, 0x1e, 0x3d, 0xe8, 0x4b, 0x7d, 0xfd,
	0x37, 0xcc, 0xe3, 0xce, 0xac, 0x18, 0x22, 0xd9, 0x48, 0x77, 0x00, 0x64, 0x68, 0x68, 0x92, 0x35,
	0xa8, 0xcd, 0x99, 0xd7, 0x6c, 0x93, 0x22, 0x28, 0x2a, 0x72, 0x99, 0x70, 0x16, 0x0c, 0xbd, 0x10,
	0x7f, 0x45, 0xaf, 0x3f, 0x61, 0x1e, 0x0a, 0xbd, 0x2d, 0x2d, 0x9e, 0x44, 0x7a, 0x3d, 0xdd, 0x45,
	0xa1, 0xb7, 0xa5, 0x89, 0x31, 0x3d, 0x87, 0x7f, 0x16, 0xca, 0x9c, 0xcc, 0xce, 0xa3, 0xcc, 0xdf,
	0xa9, 0x42, 0xbf, 0x55, 0x61, 0xf7, 0xca, 0x37, 0x75, 0x8e, 0x12, 0xf5, 0xd4, 0x70, 0x2f, 0xd9,
	0x27, 0xf4, 0x24, 0x6c, 0x46, 0x2a, 0xd9, 0x86, 0xd6, 0xd8, 0x70, 0x47, 0x3c, 0xca, 0x49, 0xb0,
	0x56, 0xc6, 0xc9, 0x9e, 0x0c, 0x87, 0x7a, 0x96, 0xc3, 0x1e, 0xac, 0xfa, 0x8e, 0xce, 0xc7, 0x2c,
	0x70, 0xa3, 0x78, 0x43, 0xc4, 0x41, 0x2e, 0x0d, 0x4d, 0xea, 0x64, 0xd9, 0x5c, 0x5a, 0x83, 0x89,
	0xce, 0x87, 0x66, 0x11, 0x9b, 0x1d, 0x00, 0x6e, 0x8d, 0x8c, 0x89, 0xce, 0x23, 0xc0, 0x84, 0x0e,
	0x4f, 0x36, 0x2d, 0xa1, 0x43, 0x67, 0xd0, 0x56, 0x91, 0x1f, 0x3b, 0xce, 0xc2, 0x47, 0x8f, 0xcb,
	0x10, 0x68, 0xf8, 0xba, 0x85, 0xa2, 0x50, 0x43, 0x13, 0xe3, 0xe8, 0x00, 0x1d, 0xdb, 0xb5, 0xb9,
	0xb4, 0xa5, 0x98, 0x2c, 0x53, 0xdc, 0x86, 0x66, 0x88, 0x7a, 0x60, 0x4c, 0x12, 0xb1, 0xc9, 0x8c,
	0xea, 0xb0, 0x75, 0xab, 0x74, 0x62, 0xd6, 0x47, 0xd0, 0x92, 0xff, 0x5c, 0x98, 0xf8, 0x95, 0xa4,
	0x7e, 0x95, 0xf9, 0x5a, 0x9a, 0x14, 0x31, 0x33, 0xd8, 0xd4, 0x9b, 0x33, 0x13, 0x13, 0xfa, 0x11,
	0x76, 0x2f, 0x44, 0xb1, 0x79, 0x89, 0x8c, 0x61, 0xe6, 0x8e, 0xa8, 0x2e, 0xfa, 0xee, 0x2e, 0x32,
	0xa9, 0x06, 0xff, 0x16, 0xd5, 0xba, 0xab, 0x2a, 0x7a, 0x0a, 0x9b, 0x2f, 0xd0, 0xc1, 0xd4, 0x0b,
	0x45, 0x1e, 0xb8, 0xc9, 0xad, 0x96, 0xe5, 0xf6, 0x1c, 0x3a, 0xc7, 0x9c, 0xeb, 0xc6, 0xe4, 0x84,
	0xf1, 0xd7, 0xba, 0x67, 0x4d, 0x75, 0x0b, 0x8b, 0xa0, 0x08, 0x34, 0x1c, 0xdd, 0xb3, 0x12, 0x10,
	0x31, 0x3e, 0xfa, 0xbe, 0x02, 0xeb, 0x92, 0xc2, 0x45, 0x7c, 0x4b, 0x92, 0xa7, 0xd0, 0x1c, 0x04,
	0xa8, 0x73, 0x24, 0x39, 0x22, 0x94, 0x8d, 0xdb, 0x6b, 0x43, 0x93, 0x56, 0xc8, 0x63, 0xa8, 0xab,
	0xc8, 0x49, 0x6e, 0x58, 0xc9, 0x01, 0xa2, 0x15, 0x72, 0x06, 0xcd, 0xd8, 0x27, 0xa4, 0x9b, 0xc6,
	0xf3, 0x4d, 0xab, 0xfc, 0x57, 0x92, 0x11, 0x7f, 0x05, 0x5a, 0x21, 0x57, 0xf0, 0x67, 0x14, 0xb4,
	0xac, 0x00, 0xad, 0x88, 0xff, 0x3d, 0xc1, 0xbe, 0x87, 0x75, 0x15, 0xf9, 0x5b, 0xe6, 0xdd, 0x3b,
	0xf2, 0x33, 0x68, 0xc6, 0x57, 0x42, 0xee, 0x51, 0xb7, 0xfb, 0x71, 0x3f, 0xea, 0xcb, 0x7e, 0xd4,
	0x7f, 0x19, 0xf5, 0x23, 0x5a, 0x21, 0x03, 0x68, 0xc6, 0xf6, 0x21, 0x7b, 0xe9, 0xbe, 0x5c, 0x43,
	0x95, 0x80, 0x98, 0xf0, 0x57, 0xec, 0xeb, 0xc4, 0xce, 0xe4, 0xff, 0x14, 0xab, 0xf4, 0xe7, 0x52,
	0x7a, 0xcb, 0x13, 0xe7, 0x12, 0x5f, 0xc1, 0xaa, 0x8a, 0x5c, 0x76, 0x0d, 0x72, 0x70, 0xe3, 0x58,
	0x0a, 0x9a, 0x4a, 0xa1, 0xc9, 0x54, 0x00, 0x15, 0xb9, 0xe4, 0xbb, 0x9f, 0x8b, 0x95, 0xe1, 0x9a,
	0x6f, 0xbd, 0x0b, 0x58, 0x8b, 0x0f, 0x5e, 0x76, 0x84, 0x45, 0xf1, 0xa5, 0x3d, 0xa3, 0xe4, 0x40,
	0xe7, 0xa0, 0xf2, 0x62, 0x2f, 0x06, 0xcd, 0x5c, 0xfd, 0x25, 0xa0, 0x5f, 0x61, 0xa7, 0xec, 0x19,
	0x40, 0x1e, 0xde, 0x38, 0x84, 0x65, 0xcf, 0x13, 0xa5, 0xff, 0xb3, 0xe9, 0xf3, 0x0f, 0xf8, 0x0e,
	0xfe, 0xbe, 0x75, 0xc5, 0x10, 0x9a, 0xc2, 0x14, 0xdd, 0x3f, 0xc5, 0x9a, 0x4e, 0xb6, 0x3e, 0x6c,
	0xca, 0xed, 0x87, 0xd3, 0x30, 0x7d, 0xa0, 0x5d, 0x37, 0xc5, 0xda, 0x93, 0x1f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x23, 0x67, 0x9d, 0xa8, 0xbb, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomerServiceClient is the client API for CustomerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerServiceClient interface {
	Create(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*CustomerId, error)
	Get(ctx context.Context, in *CustomerId, opts ...grpc.CallOption) (*Customer, error)
	GetAll(ctx context.Context, in *GetAllCustomersRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error)
	GetAggregate(ctx context.Context, in *GetAllCustomersRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error)
	GetNonAggregate(ctx context.Context, in *GetAllCustomersRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error)
	Update(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SearchByPhone(ctx context.Context, in *SearchCustomersByPhoneRequest, opts ...grpc.CallOption) (*SearchCustomersByPhoneResponse, error)
	GetOrInsert(ctx context.Context, in *GetCustomerOrInsertRequest, opts ...grpc.CallOption) (*CustomerId, error)
	GetByPhone(ctx context.Context, in *GetCustomerByPhoneRequest, opts ...grpc.CallOption) (*Customer, error)
	UpdateFcmToken(ctx context.Context, in *UpdateCustomerFcmTokenRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateTgChatId(ctx context.Context, in *UpdateCustomerTgChatIdRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetRegisteredCustomersReport(ctx context.Context, in *GetRegisteredCustomersReportRequest, opts ...grpc.CallOption) (*GetRegisteredCustomersReportResponse, error)
	AttachBotLanguage(ctx context.Context, in *AttachBotLanguageRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type customerServiceClient struct {
	cc *grpc.ClientConn
}

func NewCustomerServiceClient(cc *grpc.ClientConn) CustomerServiceClient {
	return &customerServiceClient{cc}
}

func (c *customerServiceClient) Create(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*CustomerId, error) {
	out := new(CustomerId)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) Get(ctx context.Context, in *CustomerId, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetAll(ctx context.Context, in *GetAllCustomersRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error) {
	out := new(GetAllCustomersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetAggregate(ctx context.Context, in *GetAllCustomersRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error) {
	out := new(GetAllCustomersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/GetAggregate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetNonAggregate(ctx context.Context, in *GetAllCustomersRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error) {
	out := new(GetAllCustomersResponse)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/GetNonAggregate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) Update(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) Delete(ctx context.Context, in *DeleteCustomerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) SearchByPhone(ctx context.Context, in *SearchCustomersByPhoneRequest, opts ...grpc.CallOption) (*SearchCustomersByPhoneResponse, error) {
	out := new(SearchCustomersByPhoneResponse)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/SearchByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetOrInsert(ctx context.Context, in *GetCustomerOrInsertRequest, opts ...grpc.CallOption) (*CustomerId, error) {
	out := new(CustomerId)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/GetOrInsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetByPhone(ctx context.Context, in *GetCustomerByPhoneRequest, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/GetByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) UpdateFcmToken(ctx context.Context, in *UpdateCustomerFcmTokenRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/UpdateFcmToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) UpdateTgChatId(ctx context.Context, in *UpdateCustomerTgChatIdRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/UpdateTgChatId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetRegisteredCustomersReport(ctx context.Context, in *GetRegisteredCustomersReportRequest, opts ...grpc.CallOption) (*GetRegisteredCustomersReportResponse, error) {
	out := new(GetRegisteredCustomersReportResponse)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/GetRegisteredCustomersReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) AttachBotLanguage(ctx context.Context, in *AttachBotLanguageRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CustomerService/AttachBotLanguage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerServiceServer is the server API for CustomerService service.
type CustomerServiceServer interface {
	Create(context.Context, *Customer) (*CustomerId, error)
	Get(context.Context, *CustomerId) (*Customer, error)
	GetAll(context.Context, *GetAllCustomersRequest) (*GetAllCustomersResponse, error)
	GetAggregate(context.Context, *GetAllCustomersRequest) (*GetAllCustomersResponse, error)
	GetNonAggregate(context.Context, *GetAllCustomersRequest) (*GetAllCustomersResponse, error)
	Update(context.Context, *Customer) (*emptypb.Empty, error)
	Delete(context.Context, *DeleteCustomerRequest) (*emptypb.Empty, error)
	SearchByPhone(context.Context, *SearchCustomersByPhoneRequest) (*SearchCustomersByPhoneResponse, error)
	GetOrInsert(context.Context, *GetCustomerOrInsertRequest) (*CustomerId, error)
	GetByPhone(context.Context, *GetCustomerByPhoneRequest) (*Customer, error)
	UpdateFcmToken(context.Context, *UpdateCustomerFcmTokenRequest) (*emptypb.Empty, error)
	UpdateTgChatId(context.Context, *UpdateCustomerTgChatIdRequest) (*emptypb.Empty, error)
	GetRegisteredCustomersReport(context.Context, *GetRegisteredCustomersReportRequest) (*GetRegisteredCustomersReportResponse, error)
	AttachBotLanguage(context.Context, *AttachBotLanguageRequest) (*emptypb.Empty, error)
}

// UnimplementedCustomerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCustomerServiceServer struct {
}

func (*UnimplementedCustomerServiceServer) Create(ctx context.Context, req *Customer) (*CustomerId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCustomerServiceServer) Get(ctx context.Context, req *CustomerId) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedCustomerServiceServer) GetAll(ctx context.Context, req *GetAllCustomersRequest) (*GetAllCustomersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedCustomerServiceServer) GetAggregate(ctx context.Context, req *GetAllCustomersRequest) (*GetAllCustomersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAggregate not implemented")
}
func (*UnimplementedCustomerServiceServer) GetNonAggregate(ctx context.Context, req *GetAllCustomersRequest) (*GetAllCustomersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNonAggregate not implemented")
}
func (*UnimplementedCustomerServiceServer) Update(ctx context.Context, req *Customer) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedCustomerServiceServer) Delete(ctx context.Context, req *DeleteCustomerRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedCustomerServiceServer) SearchByPhone(ctx context.Context, req *SearchCustomersByPhoneRequest) (*SearchCustomersByPhoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchByPhone not implemented")
}
func (*UnimplementedCustomerServiceServer) GetOrInsert(ctx context.Context, req *GetCustomerOrInsertRequest) (*CustomerId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrInsert not implemented")
}
func (*UnimplementedCustomerServiceServer) GetByPhone(ctx context.Context, req *GetCustomerByPhoneRequest) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByPhone not implemented")
}
func (*UnimplementedCustomerServiceServer) UpdateFcmToken(ctx context.Context, req *UpdateCustomerFcmTokenRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFcmToken not implemented")
}
func (*UnimplementedCustomerServiceServer) UpdateTgChatId(ctx context.Context, req *UpdateCustomerTgChatIdRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTgChatId not implemented")
}
func (*UnimplementedCustomerServiceServer) GetRegisteredCustomersReport(ctx context.Context, req *GetRegisteredCustomersReportRequest) (*GetRegisteredCustomersReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegisteredCustomersReport not implemented")
}
func (*UnimplementedCustomerServiceServer) AttachBotLanguage(ctx context.Context, req *AttachBotLanguageRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachBotLanguage not implemented")
}

func RegisterCustomerServiceServer(s *grpc.Server, srv CustomerServiceServer) {
	s.RegisterService(&_CustomerService_serviceDesc, srv)
}

func _CustomerService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Customer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).Create(ctx, req.(*Customer))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).Get(ctx, req.(*CustomerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCustomersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetAll(ctx, req.(*GetAllCustomersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetAggregate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCustomersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetAggregate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/GetAggregate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetAggregate(ctx, req.(*GetAllCustomersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetNonAggregate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCustomersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetNonAggregate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/GetNonAggregate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetNonAggregate(ctx, req.(*GetAllCustomersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Customer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).Update(ctx, req.(*Customer))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).Delete(ctx, req.(*DeleteCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_SearchByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchCustomersByPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).SearchByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/SearchByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).SearchByPhone(ctx, req.(*SearchCustomersByPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetOrInsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerOrInsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetOrInsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/GetOrInsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetOrInsert(ctx, req.(*GetCustomerOrInsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerByPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/GetByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetByPhone(ctx, req.(*GetCustomerByPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_UpdateFcmToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomerFcmTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).UpdateFcmToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/UpdateFcmToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).UpdateFcmToken(ctx, req.(*UpdateCustomerFcmTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_UpdateTgChatId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomerTgChatIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).UpdateTgChatId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/UpdateTgChatId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).UpdateTgChatId(ctx, req.(*UpdateCustomerTgChatIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetRegisteredCustomersReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegisteredCustomersReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetRegisteredCustomersReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/GetRegisteredCustomersReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetRegisteredCustomersReport(ctx, req.(*GetRegisteredCustomersReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_AttachBotLanguage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachBotLanguageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).AttachBotLanguage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CustomerService/AttachBotLanguage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).AttachBotLanguage(ctx, req.(*AttachBotLanguageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.CustomerService",
	HandlerType: (*CustomerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CustomerService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _CustomerService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _CustomerService_GetAll_Handler,
		},
		{
			MethodName: "GetAggregate",
			Handler:    _CustomerService_GetAggregate_Handler,
		},
		{
			MethodName: "GetNonAggregate",
			Handler:    _CustomerService_GetNonAggregate_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CustomerService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CustomerService_Delete_Handler,
		},
		{
			MethodName: "SearchByPhone",
			Handler:    _CustomerService_SearchByPhone_Handler,
		},
		{
			MethodName: "GetOrInsert",
			Handler:    _CustomerService_GetOrInsert_Handler,
		},
		{
			MethodName: "GetByPhone",
			Handler:    _CustomerService_GetByPhone_Handler,
		},
		{
			MethodName: "UpdateFcmToken",
			Handler:    _CustomerService_UpdateFcmToken_Handler,
		},
		{
			MethodName: "UpdateTgChatId",
			Handler:    _CustomerService_UpdateTgChatId_Handler,
		},
		{
			MethodName: "GetRegisteredCustomersReport",
			Handler:    _CustomerService_GetRegisteredCustomersReport_Handler,
		},
		{
			MethodName: "AttachBotLanguage",
			Handler:    _CustomerService_AttachBotLanguage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer_service.proto",
}
