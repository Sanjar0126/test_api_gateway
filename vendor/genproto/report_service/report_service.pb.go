// Code generated by protoc-gen-go. DO NOT EDIT.
// source: report_service.proto

package report_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetUserReviewsReportExcelRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	StartDate            string   `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate              string   `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	BranchId             string   `protobuf:"bytes,4,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CourierId            string   `protobuf:"bytes,5,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	ClientId             string   `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	OperatorId           string   `protobuf:"bytes,7,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserReviewsReportExcelRequest) Reset()         { *m = GetUserReviewsReportExcelRequest{} }
func (m *GetUserReviewsReportExcelRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserReviewsReportExcelRequest) ProtoMessage()    {}
func (*GetUserReviewsReportExcelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee3d732344b8ecfb, []int{0}
}

func (m *GetUserReviewsReportExcelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserReviewsReportExcelRequest.Unmarshal(m, b)
}
func (m *GetUserReviewsReportExcelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserReviewsReportExcelRequest.Marshal(b, m, deterministic)
}
func (m *GetUserReviewsReportExcelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserReviewsReportExcelRequest.Merge(m, src)
}
func (m *GetUserReviewsReportExcelRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserReviewsReportExcelRequest.Size(m)
}
func (m *GetUserReviewsReportExcelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserReviewsReportExcelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserReviewsReportExcelRequest proto.InternalMessageInfo

func (m *GetUserReviewsReportExcelRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetUserReviewsReportExcelRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *GetUserReviewsReportExcelRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *GetUserReviewsReportExcelRequest) GetBranchId() string {
	if m != nil {
		return m.BranchId
	}
	return ""
}

func (m *GetUserReviewsReportExcelRequest) GetCourierId() string {
	if m != nil {
		return m.CourierId
	}
	return ""
}

func (m *GetUserReviewsReportExcelRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *GetUserReviewsReportExcelRequest) GetOperatorId() string {
	if m != nil {
		return m.OperatorId
	}
	return ""
}

type GetUserReviewsReportExcelResponse struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserReviewsReportExcelResponse) Reset()         { *m = GetUserReviewsReportExcelResponse{} }
func (m *GetUserReviewsReportExcelResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserReviewsReportExcelResponse) ProtoMessage()    {}
func (*GetUserReviewsReportExcelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee3d732344b8ecfb, []int{1}
}

func (m *GetUserReviewsReportExcelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserReviewsReportExcelResponse.Unmarshal(m, b)
}
func (m *GetUserReviewsReportExcelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserReviewsReportExcelResponse.Marshal(b, m, deterministic)
}
func (m *GetUserReviewsReportExcelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserReviewsReportExcelResponse.Merge(m, src)
}
func (m *GetUserReviewsReportExcelResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserReviewsReportExcelResponse.Size(m)
}
func (m *GetUserReviewsReportExcelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserReviewsReportExcelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserReviewsReportExcelResponse proto.InternalMessageInfo

func (m *GetUserReviewsReportExcelResponse) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

type GetBranchesReportExcelRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	StartDate            string   `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate              string   `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBranchesReportExcelRequest) Reset()         { *m = GetBranchesReportExcelRequest{} }
func (m *GetBranchesReportExcelRequest) String() string { return proto.CompactTextString(m) }
func (*GetBranchesReportExcelRequest) ProtoMessage()    {}
func (*GetBranchesReportExcelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee3d732344b8ecfb, []int{2}
}

func (m *GetBranchesReportExcelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBranchesReportExcelRequest.Unmarshal(m, b)
}
func (m *GetBranchesReportExcelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBranchesReportExcelRequest.Marshal(b, m, deterministic)
}
func (m *GetBranchesReportExcelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBranchesReportExcelRequest.Merge(m, src)
}
func (m *GetBranchesReportExcelRequest) XXX_Size() int {
	return xxx_messageInfo_GetBranchesReportExcelRequest.Size(m)
}
func (m *GetBranchesReportExcelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBranchesReportExcelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBranchesReportExcelRequest proto.InternalMessageInfo

func (m *GetBranchesReportExcelRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetBranchesReportExcelRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *GetBranchesReportExcelRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type GetBranchesReportExcelResponse struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBranchesReportExcelResponse) Reset()         { *m = GetBranchesReportExcelResponse{} }
func (m *GetBranchesReportExcelResponse) String() string { return proto.CompactTextString(m) }
func (*GetBranchesReportExcelResponse) ProtoMessage()    {}
func (*GetBranchesReportExcelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee3d732344b8ecfb, []int{3}
}

func (m *GetBranchesReportExcelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBranchesReportExcelResponse.Unmarshal(m, b)
}
func (m *GetBranchesReportExcelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBranchesReportExcelResponse.Marshal(b, m, deterministic)
}
func (m *GetBranchesReportExcelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBranchesReportExcelResponse.Merge(m, src)
}
func (m *GetBranchesReportExcelResponse) XXX_Size() int {
	return xxx_messageInfo_GetBranchesReportExcelResponse.Size(m)
}
func (m *GetBranchesReportExcelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBranchesReportExcelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBranchesReportExcelResponse proto.InternalMessageInfo

func (m *GetBranchesReportExcelResponse) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

type GetCouriersReportExcelRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	StartDate            string   `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate              string   `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCouriersReportExcelRequest) Reset()         { *m = GetCouriersReportExcelRequest{} }
func (m *GetCouriersReportExcelRequest) String() string { return proto.CompactTextString(m) }
func (*GetCouriersReportExcelRequest) ProtoMessage()    {}
func (*GetCouriersReportExcelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee3d732344b8ecfb, []int{4}
}

func (m *GetCouriersReportExcelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCouriersReportExcelRequest.Unmarshal(m, b)
}
func (m *GetCouriersReportExcelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCouriersReportExcelRequest.Marshal(b, m, deterministic)
}
func (m *GetCouriersReportExcelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCouriersReportExcelRequest.Merge(m, src)
}
func (m *GetCouriersReportExcelRequest) XXX_Size() int {
	return xxx_messageInfo_GetCouriersReportExcelRequest.Size(m)
}
func (m *GetCouriersReportExcelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCouriersReportExcelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCouriersReportExcelRequest proto.InternalMessageInfo

func (m *GetCouriersReportExcelRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetCouriersReportExcelRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *GetCouriersReportExcelRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type GetCouriersReportExcelResponse struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCouriersReportExcelResponse) Reset()         { *m = GetCouriersReportExcelResponse{} }
func (m *GetCouriersReportExcelResponse) String() string { return proto.CompactTextString(m) }
func (*GetCouriersReportExcelResponse) ProtoMessage()    {}
func (*GetCouriersReportExcelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee3d732344b8ecfb, []int{5}
}

func (m *GetCouriersReportExcelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCouriersReportExcelResponse.Unmarshal(m, b)
}
func (m *GetCouriersReportExcelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCouriersReportExcelResponse.Marshal(b, m, deterministic)
}
func (m *GetCouriersReportExcelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCouriersReportExcelResponse.Merge(m, src)
}
func (m *GetCouriersReportExcelResponse) XXX_Size() int {
	return xxx_messageInfo_GetCouriersReportExcelResponse.Size(m)
}
func (m *GetCouriersReportExcelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCouriersReportExcelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCouriersReportExcelResponse proto.InternalMessageInfo

func (m *GetCouriersReportExcelResponse) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

type GetTimeReportExcelRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	StartDate            string   `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate              string   `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTimeReportExcelRequest) Reset()         { *m = GetTimeReportExcelRequest{} }
func (m *GetTimeReportExcelRequest) String() string { return proto.CompactTextString(m) }
func (*GetTimeReportExcelRequest) ProtoMessage()    {}
func (*GetTimeReportExcelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee3d732344b8ecfb, []int{6}
}

func (m *GetTimeReportExcelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTimeReportExcelRequest.Unmarshal(m, b)
}
func (m *GetTimeReportExcelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTimeReportExcelRequest.Marshal(b, m, deterministic)
}
func (m *GetTimeReportExcelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTimeReportExcelRequest.Merge(m, src)
}
func (m *GetTimeReportExcelRequest) XXX_Size() int {
	return xxx_messageInfo_GetTimeReportExcelRequest.Size(m)
}
func (m *GetTimeReportExcelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTimeReportExcelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTimeReportExcelRequest proto.InternalMessageInfo

func (m *GetTimeReportExcelRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetTimeReportExcelRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *GetTimeReportExcelRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type GetTimeReportExcelResponse struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTimeReportExcelResponse) Reset()         { *m = GetTimeReportExcelResponse{} }
func (m *GetTimeReportExcelResponse) String() string { return proto.CompactTextString(m) }
func (*GetTimeReportExcelResponse) ProtoMessage()    {}
func (*GetTimeReportExcelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee3d732344b8ecfb, []int{7}
}

func (m *GetTimeReportExcelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTimeReportExcelResponse.Unmarshal(m, b)
}
func (m *GetTimeReportExcelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTimeReportExcelResponse.Marshal(b, m, deterministic)
}
func (m *GetTimeReportExcelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTimeReportExcelResponse.Merge(m, src)
}
func (m *GetTimeReportExcelResponse) XXX_Size() int {
	return xxx_messageInfo_GetTimeReportExcelResponse.Size(m)
}
func (m *GetTimeReportExcelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTimeReportExcelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTimeReportExcelResponse proto.InternalMessageInfo

func (m *GetTimeReportExcelResponse) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func init() {
	proto.RegisterType((*GetUserReviewsReportExcelRequest)(nil), "genproto.GetUserReviewsReportExcelRequest")
	proto.RegisterType((*GetUserReviewsReportExcelResponse)(nil), "genproto.GetUserReviewsReportExcelResponse")
	proto.RegisterType((*GetBranchesReportExcelRequest)(nil), "genproto.GetBranchesReportExcelRequest")
	proto.RegisterType((*GetBranchesReportExcelResponse)(nil), "genproto.GetBranchesReportExcelResponse")
	proto.RegisterType((*GetCouriersReportExcelRequest)(nil), "genproto.GetCouriersReportExcelRequest")
	proto.RegisterType((*GetCouriersReportExcelResponse)(nil), "genproto.GetCouriersReportExcelResponse")
	proto.RegisterType((*GetTimeReportExcelRequest)(nil), "genproto.GetTimeReportExcelRequest")
	proto.RegisterType((*GetTimeReportExcelResponse)(nil), "genproto.GetTimeReportExcelResponse")
}

func init() { proto.RegisterFile("report_service.proto", fileDescriptor_ee3d732344b8ecfb) }

var fileDescriptor_ee3d732344b8ecfb = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0x4d, 0x4f, 0xc2, 0x40,
	0x10, 0x05, 0x41, 0x3e, 0xc6, 0x78, 0xd9, 0x18, 0x85, 0x1a, 0x14, 0xab, 0x89, 0x44, 0x13, 0x34,
	0x6a, 0xe2, 0x1d, 0x35, 0xa4, 0xd7, 0xaa, 0x17, 0x2f, 0xa4, 0x74, 0x47, 0xd9, 0x04, 0xba, 0x75,
	0x77, 0x41, 0x7e, 0xa2, 0x7f, 0xc8, 0xbb, 0xe9, 0x6e, 0x6b, 0x02, 0xb6, 0xc5, 0x13, 0xde, 0x36,
	0xef, 0xcd, 0xcc, 0x7b, 0x3b, 0xb3, 0xb3, 0xb0, 0x23, 0x30, 0xe4, 0x42, 0x0d, 0x24, 0x8a, 0x19,
	0xf3, 0xb1, 0x1b, 0x0a, 0xae, 0x38, 0xa9, 0xbd, 0x61, 0xa0, 0x4f, 0xf6, 0x57, 0x11, 0xda, 0x7d,
	0x54, 0xcf, 0x12, 0x85, 0x8b, 0x33, 0x86, 0x1f, 0xd2, 0xd5, 0x09, 0x0f, 0x73, 0x1f, 0xc7, 0x2e,
	0xbe, 0x4f, 0x51, 0x2a, 0xd2, 0x02, 0x90, 0x23, 0x16, 0x86, 0x28, 0x06, 0x8c, 0x36, 0x8a, 0xed,
	0x62, 0xa7, 0xee, 0xd6, 0x63, 0xc4, 0xa1, 0x9a, 0x56, 0x9e, 0x50, 0x03, 0xea, 0x29, 0x6c, 0x6c,
	0xc4, 0x74, 0x84, 0xdc, 0x7b, 0x0a, 0x49, 0x13, 0x6a, 0x18, 0x50, 0x43, 0x96, 0x34, 0x59, 0xc5,
	0x80, 0x6a, 0x6a, 0x1f, 0xea, 0x43, 0xe1, 0x05, 0xfe, 0x28, 0xaa, 0x5b, 0xd6, 0x5c, 0xcd, 0x00,
	0xa6, 0xac, 0xcf, 0xa7, 0x82, 0x19, 0xd5, 0x4d, 0x53, 0x36, 0x46, 0x1c, 0x1a, 0xe5, 0xfa, 0x63,
	0x86, 0x81, 0x8a, 0xd8, 0x8a, 0xc9, 0x35, 0x80, 0x43, 0xc9, 0x21, 0x6c, 0xf1, 0x10, 0x85, 0xa7,
	0xb8, 0x4e, 0xae, 0x6a, 0x1a, 0x12, 0xc8, 0xa1, 0xf6, 0x2d, 0x1c, 0xe5, 0x5c, 0x5b, 0x86, 0x3c,
	0x90, 0x48, 0x08, 0x94, 0x5f, 0xd9, 0x18, 0xe3, 0x1b, 0xeb, 0xb3, 0x3d, 0x87, 0x56, 0x1f, 0x55,
	0x4f, 0x9b, 0xc4, 0x75, 0x36, 0xcb, 0xbe, 0x81, 0x83, 0x2c, 0xe5, 0x95, 0x7e, 0xef, 0x4c, 0xdb,
	0xfe, 0xc1, 0x6f, 0xaa, 0x72, 0x8e, 0x5f, 0x05, 0xcd, 0x3e, 0xaa, 0x27, 0x36, 0xc1, 0x75, 0x7a,
	0xbd, 0x04, 0x2b, 0x4d, 0x35, 0xdb, 0xe7, 0xd5, 0x67, 0x09, 0xb6, 0x4d, 0xec, 0xa3, 0x59, 0x2d,
	0x32, 0x81, 0xdd, 0xf4, 0xf9, 0x90, 0xd3, 0x6e, 0xb2, 0x6f, 0xdd, 0xdc, 0xb7, 0x63, 0x75, 0x56,
	0x07, 0x1a, 0x4b, 0x76, 0x21, 0x96, 0x4b, 0x69, 0xef, 0x92, 0x5c, 0xf6, 0xe8, 0x97, 0xe4, 0x72,
	0x26, 0x65, 0x17, 0xc8, 0x4c, 0xcf, 0x25, 0x7d, 0x61, 0xc8, 0xd9, 0x42, 0xa1, 0xdc, 0xcf, 0xc4,
	0x3a, 0xff, 0x53, 0xec, 0x8f, 0xae, 0x07, 0xe4, 0xf7, 0x64, 0xc8, 0xf1, 0x42, 0x91, 0xf4, 0xd7,
	0x62, 0x9d, 0xe4, 0x07, 0x25, 0x12, 0xbd, 0xe6, 0xcb, 0x5e, 0x12, 0x78, 0xb1, 0xf8, 0x5d, 0x0e,
	0x2b, 0x1a, 0xbd, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x76, 0x29, 0x98, 0xdc, 0x47, 0x05, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReportServiceClient is the client API for ReportService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReportServiceClient interface {
	GetBranchesReportExcel(ctx context.Context, in *GetBranchesReportExcelRequest, opts ...grpc.CallOption) (*GetBranchesReportExcelResponse, error)
	GetCouriersReportExcel(ctx context.Context, in *GetCouriersReportExcelRequest, opts ...grpc.CallOption) (*GetCouriersReportExcelResponse, error)
	GetUserReviewsReportExcel(ctx context.Context, in *GetUserReviewsReportExcelRequest, opts ...grpc.CallOption) (*GetUserReviewsReportExcelResponse, error)
	GetTimeReportExcel(ctx context.Context, in *GetTimeReportExcelRequest, opts ...grpc.CallOption) (*GetTimeReportExcelResponse, error)
}

type reportServiceClient struct {
	cc *grpc.ClientConn
}

func NewReportServiceClient(cc *grpc.ClientConn) ReportServiceClient {
	return &reportServiceClient{cc}
}

func (c *reportServiceClient) GetBranchesReportExcel(ctx context.Context, in *GetBranchesReportExcelRequest, opts ...grpc.CallOption) (*GetBranchesReportExcelResponse, error) {
	out := new(GetBranchesReportExcelResponse)
	err := c.cc.Invoke(ctx, "/genproto.ReportService/GetBranchesReportExcel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportServiceClient) GetCouriersReportExcel(ctx context.Context, in *GetCouriersReportExcelRequest, opts ...grpc.CallOption) (*GetCouriersReportExcelResponse, error) {
	out := new(GetCouriersReportExcelResponse)
	err := c.cc.Invoke(ctx, "/genproto.ReportService/GetCouriersReportExcel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportServiceClient) GetUserReviewsReportExcel(ctx context.Context, in *GetUserReviewsReportExcelRequest, opts ...grpc.CallOption) (*GetUserReviewsReportExcelResponse, error) {
	out := new(GetUserReviewsReportExcelResponse)
	err := c.cc.Invoke(ctx, "/genproto.ReportService/GetUserReviewsReportExcel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportServiceClient) GetTimeReportExcel(ctx context.Context, in *GetTimeReportExcelRequest, opts ...grpc.CallOption) (*GetTimeReportExcelResponse, error) {
	out := new(GetTimeReportExcelResponse)
	err := c.cc.Invoke(ctx, "/genproto.ReportService/GetTimeReportExcel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReportServiceServer is the server API for ReportService service.
type ReportServiceServer interface {
	GetBranchesReportExcel(context.Context, *GetBranchesReportExcelRequest) (*GetBranchesReportExcelResponse, error)
	GetCouriersReportExcel(context.Context, *GetCouriersReportExcelRequest) (*GetCouriersReportExcelResponse, error)
	GetUserReviewsReportExcel(context.Context, *GetUserReviewsReportExcelRequest) (*GetUserReviewsReportExcelResponse, error)
	GetTimeReportExcel(context.Context, *GetTimeReportExcelRequest) (*GetTimeReportExcelResponse, error)
}

// UnimplementedReportServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReportServiceServer struct {
}

func (*UnimplementedReportServiceServer) GetBranchesReportExcel(ctx context.Context, req *GetBranchesReportExcelRequest) (*GetBranchesReportExcelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBranchesReportExcel not implemented")
}
func (*UnimplementedReportServiceServer) GetCouriersReportExcel(ctx context.Context, req *GetCouriersReportExcelRequest) (*GetCouriersReportExcelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCouriersReportExcel not implemented")
}
func (*UnimplementedReportServiceServer) GetUserReviewsReportExcel(ctx context.Context, req *GetUserReviewsReportExcelRequest) (*GetUserReviewsReportExcelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserReviewsReportExcel not implemented")
}
func (*UnimplementedReportServiceServer) GetTimeReportExcel(ctx context.Context, req *GetTimeReportExcelRequest) (*GetTimeReportExcelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeReportExcel not implemented")
}

func RegisterReportServiceServer(s *grpc.Server, srv ReportServiceServer) {
	s.RegisterService(&_ReportService_serviceDesc, srv)
}

func _ReportService_GetBranchesReportExcel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBranchesReportExcelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServiceServer).GetBranchesReportExcel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ReportService/GetBranchesReportExcel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServiceServer).GetBranchesReportExcel(ctx, req.(*GetBranchesReportExcelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportService_GetCouriersReportExcel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCouriersReportExcelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServiceServer).GetCouriersReportExcel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ReportService/GetCouriersReportExcel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServiceServer).GetCouriersReportExcel(ctx, req.(*GetCouriersReportExcelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportService_GetUserReviewsReportExcel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserReviewsReportExcelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServiceServer).GetUserReviewsReportExcel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ReportService/GetUserReviewsReportExcel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServiceServer).GetUserReviewsReportExcel(ctx, req.(*GetUserReviewsReportExcelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReportService_GetTimeReportExcel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTimeReportExcelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportServiceServer).GetTimeReportExcel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ReportService/GetTimeReportExcel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportServiceServer).GetTimeReportExcel(ctx, req.(*GetTimeReportExcelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReportService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.ReportService",
	HandlerType: (*ReportServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBranchesReportExcel",
			Handler:    _ReportService_GetBranchesReportExcel_Handler,
		},
		{
			MethodName: "GetCouriersReportExcel",
			Handler:    _ReportService_GetCouriersReportExcel_Handler,
		},
		{
			MethodName: "GetUserReviewsReportExcel",
			Handler:    _ReportService_GetUserReviewsReportExcel_Handler,
		},
		{
			MethodName: "GetTimeReportExcel",
			Handler:    _ReportService_GetTimeReportExcel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "report_service.proto",
}
