// Code generated by protoc-gen-go. DO NOT EDIT.
// source: category.proto

package catalog_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAllCategoriesResponse struct {
	Categories           []*Category `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	Count                int64       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetAllCategoriesResponse) Reset()         { *m = GetAllCategoriesResponse{} }
func (m *GetAllCategoriesResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllCategoriesResponse) ProtoMessage()    {}
func (*GetAllCategoriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c6ef5ed29d8d1a1, []int{0}
}

func (m *GetAllCategoriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllCategoriesResponse.Unmarshal(m, b)
}
func (m *GetAllCategoriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllCategoriesResponse.Marshal(b, m, deterministic)
}
func (m *GetAllCategoriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllCategoriesResponse.Merge(m, src)
}
func (m *GetAllCategoriesResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllCategoriesResponse.Size(m)
}
func (m *GetAllCategoriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllCategoriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllCategoriesResponse proto.InternalMessageInfo

func (m *GetAllCategoriesResponse) GetCategories() []*Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *GetAllCategoriesResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*GetAllCategoriesResponse)(nil), "genproto.GetAllCategoriesResponse")
}

func init() { proto.RegisterFile("category.proto", fileDescriptor_1c6ef5ed29d8d1a1) }

var fileDescriptor_1c6ef5ed29d8d1a1 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x53, 0xab, 0xc1, 0x8e, 0xa8, 0x38, 0x14, 0x0d, 0xeb, 0xa5, 0xe4, 0xd4, 0x53, 0x8a,
	0x15, 0x44, 0x10, 0x0f, 0x6d, 0x94, 0xdc, 0x3c, 0x44, 0x7a, 0xf1, 0x22, 0x69, 0x3a, 0x86, 0xc2,
	0xb6, 0x1b, 0xb3, 0x53, 0xa1, 0x67, 0xff, 0xb8, 0x34, 0xdb, 0xd5, 0xb4, 0x36, 0x82, 0xb7, 0xec,
	0x9b, 0xf7, 0x4d, 0x66, 0xf6, 0x2d, 0x9c, 0xa4, 0x09, 0x53, 0xa6, 0x8a, 0x65, 0x90, 0x17, 0x8a,
	0x15, 0x1e, 0x66, 0x34, 0x2f, 0xbf, 0xc4, 0x71, 0x9a, 0x70, 0x22, 0x55, 0x66, 0x0a, 0xe2, 0x32,
	0x53, 0x2a, 0x93, 0xd4, 0x2b, 0x4f, 0xe3, 0xc5, 0x5b, 0x8f, 0x66, 0x39, 0xaf, 0x29, 0x7f, 0x02,
	0x5e, 0x44, 0x3c, 0x90, 0x32, 0x34, 0xdd, 0xa6, 0xa4, 0x63, 0xd2, 0xb9, 0x9a, 0x6b, 0xc2, 0x3e,
	0x40, 0xfa, 0xad, 0x7a, 0x8d, 0x4e, 0xb3, 0x7b, 0xd4, 0xc7, 0xc0, 0xfe, 0x26, 0x58, 0x13, 0xcb,
	0xb8, 0xe2, 0xc2, 0x36, 0x1c, 0xa4, 0x6a, 0x31, 0x67, 0x6f, 0xaf, 0xd3, 0xe8, 0x36, 0x63, 0x73,
	0xe8, 0x7f, 0xee, 0xc3, 0xa9, 0xb5, 0x3f, 0x53, 0xf1, 0x31, 0x4d, 0x09, 0x6f, 0xc1, 0x0d, 0x0b,
	0x4a, 0x98, 0x70, 0x47, 0x4f, 0xe1, 0x55, 0xb4, 0xd2, 0x65, 0xa7, 0xf2, 0x1d, 0xbc, 0x82, 0x66,
	0x44, 0x8c, 0xed, 0x1f, 0x4b, 0x44, 0x1c, 0xd3, 0xfb, 0x82, 0x34, 0x8b, 0x1d, 0xcd, 0x7c, 0x07,
	0xef, 0xa1, 0x15, 0x11, 0x0f, 0x97, 0x4f, 0xc9, 0x8c, 0x50, 0x6c, 0x80, 0x46, 0xfc, 0x1b, 0x8f,
	0xc0, 0x35, 0xb7, 0x84, 0x17, 0x1b, 0xec, 0x40, 0x4a, 0x0b, 0xfa, 0xdb, 0x85, 0xdf, 0x17, 0xea,
	0x3b, 0x78, 0x03, 0xee, 0x28, 0x9f, 0xd4, 0x2d, 0x7d, 0x1e, 0x98, 0xa8, 0x02, 0x1b, 0x55, 0xf0,
	0xb8, 0x8a, 0xca, 0x77, 0xf0, 0x0e, 0xdc, 0x07, 0x92, 0xc4, 0x54, 0x1d, 0xc0, 0x28, 0x76, 0x80,
	0x7a, 0x78, 0x00, 0x2d, 0x63, 0x5d, 0x2d, 0x20, 0xb6, 0xf9, 0xca, 0x0e, 0xf5, 0x2d, 0x42, 0x38,
	0x1b, 0xe5, 0x9a, 0x0a, 0x0e, 0x8b, 0x99, 0x1d, 0xf7, 0xbf, 0xb9, 0x0d, 0xc5, 0x8b, 0x67, 0x8b,
	0xbd, 0xf5, 0x13, 0x7d, 0xd5, 0xe6, 0x35, 0x8c, 0xdd, 0x52, 0xbe, 0xfe, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0x88, 0x61, 0xfb, 0xfe, 0xd6, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CategoryServiceClient is the client API for CategoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CategoryServiceClient interface {
	Create(ctx context.Context, in *Category, opts ...grpc.CallOption) (*CreateResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Category, error)
	GetByName(ctx context.Context, in *GetByNameRequest, opts ...grpc.CallOption) (*Category, error)
	GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllCategoriesResponse, error)
	Update(ctx context.Context, in *Category, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteAll(ctx context.Context, in *DeleteAllRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpsertCrmCategory(ctx context.Context, in *Category, opts ...grpc.CallOption) (*CreateResponse, error)
}

type categoryServiceClient struct {
	cc *grpc.ClientConn
}

func NewCategoryServiceClient(cc *grpc.ClientConn) CategoryServiceClient {
	return &categoryServiceClient{cc}
}

func (c *categoryServiceClient) Create(ctx context.Context, in *Category, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/genproto.CategoryService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Category, error) {
	out := new(Category)
	err := c.cc.Invoke(ctx, "/genproto.CategoryService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) GetByName(ctx context.Context, in *GetByNameRequest, opts ...grpc.CallOption) (*Category, error) {
	out := new(Category)
	err := c.cc.Invoke(ctx, "/genproto.CategoryService/GetByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) GetAll(ctx context.Context, in *GetAllRequest, opts ...grpc.CallOption) (*GetAllCategoriesResponse, error) {
	out := new(GetAllCategoriesResponse)
	err := c.cc.Invoke(ctx, "/genproto.CategoryService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) Update(ctx context.Context, in *Category, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CategoryService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CategoryService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) DeleteAll(ctx context.Context, in *DeleteAllRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.CategoryService/DeleteAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *categoryServiceClient) UpsertCrmCategory(ctx context.Context, in *Category, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/genproto.CategoryService/UpsertCrmCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CategoryServiceServer is the server API for CategoryService service.
type CategoryServiceServer interface {
	Create(context.Context, *Category) (*CreateResponse, error)
	Get(context.Context, *GetRequest) (*Category, error)
	GetByName(context.Context, *GetByNameRequest) (*Category, error)
	GetAll(context.Context, *GetAllRequest) (*GetAllCategoriesResponse, error)
	Update(context.Context, *Category) (*emptypb.Empty, error)
	Delete(context.Context, *DeleteRequest) (*emptypb.Empty, error)
	DeleteAll(context.Context, *DeleteAllRequest) (*emptypb.Empty, error)
	UpsertCrmCategory(context.Context, *Category) (*CreateResponse, error)
}

// UnimplementedCategoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCategoryServiceServer struct {
}

func (*UnimplementedCategoryServiceServer) Create(ctx context.Context, req *Category) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCategoryServiceServer) Get(ctx context.Context, req *GetRequest) (*Category, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedCategoryServiceServer) GetByName(ctx context.Context, req *GetByNameRequest) (*Category, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByName not implemented")
}
func (*UnimplementedCategoryServiceServer) GetAll(ctx context.Context, req *GetAllRequest) (*GetAllCategoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedCategoryServiceServer) Update(ctx context.Context, req *Category) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedCategoryServiceServer) Delete(ctx context.Context, req *DeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedCategoryServiceServer) DeleteAll(ctx context.Context, req *DeleteAllRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAll not implemented")
}
func (*UnimplementedCategoryServiceServer) UpsertCrmCategory(ctx context.Context, req *Category) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertCrmCategory not implemented")
}

func RegisterCategoryServiceServer(s *grpc.Server, srv CategoryServiceServer) {
	s.RegisterService(&_CategoryService_serviceDesc, srv)
}

func _CategoryService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Category)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CategoryService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).Create(ctx, req.(*Category))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CategoryService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_GetByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).GetByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CategoryService/GetByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).GetByName(ctx, req.(*GetByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CategoryService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).GetAll(ctx, req.(*GetAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Category)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CategoryService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).Update(ctx, req.(*Category))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CategoryService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_DeleteAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).DeleteAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CategoryService/DeleteAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).DeleteAll(ctx, req.(*DeleteAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CategoryService_UpsertCrmCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Category)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CategoryServiceServer).UpsertCrmCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.CategoryService/UpsertCrmCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CategoryServiceServer).UpsertCrmCategory(ctx, req.(*Category))
	}
	return interceptor(ctx, in, info, handler)
}

var _CategoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.CategoryService",
	HandlerType: (*CategoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _CategoryService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _CategoryService_Get_Handler,
		},
		{
			MethodName: "GetByName",
			Handler:    _CategoryService_GetByName_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _CategoryService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CategoryService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CategoryService_Delete_Handler,
		},
		{
			MethodName: "DeleteAll",
			Handler:    _CategoryService_DeleteAll_Handler,
		},
		{
			MethodName: "UpsertCrmCategory",
			Handler:    _CategoryService_UpsertCrmCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "category.proto",
}
