// Code generated by protoc-gen-go. DO NOT EDIT.
// source: menu_service.proto

package catalog_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetMenuImageRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMenuImageRequest) Reset()         { *m = GetMenuImageRequest{} }
func (m *GetMenuImageRequest) String() string { return proto.CompactTextString(m) }
func (*GetMenuImageRequest) ProtoMessage()    {}
func (*GetMenuImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0c1fe9f26d7a45c, []int{0}
}

func (m *GetMenuImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMenuImageRequest.Unmarshal(m, b)
}
func (m *GetMenuImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMenuImageRequest.Marshal(b, m, deterministic)
}
func (m *GetMenuImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMenuImageRequest.Merge(m, src)
}
func (m *GetMenuImageRequest) XXX_Size() int {
	return xxx_messageInfo_GetMenuImageRequest.Size(m)
}
func (m *GetMenuImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMenuImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMenuImageRequest proto.InternalMessageInfo

func (m *GetMenuImageRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func init() {
	proto.RegisterType((*GetMenuImageRequest)(nil), "genproto.GetMenuImageRequest")
}

func init() { proto.RegisterFile("menu_service.proto", fileDescriptor_d0c1fe9f26d7a45c) }

var fileDescriptor_d0c1fe9f26d7a45c = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x4d, 0xcd, 0x2b,
	0x8d, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x48, 0x4f, 0xcd, 0x03, 0xb3, 0xa4, 0xa4, 0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xbc,
	0xa4, 0xd2, 0x34, 0xfd, 0xd4, 0xdc, 0x82, 0x92, 0x4a, 0x88, 0x32, 0x29, 0x2e, 0x90, 0x56, 0x08,
	0x5b, 0xc9, 0x84, 0x4b, 0xd8, 0x3d, 0xb5, 0xc4, 0x37, 0x35, 0xaf, 0xd4, 0x33, 0x37, 0x31, 0x3d,
	0x35, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48, 0x96, 0x8b, 0xab, 0x38, 0x23, 0xb3, 0xa0,
	0x20, 0xb5, 0x28, 0x3e, 0x33, 0x45, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x88, 0x13, 0x2a, 0xe2,
	0x99, 0x62, 0xd4, 0xc1, 0xc8, 0x25, 0x00, 0xd7, 0x13, 0x0c, 0x71, 0x83, 0x90, 0x35, 0x17, 0xb3,
	0x7b, 0x6a, 0x89, 0x90, 0xac, 0x1e, 0xcc, 0x15, 0x7a, 0x58, 0x4c, 0x96, 0x12, 0x46, 0x48, 0xc3,
	0xe5, 0x94, 0x18, 0x84, 0xcc, 0xb9, 0xd8, 0x42, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x85, 0xb0, 0x29,
	0x90, 0x12, 0xd3, 0x83, 0x78, 0x48, 0x0f, 0xe6, 0x21, 0x3d, 0x57, 0x90, 0x87, 0x94, 0x18, 0x9c,
	0xa4, 0xa2, 0x24, 0x60, 0xea, 0xf5, 0x93, 0x13, 0x4b, 0x12, 0x73, 0xf2, 0xd3, 0x61, 0xa1, 0x92,
	0xc4, 0x06, 0x16, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x43, 0xee, 0x3b, 0x5d, 0x2c, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MenuImageServiceClient is the client API for MenuImageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MenuImageServiceClient interface {
	Get(ctx context.Context, in *GetMenuImageRequest, opts ...grpc.CallOption) (*MenuImage, error)
	Update(ctx context.Context, in *MenuImage, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type menuImageServiceClient struct {
	cc *grpc.ClientConn
}

func NewMenuImageServiceClient(cc *grpc.ClientConn) MenuImageServiceClient {
	return &menuImageServiceClient{cc}
}

func (c *menuImageServiceClient) Get(ctx context.Context, in *GetMenuImageRequest, opts ...grpc.CallOption) (*MenuImage, error) {
	out := new(MenuImage)
	err := c.cc.Invoke(ctx, "/genproto.MenuImageService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuImageServiceClient) Update(ctx context.Context, in *MenuImage, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.MenuImageService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MenuImageServiceServer is the server API for MenuImageService service.
type MenuImageServiceServer interface {
	Get(context.Context, *GetMenuImageRequest) (*MenuImage, error)
	Update(context.Context, *MenuImage) (*emptypb.Empty, error)
}

// UnimplementedMenuImageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMenuImageServiceServer struct {
}

func (*UnimplementedMenuImageServiceServer) Get(ctx context.Context, req *GetMenuImageRequest) (*MenuImage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedMenuImageServiceServer) Update(ctx context.Context, req *MenuImage) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterMenuImageServiceServer(s *grpc.Server, srv MenuImageServiceServer) {
	s.RegisterService(&_MenuImageService_serviceDesc, srv)
}

func _MenuImageService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMenuImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuImageServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.MenuImageService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuImageServiceServer).Get(ctx, req.(*GetMenuImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MenuImageService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MenuImage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuImageServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.MenuImageService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuImageServiceServer).Update(ctx, req.(*MenuImage))
	}
	return interceptor(ctx, in, info, handler)
}

var _MenuImageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.MenuImageService",
	HandlerType: (*MenuImageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _MenuImageService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _MenuImageService_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "menu_service.proto",
}
