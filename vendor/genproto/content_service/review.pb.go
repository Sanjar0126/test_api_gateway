// Code generated by protoc-gen-go. DO NOT EDIT.
// source: review.proto

package content_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Review struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              *Language `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Type                 string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	ShipperId            string    `protobuf:"bytes,4,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	RelatedSubject       string    `protobuf:"bytes,5,opt,name=related_subject,json=relatedSubject,proto3" json:"related_subject,omitempty"`
	Active               bool      `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	CreatedAt            string    `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string    `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Review) Reset()         { *m = Review{} }
func (m *Review) String() string { return proto.CompactTextString(m) }
func (*Review) ProtoMessage()    {}
func (*Review) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{0}
}

func (m *Review) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Review.Unmarshal(m, b)
}
func (m *Review) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Review.Marshal(b, m, deterministic)
}
func (m *Review) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Review.Merge(m, src)
}
func (m *Review) XXX_Size() int {
	return xxx_messageInfo_Review.Size(m)
}
func (m *Review) XXX_DiscardUnknown() {
	xxx_messageInfo_Review.DiscardUnknown(m)
}

var xxx_messageInfo_Review proto.InternalMessageInfo

func (m *Review) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Review) GetMessage() *Language {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Review) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Review) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *Review) GetRelatedSubject() string {
	if m != nil {
		return m.RelatedSubject
	}
	return ""
}

func (m *Review) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Review) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Review) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type GetAllReviewsResponse struct {
	Reviews              []*Review `protobuf:"bytes,1,rep,name=reviews,proto3" json:"reviews,omitempty"`
	Count                int64     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Search               string    `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetAllReviewsResponse) Reset()         { *m = GetAllReviewsResponse{} }
func (m *GetAllReviewsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllReviewsResponse) ProtoMessage()    {}
func (*GetAllReviewsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{1}
}

func (m *GetAllReviewsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllReviewsResponse.Unmarshal(m, b)
}
func (m *GetAllReviewsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllReviewsResponse.Marshal(b, m, deterministic)
}
func (m *GetAllReviewsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllReviewsResponse.Merge(m, src)
}
func (m *GetAllReviewsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllReviewsResponse.Size(m)
}
func (m *GetAllReviewsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllReviewsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllReviewsResponse proto.InternalMessageInfo

func (m *GetAllReviewsResponse) GetReviews() []*Review {
	if m != nil {
		return m.Reviews
	}
	return nil
}

func (m *GetAllReviewsResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetAllReviewsResponse) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type GetAllReviewsRequest struct {
	Page                 int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Search               string   `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	ShipperId            string   `protobuf:"bytes,4,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllReviewsRequest) Reset()         { *m = GetAllReviewsRequest{} }
func (m *GetAllReviewsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllReviewsRequest) ProtoMessage()    {}
func (*GetAllReviewsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{2}
}

func (m *GetAllReviewsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllReviewsRequest.Unmarshal(m, b)
}
func (m *GetAllReviewsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllReviewsRequest.Marshal(b, m, deterministic)
}
func (m *GetAllReviewsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllReviewsRequest.Merge(m, src)
}
func (m *GetAllReviewsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllReviewsRequest.Size(m)
}
func (m *GetAllReviewsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllReviewsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllReviewsRequest proto.InternalMessageInfo

func (m *GetAllReviewsRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllReviewsRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *GetAllReviewsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllReviewsRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

type ReviewId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewId) Reset()         { *m = ReviewId{} }
func (m *ReviewId) String() string { return proto.CompactTextString(m) }
func (*ReviewId) ProtoMessage()    {}
func (*ReviewId) Descriptor() ([]byte, []int) {
	return fileDescriptor_deed8eefad2f709e, []int{3}
}

func (m *ReviewId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewId.Unmarshal(m, b)
}
func (m *ReviewId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewId.Marshal(b, m, deterministic)
}
func (m *ReviewId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewId.Merge(m, src)
}
func (m *ReviewId) XXX_Size() int {
	return xxx_messageInfo_ReviewId.Size(m)
}
func (m *ReviewId) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewId.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewId proto.InternalMessageInfo

func (m *ReviewId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Review)(nil), "genproto.Review")
	proto.RegisterType((*GetAllReviewsResponse)(nil), "genproto.GetAllReviewsResponse")
	proto.RegisterType((*GetAllReviewsRequest)(nil), "genproto.GetAllReviewsRequest")
	proto.RegisterType((*ReviewId)(nil), "genproto.ReviewId")
}

func init() { proto.RegisterFile("review.proto", fileDescriptor_deed8eefad2f709e) }

var fileDescriptor_deed8eefad2f709e = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x63, 0xbb, 0x75, 0xd2, 0x69, 0x69, 0xd1, 0xa8, 0xa0, 0x95, 0x25, 0x20, 0xf2, 0x85,
	0x08, 0x41, 0x8a, 0xc2, 0x13, 0x84, 0x3f, 0xaa, 0x22, 0x38, 0xb9, 0xe2, 0xc2, 0x25, 0x72, 0xbd,
	0xa3, 0x74, 0x91, 0xff, 0x6c, 0xbd, 0xe3, 0x54, 0x7d, 0x18, 0xde, 0x93, 0x23, 0xf2, 0xae, 0xad,
	0x44, 0x49, 0x50, 0x6f, 0x3b, 0xdf, 0x37, 0xfb, 0xcd, 0xec, 0x6f, 0xe1, 0xac, 0xa6, 0xb5, 0xa2,
	0x87, 0xa9, 0xae, 0x2b, 0xae, 0x70, 0xb4, 0xa2, 0xd2, 0x9e, 0xa2, 0xb3, 0xac, 0x2a, 0x8a, 0xaa,
	0x74, 0x7a, 0xfc, 0xd7, 0x83, 0x30, 0xb1, 0x8d, 0x78, 0x0e, 0xbe, 0x92, 0xc2, 0x1b, 0x7b, 0x93,
	0x93, 0xc4, 0x57, 0x12, 0xdf, 0xc3, 0xb0, 0x20, 0x63, 0xd2, 0x15, 0x09, 0x7f, 0xec, 0x4d, 0x4e,
	0x67, 0x38, 0xed, 0x43, 0xa6, 0x3f, 0xd2, 0x72, 0xd5, 0xa4, 0x2b, 0x4a, 0xfa, 0x16, 0x44, 0x38,
	0xe2, 0x47, 0x4d, 0x22, 0xb0, 0xf7, 0xed, 0x19, 0x5f, 0x01, 0x98, 0x3b, 0xa5, 0x35, 0xd5, 0x4b,
	0x25, 0xc5, 0x91, 0x75, 0x4e, 0x3a, 0x65, 0x21, 0xf1, 0x2d, 0x5c, 0xd4, 0x94, 0xa7, 0x4c, 0x72,
	0x69, 0x9a, 0xdb, 0xdf, 0x94, 0xb1, 0x38, 0xb6, 0x3d, 0xe7, 0x9d, 0x7c, 0xe3, 0x54, 0x7c, 0x09,
	0x61, 0x9a, 0xb1, 0x5a, 0x93, 0x08, 0xc7, 0xde, 0x64, 0x94, 0x74, 0x55, 0x9b, 0x9f, 0xd5, 0x64,
	0x03, 0x52, 0x16, 0x43, 0x97, 0xdf, 0x29, 0x73, 0x6e, 0xed, 0x46, 0xcb, 0xde, 0x1e, 0x39, 0xbb,
	0x53, 0xe6, 0x1c, 0xdf, 0xc3, 0x8b, 0x6b, 0xe2, 0x79, 0x9e, 0xbb, 0xf7, 0x9b, 0x84, 0x8c, 0xae,
	0x4a, 0x43, 0xf8, 0x0e, 0x86, 0x8e, 0x9d, 0x11, 0xde, 0x38, 0x98, 0x9c, 0xce, 0x9e, 0x6f, 0x1e,
	0xee, 0x7a, 0x93, 0xbe, 0x01, 0x2f, 0xe1, 0x38, 0xab, 0x9a, 0x92, 0x2d, 0xa2, 0x20, 0x71, 0x45,
	0xbb, 0xb0, 0xa1, 0xb4, 0xce, 0xee, 0x3a, 0x1c, 0x5d, 0x15, 0x3f, 0xc0, 0xe5, 0xce, 0xc8, 0xfb,
	0x86, 0x0c, 0xb7, 0xf0, 0x74, 0xcb, 0xd9, 0xb3, 0x21, 0xf6, 0xbc, 0x95, 0xe1, 0x6f, 0x67, 0xb4,
	0x13, 0x73, 0x55, 0x28, 0xb6, 0xd1, 0x41, 0xe2, 0x8a, 0x27, 0x50, 0xc7, 0x11, 0x8c, 0xdc, 0xc8,
	0x85, 0xdc, 0xfd, 0xe7, 0xd9, 0x1f, 0x1f, 0x9e, 0x39, 0xf3, 0x86, 0xea, 0xb5, 0xca, 0x08, 0x3f,
	0x42, 0xf8, 0xc5, 0x52, 0xc4, 0xbd, 0x97, 0x47, 0xb8, 0xab, 0x2c, 0x64, 0x3c, 0xc0, 0x0f, 0x10,
	0xfe, 0xb4, 0x60, 0x0f, 0xdc, 0xb8, 0xd8, 0x28, 0xdf, 0x0a, 0xcd, 0x8f, 0xf1, 0x00, 0xbf, 0x43,
	0xe8, 0x38, 0xe0, 0xeb, 0x8d, 0x79, 0x88, 0x4c, 0xf4, 0xe6, 0xbf, 0xbe, 0xfb, 0x2c, 0x3b, 0x3b,
	0xb8, 0x26, 0xc6, 0x03, 0x8b, 0x45, 0x7b, 0xcb, 0xc4, 0x03, 0xbc, 0x82, 0xf0, 0x2b, 0xe5, 0xc4,
	0x74, 0xf0, 0xc6, 0xfe, 0xb2, 0x9f, 0xa3, 0x5f, 0xa2, 0xd7, 0xae, 0xb2, 0xaa, 0x64, 0x2a, 0x79,
	0x69, 0x1c, 0xa9, 0xdb, 0xd0, 0xca, 0x9f, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0xce, 0xac, 0xa6,
	0xf5, 0x6d, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReviewServiceClient is the client API for ReviewService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReviewServiceClient interface {
	Create(ctx context.Context, in *Review, opts ...grpc.CallOption) (*ReviewId, error)
	Update(ctx context.Context, in *Review, opts ...grpc.CallOption) (*Empty, error)
	GetAll(ctx context.Context, in *GetAllReviewsRequest, opts ...grpc.CallOption) (*GetAllReviewsResponse, error)
	Get(ctx context.Context, in *ReviewId, opts ...grpc.CallOption) (*Review, error)
	Delete(ctx context.Context, in *ReviewId, opts ...grpc.CallOption) (*Empty, error)
}

type reviewServiceClient struct {
	cc *grpc.ClientConn
}

func NewReviewServiceClient(cc *grpc.ClientConn) ReviewServiceClient {
	return &reviewServiceClient{cc}
}

func (c *reviewServiceClient) Create(ctx context.Context, in *Review, opts ...grpc.CallOption) (*ReviewId, error) {
	out := new(ReviewId)
	err := c.cc.Invoke(ctx, "/genproto.ReviewService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reviewServiceClient) Update(ctx context.Context, in *Review, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/genproto.ReviewService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reviewServiceClient) GetAll(ctx context.Context, in *GetAllReviewsRequest, opts ...grpc.CallOption) (*GetAllReviewsResponse, error) {
	out := new(GetAllReviewsResponse)
	err := c.cc.Invoke(ctx, "/genproto.ReviewService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reviewServiceClient) Get(ctx context.Context, in *ReviewId, opts ...grpc.CallOption) (*Review, error) {
	out := new(Review)
	err := c.cc.Invoke(ctx, "/genproto.ReviewService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reviewServiceClient) Delete(ctx context.Context, in *ReviewId, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/genproto.ReviewService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReviewServiceServer is the server API for ReviewService service.
type ReviewServiceServer interface {
	Create(context.Context, *Review) (*ReviewId, error)
	Update(context.Context, *Review) (*Empty, error)
	GetAll(context.Context, *GetAllReviewsRequest) (*GetAllReviewsResponse, error)
	Get(context.Context, *ReviewId) (*Review, error)
	Delete(context.Context, *ReviewId) (*Empty, error)
}

// UnimplementedReviewServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReviewServiceServer struct {
}

func (*UnimplementedReviewServiceServer) Create(ctx context.Context, req *Review) (*ReviewId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedReviewServiceServer) Update(ctx context.Context, req *Review) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedReviewServiceServer) GetAll(ctx context.Context, req *GetAllReviewsRequest) (*GetAllReviewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedReviewServiceServer) Get(ctx context.Context, req *ReviewId) (*Review, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedReviewServiceServer) Delete(ctx context.Context, req *ReviewId) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterReviewServiceServer(s *grpc.Server, srv ReviewServiceServer) {
	s.RegisterService(&_ReviewService_serviceDesc, srv)
}

func _ReviewService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Review)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ReviewService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).Create(ctx, req.(*Review))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReviewService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Review)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ReviewService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).Update(ctx, req.(*Review))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReviewService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllReviewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ReviewService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).GetAll(ctx, req.(*GetAllReviewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReviewService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReviewId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ReviewService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).Get(ctx, req.(*ReviewId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReviewService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReviewId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReviewServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.ReviewService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReviewServiceServer).Delete(ctx, req.(*ReviewId))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReviewService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.ReviewService",
	HandlerType: (*ReviewServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ReviewService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ReviewService_Update_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _ReviewService_GetAll_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ReviewService_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ReviewService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "review.proto",
}
