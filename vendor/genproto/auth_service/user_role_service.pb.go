// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_role_service.proto

package auth_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserRoleId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRoleId) Reset()         { *m = UserRoleId{} }
func (m *UserRoleId) String() string { return proto.CompactTextString(m) }
func (*UserRoleId) ProtoMessage()    {}
func (*UserRoleId) Descriptor() ([]byte, []int) {
	return fileDescriptor_3633bda7f8d63926, []int{0}
}

func (m *UserRoleId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRoleId.Unmarshal(m, b)
}
func (m *UserRoleId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRoleId.Marshal(b, m, deterministic)
}
func (m *UserRoleId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRoleId.Merge(m, src)
}
func (m *UserRoleId) XXX_Size() int {
	return xxx_messageInfo_UserRoleId.Size(m)
}
func (m *UserRoleId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRoleId.DiscardUnknown(m)
}

var xxx_messageInfo_UserRoleId proto.InternalMessageInfo

func (m *UserRoleId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetAllUserRolesRequest struct {
	ShipperId            string   `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	UserTypeId           string   `protobuf:"bytes,2,opt,name=user_type_id,json=userTypeId,proto3" json:"user_type_id,omitempty"`
	Page                 uint64   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint64   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllUserRolesRequest) Reset()         { *m = GetAllUserRolesRequest{} }
func (m *GetAllUserRolesRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllUserRolesRequest) ProtoMessage()    {}
func (*GetAllUserRolesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3633bda7f8d63926, []int{1}
}

func (m *GetAllUserRolesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllUserRolesRequest.Unmarshal(m, b)
}
func (m *GetAllUserRolesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllUserRolesRequest.Marshal(b, m, deterministic)
}
func (m *GetAllUserRolesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllUserRolesRequest.Merge(m, src)
}
func (m *GetAllUserRolesRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllUserRolesRequest.Size(m)
}
func (m *GetAllUserRolesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllUserRolesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllUserRolesRequest proto.InternalMessageInfo

func (m *GetAllUserRolesRequest) GetShipperId() string {
	if m != nil {
		return m.ShipperId
	}
	return ""
}

func (m *GetAllUserRolesRequest) GetUserTypeId() string {
	if m != nil {
		return m.UserTypeId
	}
	return ""
}

func (m *GetAllUserRolesRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllUserRolesRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetAllUserRolesResponse struct {
	UserRoles            []*UserRole `protobuf:"bytes,1,rep,name=user_roles,json=userRoles,proto3" json:"user_roles,omitempty"`
	Count                uint64      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetAllUserRolesResponse) Reset()         { *m = GetAllUserRolesResponse{} }
func (m *GetAllUserRolesResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllUserRolesResponse) ProtoMessage()    {}
func (*GetAllUserRolesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3633bda7f8d63926, []int{2}
}

func (m *GetAllUserRolesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllUserRolesResponse.Unmarshal(m, b)
}
func (m *GetAllUserRolesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllUserRolesResponse.Marshal(b, m, deterministic)
}
func (m *GetAllUserRolesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllUserRolesResponse.Merge(m, src)
}
func (m *GetAllUserRolesResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllUserRolesResponse.Size(m)
}
func (m *GetAllUserRolesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllUserRolesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllUserRolesResponse proto.InternalMessageInfo

func (m *GetAllUserRolesResponse) GetUserRoles() []*UserRole {
	if m != nil {
		return m.UserRoles
	}
	return nil
}

func (m *GetAllUserRolesResponse) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SavePermissionsRequest struct {
	UserRoleId           string                               `protobuf:"bytes,1,opt,name=user_role_id,json=userRoleId,proto3" json:"user_role_id,omitempty"`
	Permissions          []*SavePermissionsRequest_Permission `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *SavePermissionsRequest) Reset()         { *m = SavePermissionsRequest{} }
func (m *SavePermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*SavePermissionsRequest) ProtoMessage()    {}
func (*SavePermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3633bda7f8d63926, []int{3}
}

func (m *SavePermissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePermissionsRequest.Unmarshal(m, b)
}
func (m *SavePermissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePermissionsRequest.Marshal(b, m, deterministic)
}
func (m *SavePermissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePermissionsRequest.Merge(m, src)
}
func (m *SavePermissionsRequest) XXX_Size() int {
	return xxx_messageInfo_SavePermissionsRequest.Size(m)
}
func (m *SavePermissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePermissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SavePermissionsRequest proto.InternalMessageInfo

func (m *SavePermissionsRequest) GetUserRoleId() string {
	if m != nil {
		return m.UserRoleId
	}
	return ""
}

func (m *SavePermissionsRequest) GetPermissions() []*SavePermissionsRequest_Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type SavePermissionsRequest_Permission struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ActionIds            []string `protobuf:"bytes,2,rep,name=action_ids,json=actionIds,proto3" json:"action_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePermissionsRequest_Permission) Reset()         { *m = SavePermissionsRequest_Permission{} }
func (m *SavePermissionsRequest_Permission) String() string { return proto.CompactTextString(m) }
func (*SavePermissionsRequest_Permission) ProtoMessage()    {}
func (*SavePermissionsRequest_Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_3633bda7f8d63926, []int{3, 0}
}

func (m *SavePermissionsRequest_Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePermissionsRequest_Permission.Unmarshal(m, b)
}
func (m *SavePermissionsRequest_Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePermissionsRequest_Permission.Marshal(b, m, deterministic)
}
func (m *SavePermissionsRequest_Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePermissionsRequest_Permission.Merge(m, src)
}
func (m *SavePermissionsRequest_Permission) XXX_Size() int {
	return xxx_messageInfo_SavePermissionsRequest_Permission.Size(m)
}
func (m *SavePermissionsRequest_Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePermissionsRequest_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_SavePermissionsRequest_Permission proto.InternalMessageInfo

func (m *SavePermissionsRequest_Permission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SavePermissionsRequest_Permission) GetActionIds() []string {
	if m != nil {
		return m.ActionIds
	}
	return nil
}

type GetUserRolePermissionsResponse struct {
	Permissions          []*Permission `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetUserRolePermissionsResponse) Reset()         { *m = GetUserRolePermissionsResponse{} }
func (m *GetUserRolePermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserRolePermissionsResponse) ProtoMessage()    {}
func (*GetUserRolePermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3633bda7f8d63926, []int{4}
}

func (m *GetUserRolePermissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRolePermissionsResponse.Unmarshal(m, b)
}
func (m *GetUserRolePermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRolePermissionsResponse.Marshal(b, m, deterministic)
}
func (m *GetUserRolePermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRolePermissionsResponse.Merge(m, src)
}
func (m *GetUserRolePermissionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserRolePermissionsResponse.Size(m)
}
func (m *GetUserRolePermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRolePermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRolePermissionsResponse proto.InternalMessageInfo

func (m *GetUserRolePermissionsResponse) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func init() {
	proto.RegisterType((*UserRoleId)(nil), "genproto.UserRoleId")
	proto.RegisterType((*GetAllUserRolesRequest)(nil), "genproto.GetAllUserRolesRequest")
	proto.RegisterType((*GetAllUserRolesResponse)(nil), "genproto.GetAllUserRolesResponse")
	proto.RegisterType((*SavePermissionsRequest)(nil), "genproto.SavePermissionsRequest")
	proto.RegisterType((*SavePermissionsRequest_Permission)(nil), "genproto.SavePermissionsRequest.Permission")
	proto.RegisterType((*GetUserRolePermissionsResponse)(nil), "genproto.GetUserRolePermissionsResponse")
}

func init() { proto.RegisterFile("user_role_service.proto", fileDescriptor_3633bda7f8d63926) }

var fileDescriptor_3633bda7f8d63926 = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0xb5, 0x93, 0xcc, 0xcc, 0xb7, 0xa3, 0x05, 0x91, 0x25, 0xc6, 0xfb, 0xc0, 0xd3, 0x53, 0x60,
	0xe0, 0xd0, 0x6e, 0x94, 0xc1, 0x9e, 0xf6, 0x45, 0xc8, 0x43, 0xd9, 0x70, 0x57, 0x18, 0x7b, 0x09,
	0x4e, 0x7c, 0x97, 0x0a, 0x1c, 0x4b, 0xb3, 0xe4, 0x42, 0x9e, 0xf7, 0xdf, 0xf6, 0x3b, 0xf6, 0x53,
	0x86, 0xa5, 0x2a, 0x4e, 0x1a, 0x27, 0x6f, 0xd6, 0xb9, 0x5f, 0xe7, 0x1e, 0x1f, 0x09, 0x86, 0x95,
	0xc4, 0x72, 0x56, 0xf2, 0x1c, 0x67, 0x12, 0xcb, 0x3b, 0xb6, 0xc0, 0x58, 0x94, 0x5c, 0x71, 0xf2,
	0x78, 0x89, 0x85, 0xfe, 0x0a, 0x21, 0xad, 0xd4, 0xad, 0x41, 0xc3, 0x67, 0x4b, 0xce, 0x97, 0x39,
	0x8e, 0xf5, 0x69, 0x5e, 0xfd, 0x1a, 0xe3, 0x4a, 0xa8, 0xb5, 0x09, 0xd2, 0xe7, 0x00, 0x37, 0x12,
	0xcb, 0x84, 0xe7, 0x38, 0xcd, 0xc8, 0x29, 0x74, 0x58, 0x16, 0xb8, 0x91, 0x3b, 0xf2, 0x93, 0x0e,
	0xcb, 0xe8, 0x1f, 0x17, 0x06, 0x13, 0x54, 0x1f, 0xf2, 0xdc, 0x26, 0xc9, 0x04, 0x7f, 0x57, 0x28,
	0x15, 0x79, 0x01, 0x20, 0x6f, 0x99, 0x10, 0x58, 0xce, 0x36, 0x25, 0xfe, 0x3d, 0x32, 0xcd, 0x48,
	0x04, 0x4f, 0x34, 0x4b, 0xb5, 0x16, 0x58, 0x27, 0x74, 0x74, 0x02, 0xd4, 0xd8, 0xf7, 0xb5, 0xa8,
	0x67, 0x11, 0xe8, 0x89, 0x74, 0x89, 0x41, 0x37, 0x72, 0x47, 0xbd, 0x44, 0x7f, 0x93, 0x3e, 0x3c,
	0xca, 0xd9, 0x8a, 0xa9, 0xa0, 0xa7, 0x41, 0x73, 0xa0, 0x73, 0x18, 0xee, 0x91, 0x90, 0x82, 0x17,
	0x12, 0xc9, 0x39, 0xc0, 0x46, 0x0c, 0x19, 0xb8, 0x51, 0x77, 0x74, 0x72, 0x41, 0x62, 0x2b, 0x43,
	0x6c, 0x0b, 0x12, 0xbf, 0xb2, 0xa5, 0xf5, 0x8c, 0x05, 0xaf, 0x0a, 0xa5, 0x29, 0xf5, 0x12, 0x73,
	0xa0, 0x7f, 0x5d, 0x18, 0x5c, 0xa7, 0x77, 0xf8, 0x0d, 0xcb, 0x15, 0x93, 0x92, 0xf1, 0x62, 0xb3,
	0xa9, 0x5d, 0x45, 0x0b, 0xbe, 0xd9, 0x15, 0xaa, 0x46, 0xb6, 0x2b, 0x38, 0x11, 0x4d, 0x5d, 0xd0,
	0xd1, 0x34, 0x5e, 0x37, 0x34, 0xda, 0x1b, 0xc7, 0x0d, 0x94, 0x6c, 0xd7, 0x87, 0xef, 0x01, 0x9a,
	0xd0, 0xc3, 0x7f, 0x52, 0x0b, 0x9f, 0x2e, 0x14, 0xe3, 0xc5, 0x8c, 0x65, 0x66, 0x96, 0x9f, 0xf8,
	0x06, 0x99, 0x66, 0x92, 0xfe, 0x80, 0x97, 0x13, 0x54, 0x76, 0xf1, 0x9d, 0xa9, 0xf7, 0x9a, 0x5d,
	0xee, 0xb2, 0x35, 0xa2, 0xf5, 0x1b, 0xb6, 0x07, 0x68, 0x5d, 0xfc, 0xeb, 0xc2, 0x99, 0xed, 0x7b,
	0x6d, 0x7c, 0x47, 0xde, 0x82, 0xf7, 0xa9, 0xc4, 0x54, 0x21, 0x69, 0x51, 0x3d, 0xec, 0xef, 0x63,
	0xd3, 0x8c, 0x3a, 0xe4, 0x1c, 0xba, 0x13, 0x54, 0xa4, 0x35, 0x1c, 0xb6, 0x34, 0xa2, 0x0e, 0xf9,
	0x0a, 0x9e, 0xf1, 0x00, 0x89, 0x9a, 0x78, 0xbb, 0x35, 0xc3, 0x57, 0x47, 0x32, 0x8c, 0x06, 0xd4,
	0x21, 0x97, 0xe0, 0xdd, 0x88, 0xec, 0x10, 0xf3, 0x41, 0x6c, 0x2e, 0x4d, 0x6c, 0x2f, 0x4d, 0xfc,
	0xa5, 0xbe, 0x34, 0xd4, 0x21, 0xef, 0xc0, 0xfb, 0x8c, 0x39, 0x2a, 0x3c, 0x40, 0xff, 0x70, 0xe5,
	0x15, 0x9c, 0x3d, 0x30, 0xc2, 0xf6, 0x2e, 0xed, 0x1e, 0x39, 0xd2, 0x2e, 0x81, 0xd3, 0x09, 0xaa,
	0xed, 0x6e, 0xed, 0x84, 0x46, 0x3b, 0x6a, 0x1c, 0x31, 0x06, 0x75, 0x3e, 0x0e, 0x7f, 0x3e, 0xb5,
	0xc9, 0xe3, 0xfa, 0x05, 0xb1, 0xef, 0xcb, 0xdc, 0xd3, 0xd8, 0x9b, 0xff, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x57, 0xf0, 0x86, 0x6f, 0x7b, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserRoleServiceClient is the client API for UserRoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserRoleServiceClient interface {
	Create(ctx context.Context, in *UserRole, opts ...grpc.CallOption) (*UserRoleId, error)
	Get(ctx context.Context, in *UserRoleId, opts ...grpc.CallOption) (*UserRole, error)
	GetAll(ctx context.Context, in *GetAllUserRolesRequest, opts ...grpc.CallOption) (*GetAllUserRolesResponse, error)
	Update(ctx context.Context, in *UserRole, opts ...grpc.CallOption) (*emptypb.Empty, error)
	Delete(ctx context.Context, in *UserRoleId, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SavePermissions(ctx context.Context, in *SavePermissionsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetPermissions(ctx context.Context, in *UserRoleId, opts ...grpc.CallOption) (*GetUserRolePermissionsResponse, error)
}

type userRoleServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserRoleServiceClient(cc *grpc.ClientConn) UserRoleServiceClient {
	return &userRoleServiceClient{cc}
}

func (c *userRoleServiceClient) Create(ctx context.Context, in *UserRole, opts ...grpc.CallOption) (*UserRoleId, error) {
	out := new(UserRoleId)
	err := c.cc.Invoke(ctx, "/genproto.UserRoleService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) Get(ctx context.Context, in *UserRoleId, opts ...grpc.CallOption) (*UserRole, error) {
	out := new(UserRole)
	err := c.cc.Invoke(ctx, "/genproto.UserRoleService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) GetAll(ctx context.Context, in *GetAllUserRolesRequest, opts ...grpc.CallOption) (*GetAllUserRolesResponse, error) {
	out := new(GetAllUserRolesResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserRoleService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) Update(ctx context.Context, in *UserRole, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.UserRoleService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) Delete(ctx context.Context, in *UserRoleId, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.UserRoleService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) SavePermissions(ctx context.Context, in *SavePermissionsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.UserRoleService/SavePermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) GetPermissions(ctx context.Context, in *UserRoleId, opts ...grpc.CallOption) (*GetUserRolePermissionsResponse, error) {
	out := new(GetUserRolePermissionsResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserRoleService/GetPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserRoleServiceServer is the server API for UserRoleService service.
type UserRoleServiceServer interface {
	Create(context.Context, *UserRole) (*UserRoleId, error)
	Get(context.Context, *UserRoleId) (*UserRole, error)
	GetAll(context.Context, *GetAllUserRolesRequest) (*GetAllUserRolesResponse, error)
	Update(context.Context, *UserRole) (*emptypb.Empty, error)
	Delete(context.Context, *UserRoleId) (*emptypb.Empty, error)
	SavePermissions(context.Context, *SavePermissionsRequest) (*emptypb.Empty, error)
	GetPermissions(context.Context, *UserRoleId) (*GetUserRolePermissionsResponse, error)
}

// UnimplementedUserRoleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserRoleServiceServer struct {
}

func (*UnimplementedUserRoleServiceServer) Create(ctx context.Context, req *UserRole) (*UserRoleId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserRoleServiceServer) Get(ctx context.Context, req *UserRoleId) (*UserRole, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedUserRoleServiceServer) GetAll(ctx context.Context, req *GetAllUserRolesRequest) (*GetAllUserRolesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedUserRoleServiceServer) Update(ctx context.Context, req *UserRole) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedUserRoleServiceServer) Delete(ctx context.Context, req *UserRoleId) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedUserRoleServiceServer) SavePermissions(ctx context.Context, req *SavePermissionsRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavePermissions not implemented")
}
func (*UnimplementedUserRoleServiceServer) GetPermissions(ctx context.Context, req *UserRoleId) (*GetUserRolePermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPermissions not implemented")
}

func RegisterUserRoleServiceServer(s *grpc.Server, srv UserRoleServiceServer) {
	s.RegisterService(&_UserRoleService_serviceDesc, srv)
}

func _UserRoleService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRole)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserRoleService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).Create(ctx, req.(*UserRole))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRoleId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserRoleService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).Get(ctx, req.(*UserRoleId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllUserRolesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserRoleService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).GetAll(ctx, req.(*GetAllUserRolesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRole)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserRoleService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).Update(ctx, req.(*UserRole))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRoleId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserRoleService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).Delete(ctx, req.(*UserRoleId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_SavePermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).SavePermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserRoleService/SavePermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).SavePermissions(ctx, req.(*SavePermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_GetPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRoleId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).GetPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserRoleService/GetPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).GetPermissions(ctx, req.(*UserRoleId))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserRoleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.UserRoleService",
	HandlerType: (*UserRoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserRoleService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UserRoleService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _UserRoleService_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UserRoleService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _UserRoleService_Delete_Handler,
		},
		{
			MethodName: "SavePermissions",
			Handler:    _UserRoleService_SavePermissions_Handler,
		},
		{
			MethodName: "GetPermissions",
			Handler:    _UserRoleService_GetPermissions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_role_service.proto",
}
